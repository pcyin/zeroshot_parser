{"nl": "Most recent keyphrasename0 conference ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "What papers have authorname0 and authorname1 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "papers on keyphrasename0 experiments", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers were at venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "List of papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keyphrasename0 later than year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "variables": {}}
{"nl": "datasets for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "how many papers authorname0 and authorname1 coauthored ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "papers with more than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is larger than 10", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "How many citations does authorname0 has ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "papers on keyphrasename0 appeared at venuename0 last year", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "which papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Who writes the most papers in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "venuename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "datasets used in papers written by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "papers that used keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what is the most cited paper of authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "how many papers did authorname0 and authorname1 write together", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "What is the latest paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "Papers written by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "What are the most recent papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "what were some keyphrasename0 based papers in venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "List the journals published in March , year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose publication year is 2012", "variables": {}}
{"nl": "how many keyphrasename0 papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers has authorname0 published in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "most recent papers of authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "papers at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "keyphrasename0 datasets", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "authors working on datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "author that writes paper whose dataset is reviews", "variables": {}}
{"nl": "how many papers accepted in venuename0 year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What is authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "venuename0 papers with less than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {}}
{"nl": "How many papers are in keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers in venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "authorname0 's papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "papers about datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "What are keyphrases by authorname0 in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "most cited papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "What journals are authorname0 's articles published in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "authorname0 keyphrasename0 paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers related to keyphrasename0 in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "What is the most cited paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "What is authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "How many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "What is the earliest keyphrasename1 paper for keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and that has the smallest publication year", "variables": {}}
{"nl": "who published the most papers in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers on keyphrasename0 venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "in what venues does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "Which is the earliest paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {}}
{"nl": "What conferences did authorname0 publish in in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "Who publishes in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "keyphrases used by authorname0 in his venuename0 papers", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "List all academic papers on title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose title is neural attention", "variables": {}}
{"nl": "Does authorname0 publish in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "are there keyphrasename0 papers that use keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "What is the highest cited paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "Show me the papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What topic does authorname0 write about ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0 from year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "most recent papers written by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "papers that are coauthored by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "How many papers did authorname0 publish at venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "Which paper from venuename0 year0 was cited most ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {}}
{"nl": "how many papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers published in the area of keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers that use datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "Show me keyphrasename0 papers .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers used datasetname0 dataset ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {}}
{"nl": "How many citations does authorname0 has ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "who has written the most papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what papers were published in journalname0 in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose journal is cell and whose publication year is 2012", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Papers about venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "conferences that mention datasetname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose dataset is reviews", "variables": {}}
{"nl": "What papers has written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "year0 papers using datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose publication year is 2012 and whose dataset is reviews", "variables": {}}
{"nl": "How many papers did authorname0 cite ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Who are authorname0 's coauthors", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 in keyphrasename1 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "which venue publishes the most papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "venue that is venue of the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Papers on datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What conference does authorname0 publish the most in", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "venue that is venue of the most number of paper that noah smith writes", "variables": {}}
{"nl": "how many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "who published the most in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 experiments", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Who is a coauthor with authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper and that writes paper that noah smith writes", "variables": {}}
{"nl": "conference papers of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "papers about keyphrasename0 in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Who are the authors with the most published papers in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers on keyphrasename0 appeared at venuename0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "how many papers does authorname0 have at venuename0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "how many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "first keyphrasename0 paper", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "Keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "papers published in the last year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that has the largest publication year", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "In what years did authorname0 publish a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "how many papers are in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose venue is nature", "variables": {}}
{"nl": "How many paper has authorname0 written about keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Has authorname0 written any papers in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "datasetname0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "keyphrasename0 research papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What papers have been written by authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "What has authorname0 published ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "what are the collaborations of authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "How many papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers where authorname0 is an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "latest keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "journal papers for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Datasets by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "keywords used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "what datasets were used by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "What paper by authorname0 has the most citation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "What was the first paper on keyphrasename0 written ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "Find journals about keyphrasename0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "number of papers published in venuename0 year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "How many times was authorname0 cited ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "papers about datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "keyphrasename0 papers not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What journals does authorname0 publish most in ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string journal_paper_journal ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "journal that is journal of the most number of paper that noah smith writes", "variables": {}}
{"nl": "How many papers were written on keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What was authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "datasets in keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "venuename0 papers in year0 about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "what papers did venuename0 publish ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "What papers were written by authors authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "papers about keyphrasename0 published at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "venuename0 papers in year0 on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Who cites authorname0 most ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is citation count of noah smith and that has the largest citation count", "variables": {}}
{"nl": "how many papers appeared at venuename0 last year", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What conferences does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "venuename0 year0 conference", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Papers from venuename0 year0 conference", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "venue for keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue_paper_venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "venue that is venue of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "List papers that has a keyword keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keywords in the papers written by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "has any paper tried keyphrasename0 for keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "Papers from venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Which papers have authorname0 and authorname1 as co-authors ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "What is authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "When did authorname0 and authorname1 collaborate ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "How many papers did authorname0 publish in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "list datasets for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Show me the most recent papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "Who has published the most number of papers with authorname0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes the most number of paper that noah smith writes", "variables": {}}
{"nl": "How many papers were written on keyphrasename0 in the past year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "How many citation authorname0 has ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "keyphrases used by authorname0 in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "most cited papers for keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "venuename0 authors", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {}}
{"nl": "How many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 papers with most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "In what years did authorname0 publish a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "When does authorname0 publish the first venuename0 paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and whose venue is nature and that has the smallest publication year", "variables": {}}
{"nl": "datasets used by keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "conferences in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose publication year is 2012", "variables": {}}
{"nl": "What conferences does authorname0 publish in the most ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "venue that is venue of the most number of paper that noah smith writes", "variables": {}}
{"nl": "in what venues does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "What are all the publication titles by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ) )", "can": "title of paper that noah smith writes", "variables": {}}
{"nl": "most recent research interests of authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "datasets mentioned at venuename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is nature", "variables": {}}
{"nl": "venuename0 papers in year0 in keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "papers published at venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "who published keyphrasename0 papers at venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many venuename0 papers did authorname0 written in the last year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "what are the papers that have authorname0 and authorname1 as co-authors", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "List the papers on keyphrasename0 that were published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "datasets for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrases used by authorname0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "what are most cited papers of authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "journal articles by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 papers from venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Papers published in year0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "earliest paper written by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {}}
{"nl": "What papers were written on keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "How many papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "what year was the first keyphrasename0 paper published ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "Papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "What conferences did authorname0 submit to in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "What are the most recent papers written in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers using datasetname0 or datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {}}
{"nl": "authorname0 's papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "How many papers are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "number of paper", "variables": {}}
{"nl": "papers from year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "in what conferences does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "coauthors of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers at venuename0 related to keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "how many papers in venuename0 year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "What papers talk about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What are some survey papers on keyphrasename0 problems in keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "how is the most cited author in venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {}}
{"nl": "What are the papers of authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "What is the most recent paper of keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "Who writes the most papers in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper and that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Does authorname0 have any papers published ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "What was authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "How many papers have authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "who has written the most papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "most recent keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "who is the most cited author at venuename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and that has the largest citation count", "variables": {}}
{"nl": "keyphrasename1 for keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "papers written by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "Has authorname0 published any papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "What is the most cited paper of authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "What papers has authorname0 written in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "how many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "What papers has authorname0 written about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "Who has published the most papers in venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {}}
{"nl": "venuename0 papers in year0 on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers are about keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Papers by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "Who has coauthored with authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "authorname0 's paper about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Show me venuename0 papers .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What is the paper with the most citation about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "What papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "How many papers by authorname0 and authorname1", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "keyphrases used by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "latest keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "What are some papers dealing with keyphrasename0 in datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is reviews", "variables": {}}
{"nl": "who are the authors at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {}}
{"nl": "who writes papers with authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "Which journals did authorname0 submit papers to ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "authorname0 citation count", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "authorname0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "When was authorname0 keyphrasename0 published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers related to keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "most cited by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "variables": {}}
{"nl": "how many keyphrasename0 papers did venuename0 year0 have ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "Keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "who is the most published author in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "When did authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "how many papers are based on datasetname0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {}}
{"nl": "What did authorname0 published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "how many papers by authorname1 are cited by authorname0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) ) )", "can": "number of paper that richard anderson writes and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "How many papers were published on keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "How many papers written on datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {}}
{"nl": "Authors of papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which papers used datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "most cited keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "hot topics at venuename0 year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What years did authorname0 publish papers in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "Papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "How many papers does authorname0 have in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {}}
{"nl": "List the popular publications on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 papers used in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "top author in keyphrasename0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers from year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "who wrote papers in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose publication year is 2012", "variables": {}}
{"nl": "Who wrote keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 papers that have the most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "When did authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "how many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Fetch me some papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "are there any keyphrasename0 papers since year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "papers about keyphrasename0 in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Datasets with keyphrasename0 information", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "authorname0 's papers in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "find me paper on using keyphrasename0 for keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "papers by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "what are the most popular datasets used in keyphrasename0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "dataset that is dataset of the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which venuename0 year0 papers have been cited the most ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {}}
{"nl": "what author is most cited ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author that has the largest citation count", "variables": {}}
{"nl": "what papers have fewer than misc0 citations by venuename0 papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {}}
{"nl": "venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "What are the latest publications on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "How many papers has authorname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "How many papers were published in venuename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many citations does authorname0 's keyphrasename0 paper have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Papers written by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "How many citations does authorname0 's keyphrasename0 paper have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What is authorname0 's highest cited paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "which papers use datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "which papers has authorname0 cited the most ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "keywords shared by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "keyphrasename0 papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "topics at venuename0 year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers did authorname0 write last year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "what are some keyphrasename0 papers that authorname0 did not write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which venuename0 year0 papers have the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {}}
{"nl": "How many papers on venuename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "what datasets are used in papers by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "How many papers did authorname0 publish in year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "in what journals does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "papers that mention keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "newest keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "what did authorname0 write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "List of papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "number of papers written by authorname0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "Papers authored by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "How many papers do authorname0 and authorname1 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "How many papers were written on the keyphrasename0 this year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "Does authorname0 do keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what papers have fewer than misc0 citations by venuename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {}}
{"nl": "Paper on keyphrasename0 with most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "Which paper should I read about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "show me papers by authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Which papers were accepted in venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keyphrasename0 papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "List the journals related to keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Journal Papers by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "how many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "List the papers that used datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "what papers have fewer than misc0 citations by venuename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {}}
{"nl": "How many papers by authorname0 contain the keyphrases keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0 published at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "conferences that authorname0 has published in", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "papers coauthored by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "keyphrasename0 publications", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "who has the most publications in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "author who wrote papers with authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "What papers has authorname0 written on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What are the papers of authorname0 in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which year had the most venuename0 papers ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is nature and that has the largest publication year", "variables": {}}
{"nl": "Papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Who has written the most papers at venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {}}
{"nl": "What are the papers from venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keyphrasename0 paper by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what was the first keyphrasename0 paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "I want the papers on keyphrasename0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers published in venuename0 year0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What was the conference name that approved keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "how many authorname0 papers are in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "who does authorname0 author with ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper and that writes paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "In year0 what journal published an article about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "What has authorname0 published at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "How many publications were added to the journalname0 journal this year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose journal is cell and whose publication year is 2012", "variables": {}}
{"nl": "How many papers were written on keyphrasename0 this year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "papers using datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "data sets for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What conference does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "How many papers does authorname0 have in keyphrasename0 area ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What conference does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "When was authorname0 's first publication ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and that has the smallest publication year", "variables": {}}
{"nl": "citation count of authorname0 's papers", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "What papers were published during the conference venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "who authored papers at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {}}
{"nl": "how many papers about keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "main topics of work by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 dataset", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "When was authorname0 's first paper written ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and that has the smallest publication year", "variables": {}}
{"nl": "What papers were published at venuename0 in year0 were about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What are the latest papers by authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that richard anderson writes and that has the largest publication year", "variables": {}}
{"nl": "keyphrases authorname0 used in papers written last year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "what are the papers in venuename0 about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "what topics does authorname0 write about most ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "keyphrase that is keyphrase of the most number of paper that noah smith writes", "variables": {}}
{"nl": "which author has the largest number of publications ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author that writes the most number of paper", "variables": {}}
{"nl": "What papers were published in venuename0 in year0 about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "What conferences does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "what venue does authorname0 publish the most in", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "venue that is venue of the most number of paper that noah smith writes", "variables": {}}
{"nl": "what keywords are used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "Most cited papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "most common topics at venuename0 year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "papers using datasetname0 and datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is blogs or reviews", "variables": {}}
{"nl": "are there any keyphrasename0 papers not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "Has authorname0 and authorname1 written a paper together ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "who has written the most keyphrasename0 papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 papers since year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "How many papers were written on keyphrasename0 in year0 through 2016 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "variables": {}}
{"nl": "How many papers run experiments on datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {}}
{"nl": "what datasets did authorname0 use ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "who publishes papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "What is authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "Which authors published papers in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose publication year is 2012", "variables": {}}
{"nl": "papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "List papers that has a keyword keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "what are the most cited papers by authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "variables": {}}
{"nl": "authorname0 's papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "How many papers related to keyphrasename0 cited the dataset datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose dataset is reviews", "variables": {}}
{"nl": "venuename0 papers in year0 on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "what topics does authorname0 publish in", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "people working on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "Does authorname0 ever collaborated with authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "list papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "Keyphrases used by authorname0 in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "In which conferences does authorname0 typically publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "How many papers were accepted at venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "keywords used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "what are keyphrasename0 papers not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers related to keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "papers by authorname0 about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "authors who collaborated with authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "How many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "How many papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "papers authorname0 wrote about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 papers not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "most recent papers by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "datasets with keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename1 papers using keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
