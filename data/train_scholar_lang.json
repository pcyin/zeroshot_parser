{"nl": "what papers authorname0 wrote with authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what paper was wrote by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what paper is authored by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what papers did authorname0 wrote together with authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "which papers were written by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what papers were co - authored by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "which papers authorname0 and authorname1 authored ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "papers by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what papers were published jointly by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what paper was written by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what papers were coauthored by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "list all papers by authorname0 and authorname1", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "papers by authorname0 and authorname1", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "papers authorname0 and authorname1 published together", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "which author wrote about keyphrasename0 the most ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who published the most papaers related to keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who published the mlargest amount of keyphrasename0 papers ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who wrote the most papers about keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who has written the most number of keyphrasename0 papers ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which author writes the most amount of papers about keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who has the most keyphrasename0 papers ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "what authoer wrote the most papers about keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "what author wrote the largest number of papers about keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many citations does authorname0 have ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "how many times was authorname0 cited ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "authorname0 citations number", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "how many times was authorname0 cited ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "what is the citation count of authorname0 ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "what 's the citation count of authorname0 ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "how many citations does authorname0 has ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "how many citations does authorname0 have ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "how many citations authorname0 has ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "list the papers that have appeared in venuename0 .", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what papers were published in venuename0 ?", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what papers were published in venuename0 ?", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what papers were published at venuename0 ?", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "list all the papers published in venuename0", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "list all papers in venuename0", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "which papers were published in venuename0 ?", "can": "paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what papers authorname0 published in year0", "can": "number of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what paper is authored by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "list all papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers did authorname0 published", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "return papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what are the papers of authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "authorname0 papers", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "authorname0 is the author of which paper ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers written by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers authorname0 wrote ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "list all the papers authored by authorname0 .", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "paper whose its author is authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers that authorname0 published", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers of authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers did authorname0 publish ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "which papers did authorname0 write ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers did authorname0 author ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what are authorname0 's papers ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers were written by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what are the papers of authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what paper is written by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "which papers were written by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers having authorname0 as an author", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "list all papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what was authorname0 's latest publication ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the last published paper by authorname0 ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the most recently published paper by authorname0 ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what papers did authorname0 publish in the last year ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the most recent paper written by authorname0 ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which are the most recent papers published by authorname0 ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what papers did authorname0 publish in the largest publication year ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers published after year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "what are papers about keyphrasename0 that were published after year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "which papers about keyphrasename0 were published after year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers about keyphrasename0 were published after year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "keyphrasename0 papers since year0", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 writes", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many authorname0 papers on semantic parsing was published on venuename0", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 published on venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers by authorname0 were published in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many times authorname0 published on venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many venuename0 papers does authorname0 have ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers by authorname0 were published in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 publish in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers of authorname0 were in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers by authorname0 were in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 publish in venuename0 ?", "can": "number of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "what is the paper that its title is title0", "can": "paper whose title is neural attention", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) )", "variables": {}}
{"nl": "what is the most cited paper out of the papers published in venuename0 year0 ?", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what is the most cited venuename0 paper on year0 ?", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what venuename0 paper from year0 has been sited the most ?", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which year0 title0 paper was published in venuename0 and had a review dataset ?", "can": "paper whose title is neural attention and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which title0 papers in venuename0 year0 introduce datasets based on reviews ?", "can": "paper whose title is neural attention and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "how many papers were published in the field of keyphrasename0 ?", "can": "number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many papers are about keyphrasename0 ?", "can": "number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "what is the number of papers that are about keyphrasename0 ?", "can": "number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "authorname0 authored how many papers ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 authored ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what is the amount of papers written by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers were written by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers were published by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "number of papers by authorname0", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 author ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "count the amount of paper written by authorname0", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers by authorname0 are there", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers were wrote by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 has", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 writes", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 author ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many paper did authorname0 published ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "authorname0 how many papers", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers were written by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers include authorname0 as an author ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 publish", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "papers by authorname0", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the keyphrase of papers by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what was the subjects authorname0 published papers in ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the topics of authorname0 's papers ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "authorname0 keyphrase paper", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the papers that were written by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the key topics of papers by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is the subject of papers by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "keyphrase paper by authorname0", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "in what field does authorname0 publish papers ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what were authorname0 's papers about ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the keyphrase of paper by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "on which topics has authorname0 written a paper ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the topics of authorname0 's papers ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the kayphrases of papers by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is the keyphrase of authorname0 paper ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what papers did authorname0 write ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "show me keyphrases of papers by authorname0", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what were the main research areas of papers by authorname0 ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the keypharses of authorname0 papers ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "which all topics has authorname0 published a paper on ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "topics of authorname0 's papers", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "on what topics does authorname0 write ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the publication venues of papers written by authorname0", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "in what venues did authorname0 publish ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "authorname0 conferences", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "how many papers are there ?", "can": "number of paper", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write about keyphrasename0 ?", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many papers on keyphrasename0 did authorname0 write ?", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many papers related to keyphrasename0 did authorname0 published ?", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "where did authorname0 published in year0 ?", "can": "venue of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "where authorname0 published on year0 ?", "can": "venue of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "in which journals did authorname0 publish papers in year0 ?", "can": "venue of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "authorname0 year0 conferences", "can": "venue of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "which papers writen by authorname0 and authorname1 have the most amount of citations ?", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which paper has the most citation and was written by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were published in venuename0 in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "list the keyphrasename0 papers published in venuename0 year0 .", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which keyphrasename0 papers appeared in venuename0 year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which papers about keyphrasename0 were published in venuename0 in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "list the keyphrasename0 papers that appeared in venuename0 year0 .", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which papers were published in venuename0 in year0 and are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were presented in venuename0 in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "keyphrasename0 papers published in venuename0 year0", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers form year0 were published in venuename0 journal ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were published in venuename0 in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers published on venuename0 in year0", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which venuename0 papers on keyphrasename0 were released in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "show me keyphrasename0 papers published in year0 in venuename0", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were published in venuename0 in year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what are papers about keyphrasename0 that were published in year0 in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers about keyphrasename0 were published in venuename0 year0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "wich keyphrasename0 parsing dataset has the most papers ?", "can": "dataset that is dataset of the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "list all keyphrasename0 papers .", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "show all papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers are there about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what are all keyphrasename0 papers ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which papers are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "return papers whose keyphrase is keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list all keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which paper has a keyphrase \" keyphrasename0 \" ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which papers are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what paper are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list all keyphrasename0 pepers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "papers on keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list all the keyphrasename0 papers .", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what paper are related to keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "return keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers were published by authorname0 after year0 ?", "can": "paper that noah smith writes and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "which topic is authorname0 's most recent paper on ?", "can": "keyphrase of paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is the keyphrase of the latest authorname0 paper ?", "can": "keyphrase of paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is the topic of authorname0 's most recent paper ?", "can": "keyphrase of paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "which papers did authorname0 author ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers that authorname0 wrote", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers are published by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "which papers are authored by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "how many papers about keyphrasename0 were published in venuename0 in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers about keyphrasename0 were published in venuename0 in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what papers authorname0 wrote on keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which authorname0 paper is about keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers did authorname0 write about keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list the keyphrasename0 papers written by authorname0 .", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which papers did authorname0 write about keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what keyphrasename0 papers did authorname0 write ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers about keyphrasename0 were written by authorname0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what paper of authorname0 is about keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "authorname0 keyphrasename0 papers", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "authorname0 's year0 papers", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers by authorname0 were published in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers were published by authorname0 on year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers did authorname0 publish in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers did authorname0 write in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers authorname0 published in year0", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers of authorname0 published in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "list the papers published by authorname0 in year0 .", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which keyphrasename0 papers were published in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what keyphrasename0 paper published on venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "which keyphrasename0 papers were published in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "which keyphrasename0 papers were published in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what papers about keyphrasename0 appeared in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "which venuename0 paper was about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what are papers about keyphrasename0 that were published in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what venuename0 paper is about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "number of authors that wrote a paper with authorname0", "can": "number of author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "keyphrase authorname0 year0 paper", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is authorname0 paper of year0 about ?", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "authorname0 papers published in year0 are about what topics ?", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what were authorname0 's papers from year0 about ?", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what author has the most citations ?", "can": "author that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "which papers used either of the datasets reviews or blogs ?", "can": "paper whose dataset is reviews or blogs", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat fb:en.dataset.wordnet fb:en.dataset.imagenet ) ) )", "variables": {}}
{"nl": "which papers introduce a dataset based on reviews or blogs .", "can": "paper whose dataset is reviews or blogs", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat fb:en.dataset.wordnet fb:en.dataset.imagenet ) ) )", "variables": {}}
{"nl": "what papers use reviews or blogs as dataset", "can": "paper whose dataset is reviews or blogs", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat fb:en.dataset.wordnet fb:en.dataset.imagenet ) ) )", "variables": {}}
{"nl": "at what journals does authorname0 publish", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "authorname0 published papers on which journals ?", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "what venuename0 paper published in year0 has the most citations ?", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "who published papers in venuename0 year0 ?", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "name the authors that published a venuename0 paper in year0 .", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "which author published in venuename0 at year0 ?", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "who wrote papers that were published in venuename0 in year0 ?", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "name the scientiests whose papers were published in venuename0 in year0", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers about keyphrasename0 were published in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers uses the reviews dataset ?", "can": "number of paper whose dataset is reviews", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "variables": {}}
{"nl": "how many papers discuss reviews datasets ?", "can": "number of paper whose dataset is reviews", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "variables": {}}
{"nl": "how many papers employed the reviews dataset ?", "can": "number of paper whose dataset is reviews", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "variables": {}}
{"nl": "how many papers use the reviews dataset ?", "can": "number of paper whose dataset is reviews", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "variables": {}}
{"nl": "how many citations do papers by authorname0 conatin ?", "can": "number of paper that paper that noah smith writes cites", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "how many papers were cited by authorname0 ?", "can": "number of paper that paper that noah smith writes cites", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "how many papers cite works by authorname0 ?", "can": "number of paper that paper that noah smith writes cites", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "when did authorname0 first publish in venuename0 ?", "can": "publication year of paper that noah smith writes and whose venue is nature and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what datesets appear on keyphrasename0 papers ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "keyphrasename0 datasets", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "datasets used in keyphrasename0 papers", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets are used by keyphrasename0 papers ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets are used in keyphrasename0 papers ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets are used in papers about keyphrasename0 ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "datasets for keyphrasename0", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what dataset were published for keyphrasename0 papers ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets used in keyphrasename0 papers", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "where did authorname0 publish he 's papers ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "authorname0 published papers in which venues ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "what venues did authorname0 publish in ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the number of papers published in venuename0 in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published venuename0 in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 publish in venuename0 year0 ?", "can": "number of paper that noah smith writes and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the first paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the oldest paper written about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what datasets used by venuename0 papers ?", "can": "dataset of paper whose venue is nature", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "authorname0 keyphrasename0 papers in venuename0 year0", "can": "paper that noah smith writes and whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "how many keyphrasename0 papers were published in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers about keyphrasename0 were published in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many keyphrasename0 papers were released in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "when was the conference with the most number of papers ?", "can": "publication year of paper whose venue is venue that is venue of the most number of paper", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "can not paraphrase", "can": "publication year of paper whose venue is venue that is venue of the most number of paper", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "when was the paper that participated in the conference with the most papers published ?", "can": "publication year of paper whose venue is venue that is venue of the most number of paper", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which other authers collaberated with authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who are the co authors of authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "including himself , which authors appear on authorname0 's papers ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who are the authors that authorname0 published with ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what authors wrote papers with authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who are all the authors in papers by authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how are authorname0 coauthors ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who are authorname0 co - authors ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who are the co - authors of authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who co - authored papers with authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who wrote papers with authorname0 ?", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "all authors that wrote authorname0 's papers", "can": "author that writes paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what datasets appeared in papers by authorname0 ?", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets authorname0 papers uses ?", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "datasets used in authorname0 's papers", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what dataset were published for papers by authorname0 ?", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "what datasets are used in papers by authorname0 ?", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "which datasets are related to papers written by authorname0 ?", "can": "dataset of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "list papers on keyphrasename0 that use keyphrasename1", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "papers on keyphrasename0 and keyphrasename1", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "what keyphrasename1 papers are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "keyphrasename0 and keyphrasename1 papers", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "which keyphrasename0 papers involve keyphrasename1 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "which papers are about keyphrasename0 and keyphrasename1 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "keyphrasename0 and keyphrasename1 paper ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "what is the most recently published paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "most recent keyphrasename0 paper", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were published in the largest publication year ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the most recently published paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which are the most recent keyphrasename0 papers ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers published in the current year ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers are published since january ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which papers in the largest publication year are about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "the most recenty published keyphrasename0 papers ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the latest published keyphrasename0 paper ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "in which years did authorname0 published ?", "can": "publication year of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "authors cited by authorname0", "can": "author that writes paper that paper that noah smith writes cites", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "what papers cite authorname0 's paper ?", "can": "paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "authorname0 citations", "can": "paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "papers that cite authorname0", "can": "paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "which papers cite papers by authorname0 ?", "can": "paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "return journals which publish keyphrasename0 papers", "can": "journal of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "who wrote the most papers about keyphrasename0 since year0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "who is the most prolific author about keyphrasename0 since year0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "who wrote the most papers about keyphrasename0 in year0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many times were keyphrasename0 papers by authorname0 cited ?", "can": "total citation count of paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ) ) )", "variables": {}}
{"nl": "what 's the total citation count of papers on keyphrasename0 that authorname0 wrote ?", "can": "total citation count of paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ) ) )", "variables": {}}
{"nl": "what papers on keyphrasename0 published before year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "variables": {}}
{"nl": "which keyphrasename0 papers were published before year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers were published on year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "variables": {}}
{"nl": "what paper related to keyphrasename0 where published up to year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "variables": {}}
{"nl": "what are the keyphrasename0 related papers published prior to year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "variables": {}}
{"nl": "what is the topic of most of the papers of authorname0 ?", "can": "keyphrase that is keyphrase of the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how man papers about keyphrasename0 cites papers about reviews datseta ?", "can": "number of paper whose keyphrase is semantic parsing and that cites paper whose dataset is reviews", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) ) )", "variables": {}}
{"nl": "what keyphrasename0 paper he s the largest number of citation ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which paper has the most citations and is about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which keyphrasename0 papers have the largest amount of citations ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which paper about keyphrasename0 was citated the most ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which is the most cited keyphrasename0 paper ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which the most cited keyphrasename0 paper ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which paper with the most citations count was written by authorname0 ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what authorname0 paper has the most citations ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which authorname0 papers have the largest number of citations ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which of authorname0 's paper has the most citations ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what is the most cited paper by authorname0 ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "how many papers were written by authorname0 in year0 ?", "can": "number of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 published in year0 ?", "can": "number of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 publish in year0 ?", "can": "number of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the first paper that authorname0 publish ?", "can": "paper that noah smith writes and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the first paper authorname0 wrote ?", "can": "paper that noah smith writes and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the first paper that authorname0 wrote ?", "can": "paper that noah smith writes and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "count the amount of papers written by authorname0 and authorname1 ?", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 and authorname1 write together ?", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 and authorname1 publish", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "how many papers were written by authorname0 and authorname1 ?", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "authorname0 and authorname1 papers number", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "what papers were written by authorname0 and authorname1 ?", "can": "number of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "the most published author in venuename0 year0", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "who wrote the most papers that were published in venuename0 at year0 ?", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "who is the author that published the most papers in venuename0 on year0 ?", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what author published the most papers in venuename0 year0 ?", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers on keyphrasename0 published after year0", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 in the year year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many venuename0 papers were there in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "in year0 , which papers where published ?", "can": "paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers were published in year0 ?", "can": "paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which authorname0 papers were published in venuename0 ?", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "authorname0 papers published in venuename0", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what venuename0s papers authorname0 wrote ?", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what venuename0 papers are by authorname0 ?", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what is the most cited paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what are the topics of the paper published by authorname0 and authorname1 ?", "can": "keyphrase of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "which fields did venuename0 publish papers in year0 ?", "can": "keyphrase of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what is the most popular topic in year0 venuename0 papers ?", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the most frequent topic on papers published in venuename0 papers on year0 ?", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what was the most common topic in venuename0 year0 ?", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published by authorname0 in year0 ?", "can": "number of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many venuename0 papers were about keyphrasename0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "by which papers was the reviews dataset used ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "the reviews dataset is used in which papers ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "what are all papers that use the reviews datasets", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "can not paraphrase", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "which papers introduce a dataset based on reviews ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "which papers used the reviews dataset ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "what papers using reviews as dataset ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "in which papers was the reviews dataset used ?", "can": "paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "in what venues paper was published in year0", "can": "venue of paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "who wrote the most cited paper published in venuename0 ?", "can": "author that writes paper whose venue is nature and that has the largest citation count", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) ) )", "variables": {}}
{"nl": "which keyphrasename0 paper was not written by authorname0 ?", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers on keyphrasename0 authorname0 is not author ?", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list keyphrasename0 papers whose author is not authorname0", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which keyphrasename0 papers are not authored by authorname0 ?", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what is the latest published paper ?", "can": "paper that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "who does write papers about keyphrasename0 and keyphrasename1 ?", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "variables": {}}
{"nl": "what people published papers on keyphrasename0 that use methods from keyphrasename1 ?", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "variables": {}}
{"nl": "when was the first paper by authorname0 published ?", "can": "publication year of paper that noah smith writes and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "when was published the earliest paper of authorname0 ?", "can": "publication year of paper that noah smith writes and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "who has written the most number of papers citing a authorname0 paper ?", "can": "author that writes the most number of paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "who in their work cite authorname0 papers the most ?", "can": "author that writes the most number of paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "where did authorname0 published the most ?", "can": "journal that is journal of the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string journal_paper_journal ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers are there in venuename0 ?", "can": "number of paper whose venue is nature", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "venuename0 papers that were cited less than misc0 times", "can": "paper whose venue is nature and whose citation count is smaller than 10", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "variables": {}}
{"nl": "which venuename0 papers have less than misc0 citations ?", "can": "paper whose venue is nature and whose citation count is smaller than 10", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "variables": {}}
{"nl": "which venuename0 papers have been cited less than misc0 times ?", "can": "paper whose venue is nature and whose citation count is smaller than 10", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "variables": {}}
{"nl": "which venuename0 paper has less than misc0 citations ?", "can": "paper whose venue is nature and whose citation count is smaller than 10", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "variables": {}}
{"nl": "papers appearing in venuename0 year0", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "list of papers published in venuename0 year0", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papaers were published at venuename0 on year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "venuename0 year0 papers", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what semantic parsing papers that published on venuename0 in year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "papers published in venuename0 year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "papers of venuename0 year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "in which journal were year0 papers published ?", "can": "journal of paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "which journals have papers from year0 ?", "can": "journal of paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "which title0 papers appeared in venuename0 year0 ?", "can": "paper whose title is neural attention and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which author wrote the most papers about keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which author wrote the most amount of keyphrasename0 papers ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which authors wrote about keyphrasename0 ?", "can": "author that writes paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which authors wrote about keyphrasename0 ?", "can": "author that writes paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "who does write papers about keyphrasename0 ?", "can": "author that writes paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which author does write papers about keyphrasename0 ?", "can": "author that writes paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many times did authorname1 cite papers by authorname0 ?", "can": "number of paper that noah smith writes and that paper that richard anderson writes cites", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) ) )", "variables": {}}
{"nl": "author that wrote a paper with authorname0 and authorname1", "can": "author that writes paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "variables": {}}
{"nl": "venuename0 year0 papers", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "where did authorname0 published the most ?", "can": "venue that is venue of the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "at what conferences does authorname0 publishes the most", "can": "venue that is venue of the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "who published papers about keyphrasename0 and keyphrasename1 since year0", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "variables": {}}
{"nl": "which authors wrote papers about keyphrasename0 with keyphrasename1 after year0 ?", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what papers from year0 used the dataset reviews", "can": "paper whose dataset is reviews and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what is the first published paper about keyphrasename0 and keyphrasename1 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which are the earliest papers about keyphrasename0 and keyphrasename1 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "in what journals did papers by authorname0 appear ?", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "which journals does authorname0 write in ?", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "what authors published papers about keyphrasename0 in year0 ?", "can": "author that writes paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "in which years has authorname0 published a paper ?", "can": "publication year of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "which year0 paper was about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "keyphrasename0 papers in year0", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers related to keyphrasename0 were published on year0 ?", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "who are the authors of papers that either appeared in venuename1 or venuename0", "can": "author that writes paper whose venue is nature or acl", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ) )", "variables": {}}
{"nl": "what journals include keyphrasename0 papers ?", "can": "journal of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "what are some journals that cover keyphrasename0 ?", "can": "journal of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "what keyphrasename0 papers published in venuename0 in year0 uses reviews as datasets ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what venuename0 year0 papers about keyphrasename0 do use the reviews dataset ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what journal does authorname0 write for ?", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "journals in which authorname0 has published ?", "can": "journal of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "name the authors of papers published in venuename0", "can": "author that writes paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "authors that published in venuename0", "can": "author that writes paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "what paper does authorname0 cite the most ?", "can": "paper that the most number of paper that noah smith writes cites", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what is the venue that featured the most papers about keyphrasename0 ?", "can": "venue that is venue of the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "how many publications did the journal journalname0 have in year0 ?", "can": "number of paper whose journal is cell and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "return keyphrases of papers citing papers by authorname0", "can": "keyphrase of paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what are the titles of papers written by authorname0 ?", "can": "title of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ) )", "variables": {}}
{"nl": "which year0 venuename0 paper was written by authorname0 ?", "can": "paper that noah smith writes and whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which keyphrasename0 papers introduce a dataset that uses reviews .", "can": "paper whose keyphrase is semantic parsing and whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) )", "variables": {}}
{"nl": "what scientist has the largest number of papers in venuename0 ?", "can": "author that writes the most number of paper whose venue is nature", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "what author published the largest number of papers in venuename0 ?", "can": "author that writes the most number of paper whose venue is nature", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "who wrote the most number of papers in venuename0 ?", "can": "author that writes the most number of paper whose venue is nature", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "in what conferences did papers that used the reviews dataset appear in ?", "can": "venue of paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "when was the first keyphrasename0 paper published ?", "can": "publication year of paper whose keyphrase is semantic parsing and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "when did the first paper about keyphrasename0 published ?", "can": "publication year of paper whose keyphrase is semantic parsing and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "how many papers were published at journalname0 on year0 ?", "can": "number of paper whose journal is cell and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "most cited paper by keyphrasename0 papers", "can": "paper that the most number of paper whose keyphrase is semantic parsing cites", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "what are venues that publish papers about keyphrasename0 ?", "can": "venue of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "how many papers about keyphrasename0 were published after year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "variables": {}}
{"nl": "author that wrote the most number of paper with authorname0", "can": "author that writes the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "which keyphrasename0 venue has the most amount of papers ?", "can": "venue that is venue of the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which papers have more than misc0 citations ?", "can": "paper whose citation count is larger than 10", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "variables": {}}
{"nl": "who wrote papers in year0 ?", "can": "author that writes paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the subject of the most cited paper of authorname0 ?", "can": "keyphrase of paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "which papers were not published in year0 ?", "can": "paper whose publication year is not 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "variables": {}}
{"nl": "when has authorname0 published papers since year0 ?", "can": "publication year of paper that noah smith writes and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "latest paper by authorname0 and authorname1", "can": "paper that noah smith writes and that richard anderson writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what journals published papers about keyphrasename0 in year0 ?", "can": "journal of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "variables": {}}
{"nl": "who is the writer with the largest number of papers ?", "can": "author that writes the most number of paper", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "variables": {}}
