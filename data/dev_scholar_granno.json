{"nl": "What is the paper of both keyphrasename0 and keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "how many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "How many paper does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "venuename0 papers in year0 with title0 in the title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose title is neural attention and whose publication year is 2012", "variables": {}}
{"nl": "papers by authors authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "what paper did authorname0 and authorname1 write together ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "what paper has authorname0 published in venuename0 journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "citations for authorname0", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "keyphrasename0 for keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Papers about keyphrasename0 in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "co-authors of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "venuename0 papers year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "How many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "how is the most prolific author in venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {}}
{"nl": "most cited keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "papers citing authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "paper that noah smith not writes and that cites paper that noah smith writes", "variables": {}}
{"nl": "What journals has authorname0 published in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {}}
{"nl": "how many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "What keyphrasename0 paper published in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "most recent keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "authorname0 's keyphrasename0 venuename0 paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "what paper has authorname0 published in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "How many papers does authorname0 have in venuename0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "keyphrasename0 papers earlier than year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "variables": {}}
{"nl": "which papers in venuename0 year0 had keyphrasename0 in them ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "number of citations of authorname0", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "What is the latest paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "How many papers has authorname0 and authorname1 written together ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "datasets in papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "dataset that is dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "venuename0 papers in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "papers about datasetname0 and datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "How many papers has authorname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "Who are authorname0 's co-authors", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "Who has coauthored with authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {}}
{"nl": "keyphrases used by authorname0 in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "who are all the co-authors of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper and that writes paper that noah smith writes", "variables": {}}
{"nl": "What conferences does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "Latest paper by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "What keywords are in papers by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "What is the paper about keyphrasename0 of the most citation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "papers written by authors authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "what datasets did authorname0 use in his papers ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "Papers from authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "Which paper should I read about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "keyphrasename0 papers later than year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "variables": {}}
