{"nl": "Have authorname0 and authorname1 written a paper together ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.emanuel_todorov", "authorname1": "fb:en.author.sergey_levine"}}
{"nl": "authorname0 and authorname1 as co-authors", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.richard_ladner", "authorname1": "fb:en.author.linda_shapiro"}}
{"nl": "What papers have been written by both authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.peter_mertens", "authorname1": "fb:en.author.dina_barbian"}}
{"nl": "What papers have been written by authorname0 and authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.peter_mertens", "authorname1": "fb:en.author.dina_barbian"}}
{"nl": "who wrote the most papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "number of citations of authorname0", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.linda_shapiro"}}
{"nl": "How many citations does authorname0 have", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.yejin_choi"}}
{"nl": "How many citations does authorname0 has ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.yann_lecun"}}
{"nl": "how many citations does authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.noah_a_smith"}}
{"nl": "list papers published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.cvpr"}}
{"nl": "venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.chi"}}
{"nl": "Papers on venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.chi"}}
{"nl": "venuename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.brain_research"}}
{"nl": "papers where authorname0 is an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.rastislav_bodik"}}
{"nl": "Papers authored by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniel_s--_weld"}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.adam_b_smith"}}
{"nl": "What papers are authored by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.donald_e_knuth"}}
{"nl": "papers by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.mirella_lapata"}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.srinivasan_iyer"}}
{"nl": "authorname0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniel_epstein"}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.dan_klein"}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.bindita_chaudhuri"}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.emina_torlak"}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.sarah"}}
{"nl": "Papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniel_epstein"}}
{"nl": "What are the latest papers by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.bill_howe"}}
{"nl": "most recent papers by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.oren_etzioni"}}
{"nl": "keyphrasename0 papers published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.monte_carlo_simulation", "year0": "2011"}}
{"nl": "How many papers authorname0 has in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.trevor_perrier", "venuename0": "fb:en.venue.chi"}}
{"nl": "How many papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.lisa_beinborn", "venuename0": "fb:en.venue.tacl"}}
{"nl": "How many papers has authorname0 published in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.david_m--_blei", "venuename0": "fb:en.venue.aistats"}}
{"nl": "title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose title is neural attention", "variables": {"title0": "fb:en.title.attentional_mechanisms_in_computer_vision"}}
{"nl": "most cited venuename0 year0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {"year0": "2010", "venuename0": "fb:en.venue.emnlp"}}
{"nl": "How many papers are related to keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.christopher_d--_manning"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.mirella_lapata"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.emily_m_bender"}}
{"nl": "How many publications does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.scott_klemmer"}}
{"nl": "How many publications does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.donald_e_knuth"}}
{"nl": "How many papers does authorname0 have", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.linda_shapiro"}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kurtis_heimerl"}}
{"nl": "How many papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.yin_tat_lee"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.benjamin_mako_hill"}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.angli_liu"}}
{"nl": "keywords used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.luke_zettlemoyer"}}
{"nl": "keywords used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.linda_shapiro"}}
{"nl": "keyphrases by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.stefan_savage"}}
{"nl": "keyphrases by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.srinivasan_iyer"}}
{"nl": "give me the keywords used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kaiming_he"}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kentaro_toyama"}}
{"nl": "topics used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.luke_zettlemoyer"}}
{"nl": "At which conferences does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.peter_mertens"}}
{"nl": "What conferences does authorname0 submit to ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.yejin_kim"}}
{"nl": "How many keyphrasename0 papers has authorname0 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.luke_s_zettlemoyer", "keyphrasename0": "fb:en.keyphrase.learning_algorithm"}}
{"nl": "Where did authorname0 publish in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.luke_clark", "year0": "2016"}}
{"nl": "What conferences did authorname0 publish in in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.li_dong", "year0": "2016"}}
{"nl": "venuename0 papers in year0 on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2012", "venuename0": "fb:en.venue.acl"}}
{"nl": "venuename0 papers in year0 about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2012", "venuename0": "fb:en.venue.acl"}}
{"nl": "keyphrasename0 papers from venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "What is the paper about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_image_segmentation"}}
{"nl": "Papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.feature_engineering"}}
{"nl": "Which papers are about about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "list papers that used keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.mnist"}}
{"nl": "What papers talk about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.reinforcement_learning"}}
{"nl": "papers for keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.object_recognition"}}
{"nl": "List papers that has keyword keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.temporal_correlation"}}
{"nl": "What papers talk about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.reinforcement_learning"}}
{"nl": "papers with keyphrasename0 in keyphrases", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.question_answering"}}
{"nl": "What has authorname0 published in the last misc0 years ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.luke_s_zettlemoyer", "misc0": "8"}}
{"nl": "What has authorname0 published in the last misc0 years ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.konstantinos_anagnostakos", "misc0": "5"}}
{"nl": "papers written by authorname0 within the last misc0 years", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.emina_torlak", "misc0": "10"}}
{"nl": "list papers published by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.balakrishnan_prabhakaran"}}
{"nl": "how many keyphrasename0 papers were published at venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose venue is nature and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "keyphrasename0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.li_dong", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "What is the paper about keyphrasename0 from authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.brian_curless", "keyphrasename0": "fb:en.keyphrase.convolution"}}
{"nl": "papers by authorname0 in keyphrasename0 topic", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.li_dong", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "what has authorname0 done in the past year", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.ali_farhadi", "year0": "2016"}}
{"nl": "What papers did authorname0 publish last year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.li_dong", "year0": "2015"}}
{"nl": "papers published in year0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.luke_zettlemoyer", "year0": "2011"}}
{"nl": "authorname0 's papers in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.mirella_lapata", "year0": "2016"}}
{"nl": "authorname0 publication year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.daniel_a--_epstein", "year0": "2016"}}
{"nl": "what papers are published by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.liwen_xiong", "year0": "2015"}}
{"nl": "keyphrasename0 papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing", "venuename0": "fb:en.venue.acl"}}
{"nl": "papers that use datasetname0 or datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {"datasetname0": "fb:en.dataset.wordnet", "datasetname1": "fb:en.dataset.dbpedia"}}
{"nl": "What was the best paper at venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {"year0": "2014", "venuename0": "fb:en.venue.tacl"}}
{"nl": "who had papers at venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "List of authors in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acl"}}
{"nl": "how many papers use datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.imagenet"}}
{"nl": "datasets used for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.textual_entailment"}}
{"nl": "datasets used for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.textual_entailment"}}
{"nl": "large-scale datasets used in keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.image_classification"}}
{"nl": "datasets used for evaluating keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "data sets for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "Where does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.peter_mertens"}}
{"nl": "How many papers are presented in venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acl"}}
{"nl": "How many papers published in venuename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2010", "venuename0": "fb:en.venue.sigcse"}}
{"nl": "how many papers published in venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acm_dev"}}
{"nl": "How many papers were published in venuename0 year0 conference ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acm_dev"}}
{"nl": "How many papers was published in venuename0 in year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.nature_communications"}}
{"nl": "what datasets do papers at venuename0 use most ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.acl"}}
{"nl": "how many papers on keyphrasename0 have been published in the past year ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.convolutional_neural_networks", "year0": "2016"}}
{"nl": "What papers were written on keyphrasename0 this year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.question_answering", "year0": "2016"}}
{"nl": "when were most venuename0 papers published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is venue that is venue of the most number of paper", "variables": {"venuename0": "fb:en.venue.nips"}}
{"nl": "who does authorname0 work with ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {"authorname0": "fb:en.author.graham_neubig"}}
{"nl": "who does authorname0 collaborate with ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {"authorname0": "fb:en.author.graham_neubig"}}
{"nl": "co-authors of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {"authorname0": "fb:en.author.ali_farhadi"}}
{"nl": "Who are authorname0 's coauthors ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "author that writes paper that noah smith writes", "variables": {"authorname0": "fb:en.author.yejin_kim"}}
{"nl": "What datasets have authorname0 used", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.jitendra_malik"}}
{"nl": "has any paper tried keyphrasename0 for keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.machine_translation", "keyphrasename1": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "Is there a paper on keyphrasename0 and keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.machine_translation", "keyphrasename1": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "Current research on keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.bacterial_wilt"}}
{"nl": "What are the most recent papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.human_motion_recognition"}}
{"nl": "what papers does authorname0 cite", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "paper that paper that noah smith writes cites", "variables": {"authorname0": "fb:en.author.oren_etzioni"}}
{"nl": "who has written the most papers on keyphrasename0 since year0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing", "year0": "2005"}}
{"nl": "what are the keyphrasename0 papers that have the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.sentiment_analysis"}}
{"nl": "most highly cited keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.sentiment_analysis"}}
{"nl": "most cited papers for keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_segmentation"}}
{"nl": "what is authorname0 's most cited paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {"authorname0": "fb:en.author.ohad_shamir"}}
{"nl": "How many papers does authorname0 have in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.michael_i--_jordan", "year0": "2016"}}
{"nl": "Which is the first paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {"authorname0": "fb:en.author.richard_bellman"}}
{"nl": "Earliest paper published by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {"authorname0": "fb:en.author.srinivasan_iyer"}}
{"nl": "What was authorname0 's first publication ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {"authorname0": "fb:en.author.jennifer_widom"}}
{"nl": "how many papers has authorname0 and authorname1 written together ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.ioannis_konstas", "authorname1": "fb:en.author.mirella_lapata"}}
{"nl": "How many papers did authorname0 co-authored with authorname1", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.x_jiang", "authorname1": "fb:en.author.frantzen"}}
{"nl": "How many papers have authorname0 and authorname1 written ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.dan_suciu", "authorname1": "fb:en.author.magdalena_balazinska"}}
{"nl": "who published the most papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2010", "venuename0": "fb:en.venue.acl"}}
{"nl": "year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {"year0": "2014"}}
{"nl": "What has authorname0 published at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.yejin_kim", "venuename0": "fb:en.venue.immune_network"}}
{"nl": "What papers does authorname0 have in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.mirella_lapata", "venuename0": "fb:en.venue.acl"}}
{"nl": "What papers has authorname0 written at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.james_fogarty", "venuename0": "fb:en.venue.ubicomp"}}
{"nl": "Which paper did authorname0 present at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.anne_rose", "venuename0": "fb:en.venue.chi"}}
{"nl": "Fetch me the most cited publications for keyphrasename0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "popular topics at venuename0 year0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "which topics were most popular at venuename0 year0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "topics popular at venuename0 year0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "keyphrase that is keyphrase of the most number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.nips"}}
{"nl": "papers that used datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.nell"}}
{"nl": "List the papers that used datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.caltech"}}
{"nl": "Papers that use the datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.webkb"}}
{"nl": "keyphrasename1 authors using keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.machine_translation", "keyphrasename1": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "who writes about keyphrasename0 for keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.machine_translation", "keyphrasename1": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "Who cites authorname0 most ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "can": "author that writes the most number of paper that cites paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniel_a_reed"}}
{"nl": "how many papers does venuename0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.sigir"}}
{"nl": "how many papers are published in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.emnlp"}}
{"nl": "number of papers in venuename0 conference", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.sigir"}}
{"nl": "what venuename0 papers have less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {"venuename0": "fb:en.venue.acl", "misc0": "5"}}
{"nl": "What were the papers published at venuename0 year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.acl"}}
{"nl": "what papers are published in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.sigir"}}
{"nl": "papers from venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "papers from venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "venuename0 best paper award year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.acl"}}
{"nl": "venuename0 year0 list of papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2015", "venuename0": "fb:en.venue.pldi"}}
{"nl": "how many of authorname1 's papers cite authorname0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) ) )", "can": "number of paper that noah smith writes and that paper that richard anderson writes cites", "variables": {"authorname0": "fb:en.author.michael_i--_jordan", "authorname1": "fb:en.author.dan_klein"}}
{"nl": "Which keyphrasename0 papers first used keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and that has the smallest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning", "keyphrasename1": "fb:en.keyphrase.cnn"}}
{"nl": "Which paper first used keyphrasename1 for keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning and that has the smallest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning", "keyphrasename1": "fb:en.keyphrase.cnn"}}
{"nl": "In what scholarly journals does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.takashi_matsumoto"}}
{"nl": "What authors wrote papers about keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.machine_learning", "year0": "2016"}}
{"nl": "Who wrote on the topic of keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.bacterial_wilt", "year0": "2016"}}
{"nl": "who publishes in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ) )", "can": "author that writes paper whose venue is nature or acl", "variables": {"venuename0": "fb:en.venue.vldb", "venuename1": "fb:en.venue.icml"}}
{"nl": "who published in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ) )", "can": "author that writes paper whose venue is nature or acl", "variables": {"venuename0": "fb:en.venue.vldb", "venuename1": "fb:en.venue.icml"}}
{"nl": "keyphrasename0 papers from venuename0 year0 using datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.jeopardy!_questions", "keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "keyphrasename0 papers from venuename0 year0 that used datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.jeopardy!_questions", "keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "papers about keyphrasename0 that used datasetname0 and were published at venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.jeopardy!_questions", "keyphrasename0": "fb:en.keyphrase.parsing", "year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "who publishes in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.nips"}}
{"nl": "who has papers at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.nips"}}
{"nl": "How many articles were published in the journalname0 journal in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose journal is cell and whose publication year is 2012", "variables": {"journalname0": "fb:en.journal.cell", "year0": "2015"}}
{"nl": "Does authorname0 have a paper in venuename0 in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose venue is nature and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.graham_neubig", "year0": "2015", "venuename0": "fb:en.venue.acl"}}
{"nl": "papers of authorname0 in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose venue is nature and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.ali_farhadi", "year0": "2016", "venuename0": "fb:en.venue.eccv"}}
{"nl": "Who has published the most papers in venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.nsdi"}}
{"nl": "who published the most at venuename0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes the most number of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.chi"}}
{"nl": "when was the first keyphrasename0 paper published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "conferences for keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "what conferences are related to keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.sensor_fusion"}}
{"nl": "papers with more than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is larger than 10", "variables": {"misc0": "10"}}
{"nl": "When did authorname0 publish his keyphrasename0 paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = )  keyphrasename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "When does authorname0 publish the keyphrasename0 paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = )  keyphrasename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "who writes for venuename0 and venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ) )", "can": "author that writes paper whose venue is nature and that writes paper whose venue is acl", "variables": {"venuename0": "fb:en.venue.icml", "venuename1": "fb:en.venue.acl"}}
{"nl": "Who are the most prominent researchers in keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.neutralizing_antibody", "year0": "2012"}}
{"nl": "the papers at venuename0 in year0 using datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.coco", "year0": "2015", "venuename0": "fb:en.venue.nips"}}
{"nl": "which papers in venuename0 year0 use datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.imagenet", "year0": "2014", "venuename0": "fb:en.venue.cvpr"}}
{"nl": "venuename0 year0 papers using datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose dataset is reviews and whose publication year is 2012", "variables": {"datasetname0": "fb:en.dataset.imagenet", "year0": "2014", "venuename0": "fb:en.venue.eccv"}}
{"nl": "keyphrasename0 papers citing venuename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "paper whose keyphrase is semantic parsing and that cites paper whose venue is nature", "variables": {"keyphrasename0": "fb:en.keyphrase.euclidean_distance", "venuename0": "fb:en.venue.nips"}}
{"nl": "Who is the most cited author that publishes in both venuename0 and venuename1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author that writes paper whose venue is nature or acl and that has the largest citation count", "variables": {"venuename0": "fb:en.venue.icassp", "venuename1": "fb:en.venue.acl"}}
{"nl": "top authors working on datasetname0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "author that writes the most number of paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.imagenet"}}
{"nl": "how many venuename0 year0 papers have more than misc0 citations ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is larger than 2012 and whose citation count is larger than 10", "variables": {"year0": "2012", "venuename0": "fb:en.venue.acl", "misc0": "7"}}
{"nl": "What was the topic of best paper in year0 venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {"year0": "2012", "venuename0": "fb:en.venue.emnlp-conll"}}
{"nl": "How many papers has authorname0 co-authored since year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.noah_smith", "year0": "2009"}}
{"nl": "How many papers has authorname0 co-authored since year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "can": "number of paper that noah smith writes and whose publication year is larger than 2012", "variables": {"authorname0": "fb:en.author.noah_smith", "year0": "2009"}}
{"nl": "Number of venuename0 papers with more than misc0 citations", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ) )", "can": "number of paper whose venue is nature and whose citation count is larger than 10", "variables": {"venuename0": "fb:en.venue.acl", "misc0": "2"}}
{"nl": "What is the name of authorname0 's keyphrasename0 year0 paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string title_paper_title ) ) )", "can": "title of paper that noah smith writes and whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing", "year0": "2015"}}
{"nl": "How many papers used datasetname0 datasets in venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose venue is nature and whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.imagenet", "venuename0": "fb:en.venue.cvpr"}}
{"nl": "What is the latest keyphrasename0 paper from authorname0 's group ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing and that has the largest publication year", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "What venues are for venuename0 ?", "lf": "( call SW.listValue venuename0 )", "can": "nature", "variables": {"venuename0": "fb:en.venue.neuroscience"}}
{"nl": "When was the last time authorname0 published a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.mary_crainie"}}
{"nl": "I want the co-authors of papers on keyphrasename0 with authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "How many papers does authorname0 publish outside of venuename0 area ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ) )", "can": "number of paper that noah smith writes and whose venue is not nature", "variables": {"authorname0": "fb:en.author.samuel_madden", "venuename0": "fb:en.venue.pvldb"}}
{"nl": "which journal did authorname0 publish his last paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.dan_klein"}}
{"nl": "What is the venue of title0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose title is neural attention", "variables": {"title0": "fb:en.title.neural_machine_translation_by_jointly_learning_to_align_and_translate"}}
{"nl": "How many authors published at venuename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) ) )", "can": "number of author that writes paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2010", "venuename0": "fb:en.venue.sigcse"}}
{"nl": "keyphrases used by authorname0 at venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose venue is nature or acl", "variables": {"authorname0": "fb:en.author.percy_liang", "venuename0": "fb:en.venue.acl", "venuename1": "fb:en.venue.icml"}}
{"nl": "What is the year of publication of \" title0 \" ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose title is neural attention", "variables": {"title0": "fb:en.title.attentional_mechanisms_in_computer_vision"}}
{"nl": "what keywords are used by papers at venuename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.uist"}}
{"nl": "who published the most papers at venuename1 or venuename0 since year0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "can": "author that writes the most number of paper whose venue is nature or acl and whose publication year is larger than 2012", "variables": {"year0": "2011", "venuename0": "fb:en.venue.acl", "venuename1": "fb:en.venue.emnlp"}}
{"nl": "How many papers in year0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose publication year is 2012", "variables": {"year0": "1986"}}
{"nl": "the papers of authorname0 at venuename0 or venuename1 last year", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose venue is nature or acl and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.li_dong", "year0": "2015", "venuename0": "fb:en.venue.acl", "venuename1": "fb:en.venue.emnlp"}}
{"nl": "Give me the papers written by authorname0 before year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is smaller than 2012", "variables": {"authorname0": "fb:en.author.su-in_lee", "year0": "2012"}}
{"nl": "papers with at least misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is larger than 10", "variables": {"misc0": "5"}}
{"nl": "papers cited by at least misc0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is larger than 10", "variables": {"misc0": "5"}}
{"nl": "What is the most cited paper at venuename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and that has the largest citation count", "variables": {"venuename0": "fb:en.venue.sigcomm"}}
{"nl": "What is the name of authorname0 's keyphrasename0 paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ) )", "can": "title of paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
