{"nl": "paper with the title \" title0 \" with a publication year other than year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose title is neural attention and whose publication year is not 2012", "variables": {}}
{"nl": "what paper from other than year0 does n't cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that not cites paper", "variables": {}}
{"nl": "what author has a citation count above misc0 and has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue other than venuename0 has a data set that is not datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose venue is not nature and whose dataset is not reviews", "variables": {}}
{"nl": "paper without citations that is published in venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that not cites paper", "variables": {}}
{"nl": "paper that uses datasetname1 and written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that author writes", "variables": {}}
{"nl": "name the paper with the title title0 that does not have any specific key phrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "how many journals ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "number of journal", "variables": {}}
{"nl": "paper in journalname0 journal that cites the most sources", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that cites the most number of paper", "variables": {}}
{"nl": "what paper published after year0 was not written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is larger than 2012 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper published after year0 and does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "i want a paper that did n't have datasetname0 in its dataset and had more than authorname0 's citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper making the least amount of citations of other papers does not have a year0 year of publication ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that cites the least number of paper", "variables": {}}
{"nl": "what paper with a data set of datasetname0 was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose dataset is reviews and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper having misc0 citations cites the most number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that cites the most number of paper", "variables": {}}
{"nl": "what paper which authorname0 did not write has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper that noah smith not writes and whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper with a title of \" title0 \" was published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose title is neural attention and whose publication year is 2012", "variables": {}}
{"nl": "how many papers have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ) )", "can": "number of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper not from year0 is from venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is not 2012 and whose venue is acl or nature", "variables": {}}
{"nl": "what is the data set of a paper with a venue other than venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is not nature", "variables": {}}
{"nl": "what is the dataset of a paper with a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper not cited by another paper has a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that paper not cites", "variables": {}}
{"nl": "which keyphrasename0 paper is cited fewer times than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what is the paper with a venue that is n't venuename1 that was not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is not acl and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper has fewer citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper did authorname1 not write that has a citation count higher than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "which papers are published by a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is journal", "variables": {}}
{"nl": "what paper did authorname1 not write with a key phrase that is neither \" keyphrasename0 \" nor \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a journal other than journalname0 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that not cites paper", "variables": {}}
{"nl": "paper with no keyphrase", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not keyphrase", "variables": {}}
{"nl": "i need a paper that has the title title0 and that has the dataset not datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose title is neural attention and whose dataset is not blogs", "variables": {}}
{"nl": "what paper without a specific title has a title which is n't title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose title is not title", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a venue that is not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose title is neural attention and whose venue is not acl", "variables": {}}
{"nl": "what paper citing the largest amount of papers also has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that cites the most number of paper", "variables": {}}
{"nl": "paper published at venuename0 and does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose venue is nature and whose dataset is not reviews", "variables": {}}
{"nl": "name the paper with a keyphrase of keyphrasename1 and a venue other than venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose keyphrase is deep learning and whose venue is not acl", "variables": {}}
{"nl": "name the paper whose citation count is a authorname0 citation count and that has a venue of venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "give me a paper that does not have the keyphrasename0 keyphrase and without the keyphrase keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "papers that do not contain title0 as the title", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose title is not neural attention", "variables": {}}
{"nl": "paper not about keyphrasename0 written by authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and that richard anderson or noah smith writes", "variables": {}}
{"nl": "how many papers have a title of \" title0 ? \"", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ) )", "can": "number of paper whose title is neural attention", "variables": {}}
{"nl": "name the paper with a dataset that 's not datasetname0 and a dataset that 's not datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose dataset is not reviews and whose dataset is not blogs", "variables": {}}
{"nl": "name the paper authorname1 did n't write that has a dataset that 's not datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that richard anderson not writes and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "paper that does n't use datasetname1 and paper that use datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is not blogs and whose dataset is blogs or reviews", "variables": {}}
{"nl": "papers about keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper that has a citation count of less than misc0 and the fewest number of authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that the least number of author writes", "variables": {}}
{"nl": "which author with a citation count that is not misc0 does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper not published in year0 was published earlier than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose publication year is not 2012 and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with an venuename1 venue has it been you that is venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is acl and whose venue is acl or nature", "variables": {}}
{"nl": "what paper not published in the year year0 has more citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper with a citation count below misc0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper with a citation count of misc0 was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose citation count is 10 and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper did authorname1 not write with a venue of venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that richard anderson not writes and whose venue is nature or acl", "variables": {}}
{"nl": "name the paper with a venue that 's not venuename1 and that does n't have datasetname0 as its dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose venue is not acl and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "which paper published in venuename1 or venuename0 does not have title0 in its title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose title is not neural attention and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has a venue of either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is reviews and whose venue is nature or acl", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is not blogs", "variables": {}}
{"nl": "what paper written by authorname0 cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that cites the most number of paper", "variables": {}}
{"nl": "what paper not written by authorname0 has the least number of citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a data set of datasetname0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that paper cites", "variables": {}}
{"nl": "paper with fewest authors not including authorname0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that the least number of author writes", "variables": {}}
{"nl": "which paper was not published in venuename0 that the keyphrase is \" not keyphrasename1 \" or \" keyphrasename0 \" .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is not nature and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" is cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that paper cites", "variables": {}}
{"nl": "what 's the paper that has a journalname0 journal and a datasetname1 or datasetname0 database ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose journal is cell and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a data set of datasetname1 also does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose dataset is dataset", "variables": {}}
{"nl": "name the paper with a journal that is n't journalname0 and also that has no specific key phrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose journal is journal", "variables": {}}
{"nl": "a paper that was published after year0 and uses venuename1 or venuename0 as a venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is acl or nature", "variables": {}}
{"nl": "how many papers have data sets other than datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ) )", "can": "number of paper whose dataset is not reviews", "variables": {}}
{"nl": "what year was a paper published with a venue that is not venuename1 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose venue is not acl", "variables": {}}
{"nl": "which paper written by authorname1 was written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson writes and that richard anderson or noah smith writes", "variables": {}}
{"nl": "a paper written in year0 that does n't use datasetname0 or datasetname1 as datasets .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is 2012 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper with a data set of datasetname1 does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what author with a citation count larger than misc0 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper that 's used as a citation for other papers has a keyphrase that is not keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that paper cites", "variables": {}}
{"nl": "papers with keyphrasename0 that authorname0 is not an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what is keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.concat keyphrasename1 keyphrasename0 ) )", "can": "deep learning or semantic parsing", "variables": {}}
{"nl": "paper published before year0 anywhere", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose venue is venue", "variables": {}}
{"nl": "what paper not by authorname1 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that not cites paper", "variables": {}}
{"nl": "what paper published in year0 has more citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "paper with more than misc0 citations and not published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper not entitled to title0 has the least number of paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that cites the least number of paper", "variables": {}}
{"nl": "what paper with a citation count of misc0 is writmisc0 by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is 10 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what is the paper with a keyphrasename1 keyphrase that has a journal of some type ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose journal is journal", "variables": {}}
{"nl": "paper with title0 in its title and not published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose title is neural attention and whose venue is not nature", "variables": {}}
{"nl": "what paper not having datasetname0 or datasetname1 as its dataset also has a journalname0 journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose journal is cell and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what 's the paper with authorname1 as its author that was published in the year of year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that richard anderson writes and whose publication year is 2012", "variables": {}}
{"nl": "paper with citation counts of misc0 or less", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose citation count is not 10 and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a citation count under misc0 has a data set that is not dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is not dataset", "variables": {}}
{"nl": "a paper that is n't from the journalname0 journal that has the smallest amount of citations .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that the least number of paper cites", "variables": {}}
{"nl": "paper that does not use the keyphrase \" keyphrasename1 \" and has the smallest number of authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that the least number of author writes", "variables": {}}
{"nl": "which author that cites authorname0 does not have misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what dataset does a paper not published in the year year0 have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose publication year is not 2012", "variables": {}}
{"nl": "what year was a paper published that did not have a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "paper that uses either the \" datasetname1 \" dataset instead of the \" datasetname0 \" dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is not reviews and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what author with a citation count over misc0 does not write a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string write_author_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is larger than 10 and that not writes paper", "variables": {}}
{"nl": "the paper written by authorname0 with the title is title0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper that noah smith writes and whose title is neural attention", "variables": {}}
{"nl": "what paper has a keyphrasename0 keyphrase but not a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is not blogs", "variables": {}}
{"nl": "what paper not written by authorname1 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "which paper with a certain title has a venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose title is title", "variables": {}}
{"nl": "which paper with more than misc0 citations has the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that the most number of author writes", "variables": {}}
{"nl": "what paper about datasetname1 has a citation count not equal to that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "paper not published in venuename1 that shows number of citations", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose venue is not acl", "variables": {}}
{"nl": "what are all the years of publication for a paper with a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper has a datasetname0 database and a citation count that 's not the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue other than venuename0 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that paper not cites", "variables": {}}
{"nl": "what is the venue of the paper with a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose venue is nature", "variables": {}}
{"nl": "which paper was not written at venuename1 and uses a datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose dataset is reviews and whose venue is not acl", "variables": {}}
{"nl": "what paper written by authorname1 has a data set that is not datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper that richard anderson writes and whose dataset is not blogs", "variables": {}}
{"nl": "what year is the paper published before year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper written by authorname1 has a citation count that is not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "paper published in year0 with fewer than misc0 citations .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose publication year is 2012 and whose citation count is smaller than 10", "variables": {}}
{"nl": "paper written in a year not year0 that has the dataset other than datasetname0 or datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "which papers were not published in venuename0 and did n't publish in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose venue is not nature and whose publication year is not 2012", "variables": {}}
{"nl": "what paper not written by authorname0 is also not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that noah smith not writes and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "the recent published paper written by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {}}
{"nl": "name the paper not titled title0 with a keyphrase that 's not keyphrasename0 or keyphrasename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "which papers with a citation count that 's misc0 have a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose citation count is 10 and whose dataset is reviews", "variables": {}}
{"nl": "what paper has an venuename1 or venuename0 venue and a citation count that 's different than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is not 10 and whose venue is acl or nature", "variables": {}}
{"nl": "what paper has more than misc0 citations and a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper makes citations from other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that cites paper", "variables": {}}
{"nl": "what is the data set of a paper with a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose journal is cell", "variables": {}}
{"nl": "which paper published in the journal journalname0 has misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose journal is cell and whose citation count is 10", "variables": {}}
{"nl": "what paper with a venue other than venuename0 has a citation count equal to authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "the paper with the latest year of publication .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that has the largest publication year", "variables": {}}
{"nl": "dataset of paper published in venuename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is nature", "variables": {}}
{"nl": "paper which has misc0 as the citation count and which has the dataset not datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose citation count is 10 and whose dataset is not blogs", "variables": {}}
{"nl": "where is the paper published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose venue is venue", "variables": {}}
{"nl": "what paper has a journalname0 journal but does n't have an venuename1 or venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose journal is cell and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper not possessing a keyphrasename0 or keyphrasename1 keyphrase has a citation count equaling misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what year0 paper was written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is 2012 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "which paper has a key phrase of \" keyphrasename1 \" and a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is deep learning and whose venue is nature", "variables": {}}
{"nl": "which papers have misc0 citations and less citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with the title title0 was published after the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose title is neural attention and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper not written by authorname1 has a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that richard anderson not writes and whose venue is nature", "variables": {}}
{"nl": "paper that has a citation count less than misc0 that cites the largest amount of paper", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that cites the most number of paper", "variables": {}}
{"nl": "what paper written by authorname1 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper does not have a venue that is venuename0 and does not have datasetname0 or datasetname1 as a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is not nature and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper with a datasetname0 dataset has a smaller citation count than the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with title0 as its title has a citation count that is n't authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "which paper is not a journal and was not written at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose journal is not journal", "variables": {}}
{"nl": "paper with topic that is not written by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is keyphrase", "variables": {}}
{"nl": "paper with title0 in its title not written by authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose title is neural attention and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper titled title0 published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose title is neural attention and whose venue is acl or nature", "variables": {}}
{"nl": "topics of paper not written by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith not writes", "variables": {}}
{"nl": "what paper with a year of publication that is subsequent to year0 has the highest numbering citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is larger than 2012 and that has the largest citation count", "variables": {}}
{"nl": "what paper is a product of authorname1 's writing and has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper that richard anderson writes and whose dataset is blogs", "variables": {}}
{"nl": "paper that used the \" datasetname0 \" or \" datasetname1 \" dataset that does not have misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is not 10 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" was published the earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is deep learning and that has the smallest publication year", "variables": {}}
{"nl": "what is the title of a paper with a data set that is not datasetname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string title_paper_title ) ) )", "can": "title of paper whose dataset is not reviews", "variables": {}}
{"nl": "what paper which was not written by authorname0 has a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper that noah smith not writes and whose dataset is reviews", "variables": {}}
{"nl": "paper that is written by authorname0 and whose topic is keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "author that does not have misc0 citations and does not cite authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "how many papers have been written by authorname1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ) )", "can": "number of paper that richard anderson writes", "variables": {}}
{"nl": "what is authorname1 or authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.concat authorname1 authorname0 ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of richard anderson or noah smith", "variables": {}}
{"nl": "what paper written by authorname1 has the fewest citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper that richard anderson writes and that has the smallest citation count", "variables": {}}
{"nl": "which paper with a title other than \" title0 \" was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose title is not neural attention and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what year was a paper with a venue of venuename1 published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is acl", "variables": {}}
{"nl": "published paper that does not use datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose venue is venue", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that paper not cites", "variables": {}}
{"nl": "what author with a citation count other than misc0 has authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with less than misc0 citations cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that cites paper", "variables": {}}
{"nl": "what paper that has no particular ke phrase was written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "name the paper not writmisc0 by authorname1 with a citation number that is bigger than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper that richard anderson not writes and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper has a different keyphrase than keyphrasename0 and no discernible dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is not dataset", "variables": {}}
{"nl": "what paper which has keyphrasename0 or keyphrasename1 as its keyphrase has a citation count that 's not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is not 10 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with an venuename1 venue is not cited by another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that paper not cites", "variables": {}}
{"nl": "what paper writmisc0 by authorname0 has a citation count of less than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper that noah smith writes and whose citation count is smaller than 10", "variables": {}}
{"nl": "paper who does not use \" datasetname1 \" dataset and uses some \" dataset \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose dataset is dataset", "variables": {}}
{"nl": "keyphrasename0 paper that is not written by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that richard anderson not writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" does not have an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that author not writes", "variables": {}}
{"nl": "what paper with an venuename1 venue has the fewest paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that the least number of paper cites", "variables": {}}
{"nl": "what paper writmisc0 by authorname1 has a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper that richard anderson writes and whose citation count is 10", "variables": {}}
{"nl": "how many papers have the fewest citations ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ) )", "can": "number of paper that has the smallest citation count", "variables": {}}
{"nl": "what 's the venue of a paper with a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper published in year0 is not titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose publication year is 2012 and whose title is not neural attention", "variables": {}}
{"nl": "paper published in year0 at venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is 2012 and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with some kind of journal has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose journal is journal", "variables": {}}
{"nl": "which paper that uses \" datasetname0 \" dataset is not about keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "paper with the venue of venuename1 and which has the journal not journalname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose venue is acl and whose journal is not cell", "variables": {}}
{"nl": "what are titles of papers not in the venuename1 venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string title_paper_title ) ) )", "can": "title of paper whose venue is not acl", "variables": {}}
{"nl": "what paper not written by authorname1 has a citation count lower than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a journal of journalname0 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose journal is cell and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper using datasetname1 dataset that cites more from authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper not written by authorname1 was not published in the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper that richard anderson not writes and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 does not have \" keyphrasename0 \" as its key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose dataset is blogs and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what is the citation count of a paper with a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose venue is acl", "variables": {}}
{"nl": "name the paper which authorname1 or authorname0 wrote that has a journalname0 journal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose journal is cell and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper that authorname1 wrote has a journal that 's not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper that richard anderson writes and whose journal is not cell", "variables": {}}
{"nl": "what paper from venuename0 has a citation count smaller than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "name the paper with a venue that is n't venuename0 and a dataset of some type .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose dataset is dataset", "variables": {}}
{"nl": "what paper that cites another paper has a keyphrase that is n't keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that cites paper", "variables": {}}
{"nl": "what paper with a data set of datasetname0 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that the most number of paper cites", "variables": {}}
{"nl": "what paper written by authorname0 has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper that noah smith writes and whose dataset is blogs", "variables": {}}
{"nl": "what paper with a citation count lower than misc0 has a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper written by authorname0 has more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "how many papers do not have a journal of journalname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ) )", "can": "number of paper whose journal is not cell", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has a data set of dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose dataset is dataset", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose journal is not journal", "variables": {}}
{"nl": "paper who publishes in venuename1 and has the lowest number of authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that the least number of author writes", "variables": {}}
{"nl": "show me a paper that authorname0 does n't write and is n't written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that author not writes", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that cites paper", "variables": {}}
{"nl": "name the paper containing a keyphrase that has a keyphrasename1 keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a dataset that 's not datasetname0 does not have any specific key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what is a citation count of an author who has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ) )", "can": "citation count of author whose citation count is smaller than 10", "variables": {}}
{"nl": "name the paper with a keyphrasename0 keyphrase and a citation count larger than authorname1 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a journal of journalname0 was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose journal is cell and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what is a paper that has misc0 citations and that has the keyphrase keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper not published at venuename0 and not using datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is not nature and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper written by authorname1 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "name the paper with authorname1 as its writer and a certain venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose venue is venue", "variables": {}}
{"nl": "what papers contain title0 in the title and use datasets concerning datasetname1 and datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose title is neural attention and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a citation count other than misc0 is writmisc0 by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is not 10 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper with venue venuename1 with keyphrase not keyphrase", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "paper published after year0 that has the largest amount of paper citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that the most number of paper cites", "variables": {}}
{"nl": "how many citations were in the least cited paper ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that has the smallest citation count", "variables": {}}
{"nl": "how many data set ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "number of dataset", "variables": {}}
{"nl": "what paper with a citation count less than misc0 has the most recent publication date ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is smaller than 10 and that has the largest publication year", "variables": {}}
{"nl": "what paper has authorname0 as its writer and is not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson not writes", "variables": {}}
{"nl": "what paper published after year0 has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose title is not title", "variables": {}}
{"nl": "what paper with a datasetname0 dataset has a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose venue is nature and whose dataset is reviews", "variables": {}}
{"nl": "what paper has a venue that is not venuename1 and a data set that is neither datasetname1 nor datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is not acl and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "total citation count of papers that were written at venuename1", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose venue is acl", "variables": {}}
{"nl": "can you show me a paper that has the venuename0 venue which has the citation count bigger than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 does not have a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is not reviews and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "which paper has a title , and less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose title is title", "variables": {}}
{"nl": "paper that does not have misc0 citations .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose citation count is not 10", "variables": {}}
{"nl": "what paper not authored by authorname1 or authorname0 has a dataset that is not datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is not reviews and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper not about keyphrasename0 and is written by an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that author writes", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose journal is not journal", "variables": {}}
{"nl": "what paper with a citation count above misc0 does not have a data set of either datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper has more than misc0 citations and is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that paper not cites", "variables": {}}
{"nl": "what paper with a different keyphrase than keyphrasename1 also has the greatest citation count number ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is not deep learning and that has the largest citation count", "variables": {}}
{"nl": "what year was a paper published with a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose journal is not cell", "variables": {}}
{"nl": "a paper that is not a journalname0 journal that was not written at venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose journal is not cell and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 is wirtten by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is not acl and that richard anderson or noah smith writes", "variables": {}}
{"nl": "paper whose journal is not journalname0 and does not cite paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that cites paper", "variables": {}}
{"nl": "name the paper citing another paper which does n't have venuename0 as its venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that cites paper", "variables": {}}
{"nl": "what is the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename0 \" and a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is acl or nature", "variables": {}}
{"nl": "what paper cited by a paper was published in the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that paper cites", "variables": {}}
{"nl": "what paper which does n't have keyphrasename0 as its keyphrase has a citation count different from the authorname0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what is the dataset used in the paper from year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose publication year is 2012", "variables": {}}
{"nl": "what paper had a venue that was a non - venue and a dataset that was not datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose venue is not venue", "variables": {}}
{"nl": "what paper with a venue that is not venuename0 does not have a venue of venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is not nature and whose venue is nature or acl", "variables": {}}
{"nl": "name the paper not written by authorname0 which has a keyphrase which is n't keyphrasename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper that noah smith not writes and whose keyphrase is not deep learning", "variables": {}}
{"nl": "what is authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) )", "can": "citation count of richard anderson", "variables": {}}
{"nl": "name the paper with the dataset other than datasetname1 that has no citations of other papers .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that not cites paper", "variables": {}}
{"nl": "what paper with a journal of journalname0 has the largest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose journal is cell and that has the largest citation count", "variables": {}}
{"nl": "name the keyphrase of the paper without title0 as its title .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose title is not neural attention", "variables": {}}
{"nl": "which author has a citation count of misc0 , which is a bigger citation count than authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "paper which has the keyphrase is keyphrasename0 and which has the citation count less than misc0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is smaller than 10", "variables": {}}
{"nl": "name the paper published in the year year0 with a smaller citation count than that of authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "paper titled title0 that used the \" datasetname0 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose title is neural attention and whose dataset is reviews", "variables": {}}
{"nl": "what paper with a citation count that 's not authorname0 's has a venue that 's not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "paper not in journalname0 journal and not about keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose journal is cell and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what is the venue of a paper with a data set that is not datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose dataset is not blogs", "variables": {}}
{"nl": "which paper has a citation count that is n't authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what is the keyphrase of the paper published before year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper not titled title0 is not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose title is not neural attention and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper that does not use datasetname0 dataset but uses datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose dataset is blogs and whose dataset is not reviews", "variables": {}}
{"nl": "what are the journals which exist ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) )", "can": "journal", "variables": {}}
{"nl": "what paper with a title other than title0 has a dataset that is not datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose title is not neural attention and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "for a paper with a year of publication that is other than year0 , what is the paper 's full citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose publication year is not 2012", "variables": {}}
{"nl": "what dataset did the paper use ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper", "variables": {}}
{"nl": "what is the key phrase of a paper published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose publication year is 2012", "variables": {}}
{"nl": "what is the citation count of the paper with the lowest citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that has the smallest citation count", "variables": {}}
{"nl": "what paper with a publishing year other than year0 has a specific type of journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose journal is journal", "variables": {}}
{"nl": "name the paper with the earliest year of publication and a citation count over misc0 .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is larger than 10 and that has the smallest publication year", "variables": {}}
{"nl": "what paper published after year0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that cites paper", "variables": {}}
{"nl": "what paper cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that cites the least number of paper", "variables": {}}
{"nl": "what paper with an venuename1 venue is written by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is acl and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what is the paper including a datasetname0 dataset and an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose venue is acl and whose dataset is reviews", "variables": {}}
{"nl": "which paper uses datasetname1 and datasetname0 datasets and was not written at venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is not acl and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a venue that is not venuename0 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is not nature and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper not having an venuename1 venue cites the greatest amount of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that cites the most number of paper", "variables": {}}
{"nl": "what author with a citation count of misc0 has a smaller than authorname1 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "give me a paper that does not have the venuename0 venue that is written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that author writes", "variables": {}}
{"nl": "what is a paper with a journal other than journalname0 that does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose journal is journal", "variables": {}}
{"nl": "what paper with a publication year other than year0 was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose publication year is not 2012 and whose publication year is larger than 2012", "variables": {}}
{"nl": "paper whose journal is not journalname0 and that is citated by pape", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that paper cites", "variables": {}}
{"nl": "a paper with a title that has a citation count greater than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose title is title", "variables": {}}
{"nl": "what paper without a title has a venue that is not venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose title is not title", "variables": {}}
{"nl": "what paper has a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that cites paper", "variables": {}}
{"nl": "what paper which does n't have a venuename0 venue has a citation count that is higher than the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what titled paper has a data set that is n't datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose title is not title", "variables": {}}
{"nl": "what year of publication applies to papers not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that noah smith not writes", "variables": {}}
{"nl": "which published paper uses \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose venue is venue", "variables": {}}
{"nl": "paper with a publication year before year0 and has a dataset of datasetname0 or datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "papers with the same number of citations as authorname1 's papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a different citation count than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue of venuename0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose venue is venue", "variables": {}}
{"nl": "paper not written by authorname0 that does not have a topic", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what authorname1 - penned paper has a venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper that richard anderson writes and whose venue is not nature", "variables": {}}
{"nl": "what is the total citation count of a paper with a citation count that is n't misc0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose citation count is not 10", "variables": {}}
{"nl": "what paper with a venue other than venuename0e has a data set that is not dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose dataset is not dataset", "variables": {}}
{"nl": "name the paper with no keyphrase that has venuename1 as a venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper not written by authorname1 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose title is not title", "variables": {}}
{"nl": "what 's the total citation count of the paper published before year0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that cites the least number of paper", "variables": {}}
{"nl": "which journal does not use a datasetname0 dataset", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose dataset is not reviews", "variables": {}}
{"nl": "what paper not written by authorname1 has a key phrase that is neither \" keyphrasename0 \" nor \" keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "which paper was published most recently and is not about keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is not deep learning and that has the largest publication year", "variables": {}}
{"nl": "paper with a citation count greater than misc0 and is published in either venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is nature or acl", "variables": {}}
{"nl": "paper with smallest number of citations that is not about keyphrasename0 .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that the least number of paper cites", "variables": {}}
{"nl": "paper with the least publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that has the smallest publication year", "variables": {}}
{"nl": "what paper published after the year year0 has a journal that is n't journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose journal is not cell and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with the lowest citation count was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith not writes and that has the smallest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" has the fewest citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest citation count", "variables": {}}
{"nl": "paper not about keyphrasename0 that is published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is nature or acl", "variables": {}}
{"nl": "keyphrasename0 paper published in venue", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is venue", "variables": {}}
{"nl": "what author not having misc0 citations writes the least papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is not 10 and that writes the least number of paper", "variables": {}}
{"nl": "what paper which was not authorname0 's writing has the largest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that the most number of author writes", "variables": {}}
{"nl": "what paper published after year0 is citied by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that the least number of paper cites", "variables": {}}
{"nl": "paper not published in venuename1 and not written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that author not writes", "variables": {}}
{"nl": "paper that has the keyphrase keyphrasename0 and was published before year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what title was used to name the paper authorname0 wrote ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ) )", "can": "title of paper that noah smith writes", "variables": {}}
{"nl": "show me the total citation count of authors who have citation counts smaller than misc0 .", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper 's venue is venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is acl or nature", "variables": {}}
{"nl": "which paper that uses dataset is published after year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "which paper with a keyphrase of some type does not have a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper entitled title0 has the fewest number of other paper 's citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that cites the least number of paper", "variables": {}}
{"nl": "what paper did authorname1 not write that has a citation count that 's not authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that cites the least number of paper", "variables": {}}
{"nl": "paper that used the dataset dataset and which has less than misc0 citations .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is dataset", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename1 \" and does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper whose keyphrase is deep learning and whose journal is cell", "variables": {}}
{"nl": "what paper with a citation count over misc0 does not have a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not written by authorname0 is in the journal journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper that noah smith not writes and whose journal is cell", "variables": {}}
{"nl": "what paper has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper not published in year0 does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a dataset that is n't datasetname1 or datasetname0 has an under-misc0 count of citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper with more than misc0 citations does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "which paper did authorname1 write that is n't about datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that richard anderson writes and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "which paper with citation more than misc0 is about keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "name the paper with a writer other than authorname1 that has the fewest number of author writes .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that the least number of author writes", "variables": {}}
{"nl": "what is the paper written by authorname0 that has a keyphrase that 's not keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 has the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that the least number of author writes", "variables": {}}
{"nl": "what paper with a database that 's not datasetname0 cites the largest amount of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that cites the most number of paper", "variables": {}}
{"nl": "what paper with a citation count of misc0 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is 10 and that has the largest citation count", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has a lower citation count than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper published in year0 has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose publication year is 2012 and whose citation count is larger than 10", "variables": {}}
{"nl": "what is the paper 's venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that cites the least number of paper", "variables": {}}
{"nl": "what paper without a datasetname1 database has a dataset that is n't datasetname0 and also is n't datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is not blogs and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper published after year0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "name the paper with a citation count equaling misc0 and the smallest amount of author writes .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that the least number of author writes", "variables": {}}
{"nl": "how many citations does the paper with the latest publication year have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that has the largest publication year", "variables": {}}
{"nl": "which authors have been cited less than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue other than venuename0 was published most recently ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is not nature and that has the largest publication year", "variables": {}}
{"nl": "what is keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.concat keyphrasename0 keyphrasename1 ) )", "can": "semantic parsing or deep learning", "variables": {}}
{"nl": "name the paper which includes no specific journal and has a venue that is venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose journal is not journal", "variables": {}}
{"nl": "what paper with a citation count of misc0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose venue is not venue", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is not acl and whose citation count is smaller than 10", "variables": {}}
{"nl": "what 's the paper written by authorname0 with an venuename1 or venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that noah smith writes and whose venue is acl or nature", "variables": {}}
{"nl": "paper not written by authorname0 and not in journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose journal is not journal", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" was published the earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose title is not neural attention and that has the smallest publication year", "variables": {}}
{"nl": "what paper with a key phrase other thean \" keyphrasename0 \" has the earliest publication year ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is not semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "tell me the author with more than misc0 citation counts that writes the most papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is larger than 10 and that writes the most number of paper", "variables": {}}
{"nl": "what paper has misc0 citations and in not in venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose citation count is 10 and whose venue is not acl", "variables": {}}
{"nl": "what paper that has a title other than \" title0 \" does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that not cites paper", "variables": {}}
{"nl": "what paper not published in year0 has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is not 2012 and whose venue is not acl or nature", "variables": {}}
{"nl": "name the paper with an venuename1 venue and the most recent year of publication .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is acl and that has the largest publication year", "variables": {}}
{"nl": "what paper published in year0 has more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "paper that does not have a title0 title and that does not have a venue of venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose title is not neural attention and whose venue is not nature or acl", "variables": {}}
{"nl": "journal of paper not published in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" has a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper 's citation count is the citation count of authorname1 and venue is not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what is the journal of a paper with a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose venue is acl", "variables": {}}
{"nl": "i need an author with a citation count above misc0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ) )", "can": "citation count of author whose citation count is larger than 10", "variables": {}}
{"nl": "which papers written by authorname1 were published afte year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that richard anderson writes and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is not blogs and that has the largest citation count", "variables": {}}
{"nl": "name the paper that does n't have any type of keyphrase , including a keyphrasename0 keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "paper that is not written by authorname1 and does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper that richard anderson not writes and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose title is neural attention and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what author has the highest citation count less than misc0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is smaller than 10 and that has the largest citation count", "variables": {}}
{"nl": "what paper that authorname0 writes has a citation count smaller than the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what is the latest year of publication of a paper with a citation count over misc0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is larger than 10 and that has the largest publication year", "variables": {}}
{"nl": "what paper not written by authorname0 does not cite other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that not cites paper", "variables": {}}
{"nl": "what paper published in the year year0 has a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose publication year is 2012 and whose dataset is blogs", "variables": {}}
{"nl": "what title is given to a paper that has a venue that 's not venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string title_paper_title ) ) )", "can": "title of paper whose venue is not nature", "variables": {}}
{"nl": "what keyphrasename1 paper is not in a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose journal is not journal", "variables": {}}
{"nl": "what paper did authorname0 not write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) )", "can": "paper that noah smith not writes", "variables": {}}
{"nl": "how many papers have the latest publication year ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ) )", "can": "number of paper that has the largest publication year", "variables": {}}
{"nl": "what is the citation count of a paper with a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose dataset is reviews", "variables": {}}
{"nl": "what is the paper that has a datasetname1 dataset and a datasetname0 or datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is blogs and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with some specific title has a venue that 's not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose title is title", "variables": {}}
{"nl": "paper not written by authorname1 in journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose journal is journal", "variables": {}}
{"nl": "what paper written by authorname0 has a data set other than datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper that noah smith writes and whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a datasetname0 dataset has a venue that is not venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is reviews and whose venue is not acl or nature", "variables": {}}
{"nl": "keyphrasename0 paper with the fewest citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that cites the least number of paper", "variables": {}}
{"nl": "how many years is a paper not using datasetname1 dataset published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose dataset is not blogs", "variables": {}}
{"nl": "a paper with a keyphrase that is n't keyphrasename0 has what total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "which papers without authorname1 or authorname0 as authors do not have misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is not 10 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what is the year of publication for a paper not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith not writes", "variables": {}}
{"nl": "what is the title of the paper with less than or more than misc0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose citation count is not 10", "variables": {}}
{"nl": "what paper with a keyphrasename0 keyphrase has a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is reviews", "variables": {}}
{"nl": "paper that is the smallest publication of the year but does not have misc0 citations .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is not 10 and that has the smallest publication year", "variables": {}}
{"nl": "what year was a paper published with a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose dataset is reviews", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 has a venue that is either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is not reviews and whose venue is nature or acl", "variables": {}}
{"nl": "what paper that has a datasetname0 dataset does not have a datasetname0 or datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "paper with a venue of venuename1 that was published after year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose venue is acl and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a citation count that 's not misc0 has a dataset that 's not datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is not 10 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "paper published in venuename0 that does not use dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose dataset is not dataset", "variables": {}}
{"nl": "what paper with a keyphrase of keyphrasename1 has no venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is not venue", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose dataset is not dataset", "variables": {}}
{"nl": "name the paper with a journalname0 journal and a dataset other than datasetname1 or datasetname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose journal is cell and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper with a venue other than venuename0 was written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is not nature and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what is the venue for a paper entitled title0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose title is neural attention", "variables": {}}
{"nl": "what is the keyphrase of the paper from journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose journal is cell", "variables": {}}
{"nl": "what author with a citation count that is not misc0 has fewer citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a datasetname1 dataset has no specific title given to it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose title is not title", "variables": {}}
{"nl": "name the paper with a venue of venuename1 and a smaller citation count then authorname0 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "which paper that uses \" datasetname1 \" dataset has more citations from authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper with a citation count higher than misc0 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose journal is journal", "variables": {}}
{"nl": "paper that authorname0 writes and whose citation count is bigger than authorname0 's", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper titled title0 is in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose title is neural attention and whose venue is nature or acl", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose venue is acl and whose keyphrase is not deep learning", "variables": {}}
{"nl": "keyphrasename1 paper that does n't use datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is deep learning and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "name the paper that has no datasetname0 or datasetname1 dataset and a journal that 's not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose journal is not cell and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what publication year does a paper with a citation count that 's not misc0 have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose citation count is not 10", "variables": {}}
{"nl": "paper from anyone other than authorname1 and has more citations than authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper that has a publication year other than year0 was n't written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is not 2012 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose venue is venue", "variables": {}}
{"nl": "what is the key phrase of a paper with a venue other than venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is not acl", "variables": {}}
{"nl": "what paper with a venue that is n't venuename0 has a citation count below authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what is the journal of a paper not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that richard anderson not writes", "variables": {}}
{"nl": "what is the journal of the paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper", "variables": {}}
{"nl": "what paper published before year0 is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that the most number of author writes", "variables": {}}
{"nl": "what paper published before year0 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a keyphrase of keyphrasename1 or keyphrasename0 also has a dataset that is n't datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what journal - style paper is written in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose journal is journal", "variables": {}}
{"nl": "how many papers doe not have a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper published prior to year0 does not have any journal type ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose journal is not journal", "variables": {}}
{"nl": "what paper has a data set of datasetname0 and no title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose title is title", "variables": {}}
{"nl": "what paper with a journal of journalname0 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose keyphrase is keyphrase", "variables": {}}
{"nl": "the paper with the title of \" title0 \" and uses the dataset of \" datasetname1 \" .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose title is neural attention and whose dataset is blogs", "variables": {}}
{"nl": "what 's the publication year of a paper with a citation count greater than misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what papers published before year0 do n't use the datasets \" datasetname1 \" or \" datasetname0 \" ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper written by authorname1 has a higher citation count than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "paper not written by authorname1 with a title other than title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper that richard anderson not writes and whose title is not neural attention", "variables": {}}
{"nl": "paper with title0 in its title that is written by authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose title is neural attention and that richard anderson or noah smith writes", "variables": {}}
{"nl": "paper with title0 in title not about keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose title is neural attention and whose keyphrase is not deep learning", "variables": {}}
{"nl": "what titled paper has a keyphrase of keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose title is title", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 has the largest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose journal is not cell and that has the largest citation count", "variables": {}}
{"nl": "what paper with a keyphrasename0 or keyphrasename1 keyphrase has a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose journal is not cell and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper has a keyphrase that is n't keyphrasename1 or keyphrasename0 and a journal that is n't journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose journal is not cell and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what is the paper with a venue that is not an venuename1 venue and a citation count that is n't the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the data set of the paper with a key phrase other than \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a venue other than venuename0 is written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is not nature and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what is the venue of the paper that does not have a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose venue is not nature", "variables": {}}
{"nl": "what paper with a year0 year of publication cites other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that cites paper", "variables": {}}
{"nl": "what paper by authorname1 is not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) )", "can": "paper that richard anderson writes and that noah smith not writes", "variables": {}}
{"nl": "what year was a paper published that has a dataset that 's not datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose dataset is not blogs", "variables": {}}
{"nl": "how many titles are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "number of title", "variables": {}}
{"nl": "what paper published before year0 has a citation count not equal to authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper about keyphrasename0 has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is larger than 10", "variables": {}}
{"nl": "what 's the citation count of the paper that has the biggest citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string citation_count_paper_number ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that has the largest citation count", "variables": {}}
{"nl": "what paper not citing other papers has a citation count unequal to misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that paper not cites", "variables": {}}
{"nl": "which paper was not published in year0 , and not published in a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose journal is not journal", "variables": {}}
{"nl": "what paper with a ciation count of misc0 has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is 10 and that has the smallest citation count", "variables": {}}
{"nl": "paper which has a keyphrase keyphrasename0 and was n't published in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper that has a dataset that is not datasetname0 has fewer citations then the citations of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "which paper with most citations has misc0 citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper published in year0 was published earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is 2012 and that has the smallest publication year", "variables": {}}
{"nl": "what paper written by an author has a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that author writes", "variables": {}}
{"nl": "what paper has a citation count higher than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is larger than 10", "variables": {}}
{"nl": "paper with citations that is published before year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that cites paper", "variables": {}}
{"nl": "paper not published in year0 that does not have a title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose title is not title", "variables": {}}
{"nl": "what venuename1 paper does n't cite any paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that not cites paper", "variables": {}}
{"nl": "what is the citation count of the paper whose title is not title0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose title is not neural attention", "variables": {}}
{"nl": "what is a journalname0 ?", "lf": "( call SW.listValue  journalname0 )", "can": "cell", "variables": {}}
{"nl": "what paper not published in year0 does not have the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a keyphrase that is not keyphrasename1 has a dataset that is n't datasetname1 and is n't datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "paper with the most author and does n't have ' title0 ' in the title", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that the most number of author writes", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is not dataset", "variables": {}}
{"nl": "what venue does a paper not written by authorname0 have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith not writes", "variables": {}}
{"nl": "which paper using the datasetname0 dataset has the fewest citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is reviews and that has the smallest citation count", "variables": {}}
{"nl": "paper that is not journalname0 journal and is not written by authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose journal is not cell and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what is the citation count of a paper that has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "a paper written by authorname1 that has the greatest number authors .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that the most number of author writes", "variables": {}}
{"nl": "what paper published in year0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose title is not title", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose journal is cell and whose venue is not acl", "variables": {}}
{"nl": "what paper with keyphrasename1 as its keyphrase has the fewest citations of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that cites the least number of paper", "variables": {}}
{"nl": "what paper published in year0 was written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is 2012 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose title is not title", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" is written by the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that the least number of author writes", "variables": {}}
{"nl": "what paper with a venue that 's not venuename1 was published some year earlier than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose venue is not acl and whose publication year is smaller than 2012", "variables": {}}
{"nl": "show me a paper that was not published in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose publication year is not 2012", "variables": {}}
{"nl": "what paper written by authorname0 does n't have the title title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper that noah smith writes and whose title is not neural attention", "variables": {}}
{"nl": "which paper that was published somewhere besides venuename0 was not about keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is not nature and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper not in venuename0 has a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose citation count is 10 and whose venue is not nature", "variables": {}}
{"nl": "what paper published after year0 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that cites the least number of paper", "variables": {}}
{"nl": "what paper has an under-misc0 citation count and a keyphrasename1 or keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "which paper is not about datasetname0 and was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose publication year is not 2012 and whose dataset is not reviews", "variables": {}}
{"nl": "which paper authored by authorname0 has the most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {}}
{"nl": "name the paper with keyphrasename0 as its keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "a paper which does not have journalname0 as its journal has what as its journal instead ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose journal is not cell", "variables": {}}
{"nl": "what paper did authorname1 write that neither authorname0 nor richard andreson wrote ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that richard anderson writes and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a key phrase of keyphrasename0 has a citation count that is not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is not 10", "variables": {}}
{"nl": "which papers were published before year0 in journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose journal is journal", "variables": {}}
{"nl": "how many papers were not published in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ) )", "can": "number of paper whose publication year is not 2012", "variables": {}}
{"nl": "what paper not published in year0 has a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what was the year of the paper 's publishing ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper", "variables": {}}
{"nl": "what paper authored by authorname0 is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has a data set that is not datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is not acl and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "name the journal of a paper which has n't been titled title0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose title is not neural attention", "variables": {}}
{"nl": "name the paper with a journal that 's journalname0 and a keyphrasename1 or keyphrasename0 keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose journal is cell and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what is a paper with a key phrase other than \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper without authorname1 as a writer has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper that richard anderson not writes and that has the smallest citation count", "variables": {}}
{"nl": "what paper has a datasetname0 or datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "paper writmisc0 by authorname0 or authorname1 and has more than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is larger than 10 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper published in year0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose dataset is not dataset", "variables": {}}
{"nl": "what paper published after year0 does not have authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper cited by another paper has a publication date other than the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that paper cites", "variables": {}}
{"nl": "which author has the fewest citations more than misc0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string min ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is larger than 10 and that has the smallest citation count", "variables": {}}
{"nl": "what paper with more than misc0 citations is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that the most number of paper cites", "variables": {}}
{"nl": "what paper that another paper cites has a less than misc0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that paper cites", "variables": {}}
{"nl": "what paper with a citation count over misc0 has a venue of venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is not 10 and whose venue is nature or acl", "variables": {}}
{"nl": "what is authorname1 or authorname0 's total count of citations ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.concat authorname0 authorname1 ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of noah smith or richard anderson", "variables": {}}
{"nl": "what paper not having misc0 citations has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what is the key phrase of the paper with the title \" title0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose title is neural attention", "variables": {}}
{"nl": "what paper has a citation count of misc0 and has a citation count larger than that of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper not written by authorname1 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose title is title", "variables": {}}
{"nl": "what paper with a venue other than venuename1 was published the earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is not acl and that has the smallest publication year", "variables": {}}
{"nl": "what is the total citation count of a paper that is not titled \" title0 ? \"", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose title is not neural attention", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose citation count is 10 and whose dataset is blogs", "variables": {}}
{"nl": "what paper without a title0 title has the fewest amount of paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that the least number of paper cites", "variables": {}}
{"nl": "paper published in venuename0 that does not have misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is not 10", "variables": {}}
{"nl": "what paper with a citation count other than misc0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that cites paper", "variables": {}}
{"nl": "what paper cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that cites the most number of paper", "variables": {}}
{"nl": "name the paper not written by authorname0 with a dataset that is datasetname0 or datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that noah smith not writes and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what is the venue of a paper published after year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper written by authorname0 is not in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper that noah smith not writes and whose venue is not nature", "variables": {}}
{"nl": "what paper not written by authorname1 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what is the venue of a paper not published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose publication year is not 2012", "variables": {}}
{"nl": "what author has misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) )", "can": "author whose citation count is 10", "variables": {}}
{"nl": "what paper with more than misc0 citations is writmisc0 by neither authorname0 nor authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is larger than 10 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "name the paper with a dataset that is not datasetname1 and a keyphrase that is keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is not blogs and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "author authorname1", "lf": "( call SW.listValue authorname1 )", "can": "richard anderson", "variables": {}}
{"nl": "what paper published after year0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "paper that does not have title0 in its title and has more citations from authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname1 or authorname0 has a year of publication that is earlier than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is smaller than 2012 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper published in year0 does not have a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "paper that does n't have keyphrasename1 as a keyphrase and that has the dataset datasetname1 or datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose journal is journal", "variables": {}}
{"nl": "paper that does not use datasetname1 and has citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that paper cites", "variables": {}}
{"nl": "which paper with number of citations does not use \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose dataset is not reviews", "variables": {}}
{"nl": "what papers has authorname1 written that are not journals ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose journal is not journal", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose journal is not journal", "variables": {}}
{"nl": "paper that does not have misc0 citations and not writmisc0 by an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that author not writes", "variables": {}}
{"nl": "the oldest paper published that is not written by authorname1", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that richard anderson not writes and that has the smallest publication year", "variables": {}}
{"nl": "what paper from journalname0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that cites paper", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a data set of either datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is 10 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "how many papers have misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose citation count is 10", "variables": {}}
{"nl": "what paper with key phrases of \" keyphrasename1 \" does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that paper not cites", "variables": {}}
{"nl": "what paper not written by authorname0 was published most recently ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith not writes and that has the largest publication year", "variables": {}}
{"nl": "what year was a paper with a journal of journalname0 published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose journal is cell", "variables": {}}
{"nl": "what paper with a journal other than journalname0 has a venue of either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose journal is not cell and whose venue is nature or acl", "variables": {}}
{"nl": "name the paper published in a year other than year0 with a venue that is n't venuename0 and is n't venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is not 2012 and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper whose venue is acl", "variables": {}}
{"nl": "paper with keyphrase not keyphrasename0 and venue not venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is not nature", "variables": {}}
{"nl": "paper written by authorname0 whose topic is not keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper that noah smith writes and whose keyphrase is not deep learning", "variables": {}}
{"nl": "name the paper with a dataset that is not datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose dataset is not blogs", "variables": {}}
{"nl": "i need the total publication year of paper that has a dataset other than datasetname0", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose dataset is not reviews", "variables": {}}
{"nl": "what paper lacks a title and has a keyphrase other than keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose title is not title", "variables": {}}
{"nl": "what paper has a venue that is venuename1 and a citation count that 's less than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is acl and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with the earliest year of publication has a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose journal is not cell and that has the smallest publication year", "variables": {}}
{"nl": "a paper by authorname1 that is cited less then his total citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what is the data set of a paper which does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a higher citation count that authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose journal is cell and whose citation count is not 10", "variables": {}}
{"nl": "what paper with a title of \" title0 \" is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that the least number of paper cites", "variables": {}}
{"nl": "what paper published in the time period after year0 has a title of some sort ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose title is title", "variables": {}}
{"nl": "what paper with authorname0 or authorname1 as its author was published in a year subsequent to year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is larger than 2012 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper written by authorname0 has a journal other than journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper that noah smith writes and whose journal is not cell", "variables": {}}
{"nl": "what paper with a data set of datasetname1 is written by neither authorname0 nor authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is blogs and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with neither datasetname0 nor datasetname1 as its dataset was not authored by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that noah smith not writes and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "paper not published in year0 and has the most citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that cites the most number of paper", "variables": {}}
{"nl": "what paper with a citation count below authorname1 's citation count has a keyphrase other than keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "name the paper with a citation count that is less than authorname1 's citation count and a citation count lower than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "which paper with a datasetname0 dataset has a citation count less than authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what is the total citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "total citation count of noah smith", "variables": {}}
{"nl": "what paper has a keyphrase that is n't keyphrasename0 and a journal that is journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose journal is cell and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what is the journal of paper that has the latest publication year ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper that has the largest publication year", "variables": {}}
{"nl": "what paper from venuename1 has a citation count that is not the same as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the journal of the paper written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that richard anderson writes", "variables": {}}
{"nl": "paper that uses datasetname1 dataset and has title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose title is title", "variables": {}}
{"nl": "what paper with a venue other than venuename0 has a lower citation count than authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 has a venue of neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is not reviews and whose venue is acl or nature", "variables": {}}
{"nl": "a paper entitled title0 has what date as its total publication year ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose title is neural attention", "variables": {}}
{"nl": "what paper with a datasetname0 dataset was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose dataset is reviews and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper did authorname0 not write that has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper that noah smith not writes and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper published after year0 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "the paper with a citation count that is not misc0 has what year as its publication year ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose citation count is not 10", "variables": {}}
{"nl": "what is the venue of a paper with a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper with a venue other than venuename1 does not have a title of \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose venue is not acl and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a journal that 's not journalname0 has a keyphrase that 's not keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose keyphrase is not deep learning and whose journal is not cell", "variables": {}}
{"nl": "name the paper with a datasetname0 dataset and a datasetname1 or datasetname0 dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is reviews and whose dataset is blogs or reviews", "variables": {}}
{"nl": "papers in which the citation count is smaller than the citation count belonging to authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "which paper with misc0 citations does not have a keyphrase", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper written by authorname1 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper not titled title0 is cited ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that paper cites", "variables": {}}
{"nl": "what is the paper with a journal that is n't journalname0 and also with a venue that is not venuename0 or is not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose journal is not cell and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" has more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename1 \" and cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that cites the most number of paper", "variables": {}}
{"nl": "what paper with authorname1 as its writer has no specific title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose title is not title", "variables": {}}
{"nl": "what paper with a journal that is n't journalname0 has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose keyphrase is deep learning and whose journal is not cell", "variables": {}}
{"nl": "paper in th journalname0 hournal with less citations than authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "keyphrasename1 paper written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that author writes", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have the title \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose dataset is reviews and whose title is not neural attention", "variables": {}}
{"nl": "paper with \" title0 \" in title and uses dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose dataset is dataset", "variables": {}}
{"nl": "paper that authorname1 writes and does n't have a datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that richard anderson writes and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "paper that has a citation count other than misc0 and that has a keyphrase not keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is not 10 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "name the paper with a datasetname0 dataset and a citation count greater than authorname0 's .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "a paper whose journey is journalname0 has what as its year of publication ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose journal is cell", "variables": {}}
{"nl": "what paper published in year0 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that not cites paper", "variables": {}}
{"nl": "what year was the paper published that has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a citation count over misc0 cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that paper cites", "variables": {}}
{"nl": "what paper is not cited by other papers and has a citation count equaling misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that paper not cites", "variables": {}}
{"nl": "what paper that does not have a misc0 as its citation count has the highest amount of paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a citation count of misc0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose dataset is dataset", "variables": {}}
{"nl": "what paper lacking citations from other papers has a year0 publishing year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that paper not cites", "variables": {}}
{"nl": "what is the venue of the paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue_paper_venue ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "venue that is venue of paper", "variables": {}}
{"nl": "which paper is not about datasetname1 and was not written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is not blogs and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper published in year0 does not have a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what is the paper with a dataset that is n't datasetname0 and a citation count which is bigger than authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper not about keyphrasename0 has a citation count the same of that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that not cites paper", "variables": {}}
{"nl": "what paper not written by authorname0 is also not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that noah smith not writes and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "papers title title0 not written by authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper that noah smith not writes and whose title is neural attention", "variables": {}}
{"nl": "what is the citation count of the paper with a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose venue is nature", "variables": {}}
{"nl": "what paper journal is there without title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose journal is journal", "variables": {}}
{"nl": "how many papers are published outside of venuename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ) )", "can": "number of paper whose venue is not nature", "variables": {}}
{"nl": "what paper with a data set of datasetname0 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that cites the least number of paper", "variables": {}}
{"nl": "what paper with a data set of datasetname1 does not have a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is blogs and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is not blogs and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not published in year0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose venue is not venue", "variables": {}}
{"nl": "name the paper which does n't have venuename0 as its venue that is cited by another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that paper cites", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 does not have a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper that uses datasetname1 and not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper that noah smith not writes and whose dataset is blogs", "variables": {}}
{"nl": "name the paper that has a specific key phrase . and a key phrase that is keyphrasename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is keyphrase", "variables": {}}
{"nl": "how many authors have a citation count of misc0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ) )", "can": "number of author whose citation count is 10", "variables": {}}
{"nl": "a paper published after year0 that does n't cite .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that not cites paper", "variables": {}}
{"nl": "which unpublished paper did not use the \" datasetname1 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose venue is not venue", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose dataset is not dataset", "variables": {}}
{"nl": "paper that uses datasetname0 dataset and not in a journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose journal is not journal", "variables": {}}
{"nl": "what paper with a venue that is not venuename0 was published earleist ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is not nature and that has the smallest publication year", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename0 \" and is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that paper not cites", "variables": {}}
{"nl": "what is the title ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) )", "can": "title", "variables": {}}
{"nl": "what papers has a citation count smaller than misc0 and have not been writmisc0 by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is smaller than 10 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper with venuename0 as its venue has datasetname1 or datasetname0 as its dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is nature and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper published in year0 has the latest year of publication ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is 2012 and that has the largest publication year", "variables": {}}
{"nl": "which paper has misc0 citations and was published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose publication year is 2012 and whose citation count is 10", "variables": {}}
{"nl": "paper with topic that is not about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a citation count of misc0 does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what is the paper citing the greatest number of other papers that was published in the year year0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that cites the most number of paper", "variables": {}}
{"nl": "can you give me a paper which has the dataset not datasetname0 that has the dataset not datasetname1 or datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is not reviews and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "authors without citation counts of misc0 have what total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author whose citation count is not 10", "variables": {}}
{"nl": "paper that has title0 in its title and not published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose title is neural attention and whose venue is not nature or acl", "variables": {}}
{"nl": "paper written by authorname0 has what total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that noah smith writes", "variables": {}}
{"nl": "paper with title0 in its title not about keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose title is neural attention and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper written by authorname1 is published in venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper that richard anderson writes and whose venue is acl", "variables": {}}
{"nl": "what paper with a citation count over misc0 does not have a keyphrasename0 or keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what author has a citation count other than misc0 and is the largest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is not 10 and that has the largest citation count", "variables": {}}
{"nl": "what paper with a venue of venuename0 has less citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "which paper is either published in venuename1 or unpublished ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose venue is not venue", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is acl and whose dataset is blogs or reviews", "variables": {}}
{"nl": "the keyphrase of the paper that used the datasetname0 dataset", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose dataset is reviews", "variables": {}}
{"nl": "what 's the paper with a journal that is n't journalname0 and a keyphrase that is not keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose journal is not cell and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper written by the author", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that author writes", "variables": {}}
{"nl": "paper that was not written by authorname1 and has the least number of cites .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that the least number of paper cites", "variables": {}}
{"nl": "what is the journal of the paper published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose publication year is 2012", "variables": {}}
{"nl": "what paper has the fewest paper citations and a year of publication other than year0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that the least number of paper cites", "variables": {}}
{"nl": "largest publication paper but not from year0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is not 2012 and that has the largest publication year", "variables": {}}
{"nl": "what paper with a venue other than venuename1 was written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is not acl and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that cites paper", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper 's got the smallest count of other paper citations and a keyphrase which is keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that the least number of paper cites", "variables": {}}
{"nl": "paper not about keyphrasename1 and not written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is not deep learning and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what 's the paper with an venuename1 venue that has a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is acl and whose venue is nature or acl", "variables": {}}
{"nl": "i want a paper that has the dataset datasetname1 and which has the journal not journalname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose dataset is blogs and whose journal is not cell", "variables": {}}
{"nl": "what 's the paper published before year0 that has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose dataset is blogs and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a venue of venuename0 does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose venue is nature and whose dataset is not blogs", "variables": {}}
{"nl": "what paper published in year0 has a data set that is not datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is 2012 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what are the titles of papers written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string title_paper_title ) ) )", "can": "title of paper that richard anderson writes", "variables": {}}
{"nl": "what paper with a journal that is n't journalname0 has one of two keyphrases , either keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose journal is not cell and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not published in year0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose venue is venue", "variables": {}}
{"nl": "i need a paper which has the journal called journalname0 and hasmorecitations than authorname1 does", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a citation count other than misc0 has a citation count not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the total citation count of an author ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author", "variables": {}}
{"nl": "what paper with a journal that is n't journalname0 has a title that 's not title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose journal is not cell and whose title is not neural attention", "variables": {}}
{"nl": "what paper written by authorname0 was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is not 2012", "variables": {}}
{"nl": "what paper not by venuename1 has a citation count higher than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose venue is not acl and whose citation count is larger than 10", "variables": {}}
{"nl": "a paper that is not written by authorname1 and does not discuss keyphrasename1 or keyphrasename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "paper not writmisc0 by authorname1 that has a citation count other than misc0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper that richard anderson not writes and whose citation count is not 10", "variables": {}}
{"nl": "a paper with a dataset of datasetname0 has what journal ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose dataset is reviews", "variables": {}}
{"nl": "what paper has a key pharse other than \" keyphrasename0 \" and no author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that author not writes", "variables": {}}
{"nl": "the paper with a venuename0 venue has what as its keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is nature", "variables": {}}
{"nl": "what paper with a journal of journalname0 has the lowest number of citations of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a journal of journalname0 has a venue that is not venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose journal is cell and whose venue is not nature", "variables": {}}
{"nl": "what keyphrase paper is not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that the least number of author writes", "variables": {}}
{"nl": "papers with more than misc0 citations in venue", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is venue", "variables": {}}
{"nl": "paper with title0 in its title with the most citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that the most number of paper cites", "variables": {}}
{"nl": "which author has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string min ) ( string citation_count_author_number ) ) )", "can": "author that has the smallest citation count", "variables": {}}
{"nl": "what paper with an venuename1 venue was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper that noah smith not writes and whose venue is acl", "variables": {}}
{"nl": "dataset of paper with less than misc0 citations", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "name the paper with a citation count exceeding misc0 and the greatest number of other paper citations .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that cites the most number of paper", "variables": {}}
{"nl": "paper that did not use the \" datasetname0 \" dataset and was published in venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose venue is venue", "variables": {}}
{"nl": "what paper not written by authorname1 does not feature datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that richard anderson not writes and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper not by venuename0 was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose venue is not nature and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose title is title", "variables": {}}
{"nl": "which paper that was n't penned by authorname1 includes a keyphrasename1 or keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that richard anderson not writes and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "how many papers were published in the years before year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ) )", "can": "number of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "name the paper that authorname1 or authorname0 did not write and that does not have a keyphrasename0 keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper published sometime other than year0 has a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is not 2012 and whose venue is nature or acl", "variables": {}}
{"nl": "paper using the \" datasetname0 \" dataset which cites the most papers .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that cites the most number of paper", "variables": {}}
{"nl": "keyphrasename1 paper that uses dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose dataset is dataset", "variables": {}}
{"nl": "what is the citation count of a paper with the most recent year of publication ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that has the largest publication year", "variables": {}}
{"nl": "what is the paper that 's got a keyphrase that differs from keyphrasename0 and a dataset that differs from datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is not reviews", "variables": {}}
{"nl": "what is the paper 's keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper", "variables": {}}
{"nl": "what paper has more than misc0 citations and a data set that is not data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is not dataset", "variables": {}}
{"nl": "paper with less than misc0 citations and not about keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper is not about keyphrasename1 and has the most number of citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that cites the most number of paper", "variables": {}}
{"nl": "what paper not written by authorname0 was also not a paper that authorname1 wrote ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) )", "can": "paper that noah smith not writes and that richard anderson not writes", "variables": {}}
{"nl": "what paper has a journal that 's journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper whose journal is cell", "variables": {}}
{"nl": "what is authorname1 's or authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.concat authorname0 authorname1 ) ( string citation_count_author_number ) ) )", "can": "citation count of noah smith or richard anderson", "variables": {}}
{"nl": "what 's the complete citation count of the paper with the earliest year of publication ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that has the smallest publication year", "variables": {}}
{"nl": "what paper not having a keyphrasename1 or keyphrasename0 keyphrase has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what is the paper entitled title0 that cites another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that cites paper", "variables": {}}
{"nl": "what author does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "papers with less than misc0 citiations who are not a journalname0 journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose journal is not cell and whose citation count is smaller than 10", "variables": {}}
{"nl": "what is the key phrase of a paper with a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose journal is not cell", "variables": {}}
{"nl": "a paper not dealing with keyphrasename0 and does n't have the venue of venuename1 or venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is not acl or nature", "variables": {}}
{"nl": "name the paper with a keyphrase of keyphrasename1 but not a keyphrase of keyphrasename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose dataset is reviews and whose dataset is blogs", "variables": {}}
{"nl": "paper with title0 in its title that does not use datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose title is neural attention and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "the most recent published paper after year0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is larger than 2012 and that has the largest publication year", "variables": {}}
{"nl": "which papers written by authorname0 are cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that the most number of paper cites", "variables": {}}
{"nl": "what paper without a title focused on title0 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose title is not neural attention and that has the smallest citation count", "variables": {}}
{"nl": "what is the paper that does not have keyphrasename0 as its keyphrase and does not have title0 as the title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose keyphrase is not semantic parsing and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 does not have a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose title is not title", "variables": {}}
{"nl": "what paper that does not have a venue of venuename1 also does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose venue is not acl and whose dataset is not blogs", "variables": {}}
{"nl": "what paper not from venuename0 has a citation count higher than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what does the number misc0 apply to ?", "lf": "( call SW.listValue ( misc0 ) )", "can": "10", "variables": {}}
{"nl": "what paper is not in venuename0 and does not have citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose venue is not nature and whose citation count is not 10", "variables": {}}
{"nl": "what is a paper which does not have the keyphrasename0 keyphrase and that is has a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose title is title", "variables": {}}
{"nl": "paper that does not use datasetname1 dataset and has fewest citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is not blogs and that has the smallest citation count", "variables": {}}
{"nl": "what paper entitled title0 has a dataset that is n't datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose title is neural attention and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is acl and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper was n't written by authorname1 but was written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson not writes and that richard anderson or noah smith writes", "variables": {}}
{"nl": "which paper is cited the least number of times by other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that the least number of paper cites", "variables": {}}
{"nl": "what paper with a journal other than journalname0 does not have the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper published in year0 has a dataset of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose publication year is 2012 and whose dataset is reviews", "variables": {}}
{"nl": "what paper with a citation count other than misc0 has a data set other than data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose dataset is not dataset", "variables": {}}
{"nl": "what is the name of the paper that authorname1 writes in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that richard anderson writes and whose venue is nature or acl", "variables": {}}
{"nl": "a authorname1 paper that cites .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that cites paper", "variables": {}}
{"nl": "what paper with a journal other than journalname0s has a citation count equal to authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "keyphrasename0 paper written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that author writes", "variables": {}}
{"nl": "what is the journal of a paper with a citation count above misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose citation count is larger than 10", "variables": {}}
{"nl": "paper not using \" datasetname0 \" dataset and written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that author writes", "variables": {}}
{"nl": "paper not published in venuename0 , and not written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is not nature and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper has a keyphrase other than keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "paper published in venuename1 and does not use datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is acl and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper with venuename0 as its venue has a citation count not equal to authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper cited by a paper was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that paper cites", "variables": {}}
{"nl": "what authorname0 - written paper has a publication date that comes before the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper published before year0 has the fewest citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is smaller than 2012 and that has the smallest citation count", "variables": {}}
{"nl": "i 'd like a paper with the journal called journalname0 that has the least amount of paper citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that cites the least number of paper", "variables": {}}
{"nl": "what paper without a keyphrasename1 keyphrase has no citations by other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that paper not cites", "variables": {}}
{"nl": "which papers have misc0 or more citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is 10 and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that paper not cites", "variables": {}}
{"nl": "what datasetname1 or datasetname0 are there ?", "lf": "( call SW.listValue ( call SW.concat datasetname1 datasetname0 ) )", "can": "blogs or reviews", "variables": {}}
{"nl": "which paper with a venue that is not venuename1 or venuename0 has the title title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose title is neural attention and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper not written by authorname1 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose journal is not journal", "variables": {}}
{"nl": "what paper has a journal of journalname0 and a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper whose venue is nature and whose journal is cell", "variables": {}}
{"nl": "paper not published in venuename1 and paper published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is not acl and whose venue is nature or acl", "variables": {}}
{"nl": "what paper not by venuename1 has a citation count smaller than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "paper that does not have title0 and the citation is not misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose title is not neural attention and whose citation count is not 10", "variables": {}}
{"nl": "paper published in venuename1 and not published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose venue is acl and whose venue is not nature", "variables": {}}
{"nl": "where was this paper published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose publication year is 2012", "variables": {}}
{"nl": "what paper with a publication year before year0 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that paper not cites", "variables": {}}
{"nl": "paper not published in venuename1 with largest citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that the most number of paper cites", "variables": {}}
{"nl": "what author with a citation count of misc0 does not have the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper lacking a title0 title has a keyphrasename1 or keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "paper not from the venuename1 venue that has the least citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is not acl and that has the smallest citation count", "variables": {}}
{"nl": "what paper that authorname1 wrote has a venue that is n't venuename1 and is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that richard anderson writes and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with the greatest number of author writes has a dataset that 's not datasetname1 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that the most number of author writes", "variables": {}}
{"nl": "what paper with a journal other than journalname0 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that the most number of paper cites", "variables": {}}
{"nl": "what paper without venuename0 as its venue was not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper that richard anderson not writes and whose venue is not nature", "variables": {}}
{"nl": "what 's the paper that does n't have datasetname1 as its dataset and has the highest number of other paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that cites the most number of paper", "variables": {}}
{"nl": "topics of papers with citations higher than misc0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper has a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is blogs or reviews", "variables": {}}
{"nl": "paper not publshed in venuename0 and venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose venue is not nature and whose venue is not acl", "variables": {}}
{"nl": "what paper that authorname0 writes has a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that noah smith writes and whose venue is nature or acl", "variables": {}}
{"nl": "paper with title0 in its title and uses datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose title is neural attention and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a venue of venuename1 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that paper cites", "variables": {}}
{"nl": "what paper by venuename0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that cites paper", "variables": {}}
{"nl": "which paper includes a journal of some type and a keyphrase that is keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose journal is journal", "variables": {}}
{"nl": "what paper that is not titled title0 has a citation count higher than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "paper not published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is not acl and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that cites paper", "variables": {}}
{"nl": "what paper with a citation count equal to misc0 has a citation count that 's not authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the data set of a paper that does not have a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose journal is not cell", "variables": {}}
{"nl": "paper written by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {}}
{"nl": "what is the year that a paper with a journal that 's not journalname0 was published?what paper with a citation count above 10 has a citation count that is noah smiths citation count", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose journal is not cell", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose title is not title", "variables": {}}
{"nl": "a paper without an venuename1 venue nor a journalname0 journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose venue is not acl and whose journal is not cell", "variables": {}}
{"nl": "what paper written by authorname1 has an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that author writes", "variables": {}}
{"nl": "what paper does not have a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is not reviews or blogs", "variables": {}}
{"nl": "amount of venue", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "number of venue", "variables": {}}
{"nl": "what is the data set of a paper not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith not writes", "variables": {}}
{"nl": "what is the title of a paper published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose publication year is 2012", "variables": {}}
{"nl": "tell me a paper that authorname0 did n't author and which was not located in venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose venue is not venue", "variables": {}}
{"nl": "how many citations does a paper not written by authorname1 have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that richard anderson not writes", "variables": {}}
{"nl": "what paper before year0 did authorname1 or authorname0 not write for ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is smaller than 2012 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper not published in year0 has the fewets authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that the least number of author writes", "variables": {}}
{"nl": "what author has a citation cunt below misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) )", "can": "author whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper not written by authorname1 has fewer citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "show me a paper journal that was n't written by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper that noah smith not writes", "variables": {}}
{"nl": "what paper does not have a key phrase of \" keyphrasename0 \" nor a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is acl or nature", "variables": {}}
{"nl": "what paper has a citation count not equal to misc0 and a venue that is not venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is not 10 and whose venue is not nature or acl", "variables": {}}
{"nl": "what is the paper 's citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper", "variables": {}}
{"nl": "what is the topic of paper published after year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "paper that is not writmisc0 by authorname1 and has a smaller citation count than misc0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper that richard anderson not writes and whose citation count is smaller than 10", "variables": {}}
{"nl": "what papers written by authorname0 were published in venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper that noah smith writes and whose venue is acl", "variables": {}}
{"nl": "paper with the most authors and whose journal is journalname0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that the most number of author writes", "variables": {}}
{"nl": "what paper not written by authorname1 has a venue that is neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that richard anderson not writes and whose venue is not nature or acl", "variables": {}}
{"nl": "paper with more than misc0 citations from fewest sources", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that cites the least number of paper", "variables": {}}
{"nl": "a paper with a keyphrase that is keyphrasename1 would have what for its title ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string title_paper_title ) ) )", "can": "title of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "which of authorname1 's papers does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "which paper titled title0 does not have a total of misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose title is neural attention and whose citation count is not 10", "variables": {}}
{"nl": "what paper was written by an author but not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that author writes", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose citation count is 10 and whose journal is not cell", "variables": {}}
{"nl": "paper written by authorname0 and has citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that cites paper", "variables": {}}
{"nl": "what paper published in year0 does not have a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose publication year is 2012 and whose journal is not cell", "variables": {}}
{"nl": "what paper by authorname1 has a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper that richard anderson writes and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with no dataset has a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose dataset is not dataset", "variables": {}}
{"nl": "what is the journal of a paper with a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "name the paper with a keyphrase other than keyphrasename0 and a citation count over misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is larger than 10", "variables": {}}
{"nl": "which paper did authorname0 or authorname1 write that is not about datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is not reviews and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper not written by authorname1 that is published in venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper that richard anderson not writes and whose venue is acl", "variables": {}}
{"nl": "what paper with a data set of datasetname1 has a venue of either venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is blogs and whose venue is acl or nature", "variables": {}}
{"nl": "what paper was n't written by authorname0 and was n't published in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that noah smith not writes and whose venue is not nature or acl", "variables": {}}
{"nl": "paper published in a year other than year0 and has a larger citation count than authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a datasetname1 or datasetname0 dataset has some year following year0 as its publication date ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper written by authorname1 has a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that richard anderson writes and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a data set of datasetname1 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose venue is not venue", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 is written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose journal is not cell and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what is the citation count of a paper written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that richard anderson writes", "variables": {}}
{"nl": "what paper with a venue that is not venuename0 was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose venue is not nature and whose publication year is larger than 2012", "variables": {}}
{"nl": "the paper with the most citations that does not have misc0 citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is not 10 and that has the largest citation count", "variables": {}}
{"nl": "which paper with a keyphrasename0 keyphrase has the earliest year of publication ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {}}
{"nl": "what is the publication year of a paper published after year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "which paper is written by authorname1 that uses the \" datasetname1 or datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that richard anderson writes and whose dataset is blogs or reviews", "variables": {}}
{"nl": "name the paper with a venuename0 venue and a keyphrase that is n't keyphrasename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose venue is nature and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper does not have a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose venue is not nature", "variables": {}}
{"nl": "the paper with the earliest year of publication has what as its venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that has the smallest publication year", "variables": {}}
{"nl": "paper with the most authors including authorname0", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that the most number of author writes", "variables": {}}
{"nl": "which author does n't write papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author that not writes paper", "variables": {}}
{"nl": "how many authors have a citation count under misc0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ) )", "can": "number of author whose citation count is smaller than 10", "variables": {}}
{"nl": "show me a paper by authorname0 which has datasetname0 as the dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper that noah smith writes and whose dataset is reviews", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a key phrase of \" keyphrase ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose keyphrase is keyphrase", "variables": {}}
{"nl": "who is the author that has a misc0 count citation and has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper has a dataset that is n't datasetname1 and also not a keyphrasename1 or keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is not blogs and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a citation count over misc0 with writmisc0 by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is larger than 10 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper has fewer than misc0 citations and is not published in venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with the least amount of citations was written by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest citation count", "variables": {}}
{"nl": "what paper with a citation count that 's different than misc0 has the highest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that the most number of author writes", "variables": {}}
{"nl": "papers that were not written by authorname1 and that were written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that richard anderson not writes and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper written by authorname1 was not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson writes and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper not written by authorname0 , with more citations than authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "name the paper with a keyphrasename1 keyphrase and a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose keyphrase is deep learning and whose dataset is reviews", "variables": {}}
{"nl": "what is the number of citations from authorname1 's paper", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that richard anderson writes", "variables": {}}
{"nl": "what paper without keyphrasename1 as its keyphrase does no citing of other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that not cites paper", "variables": {}}
{"nl": "paper with less than misc0 citations that is publishein venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is nature or acl", "variables": {}}
{"nl": "i would like to see a paper published in year0 that was not located in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose publication year is 2012 and whose venue is not nature", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "keyphrasename1 or keyphrasename0 paper that uses \" datasetname0 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper containing a keyphrase has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what 's the paper called that authorname0 does not write ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string title_paper_title ) ) )", "can": "title of paper that noah smith not writes", "variables": {}}
{"nl": "what author with a less - than-misc0 citation count has a citation count that is not authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what number of papers are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "number of paper", "variables": {}}
{"nl": "paper not published in year0 with the largest number of citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is not 2012 and that has the largest citation count", "variables": {}}
{"nl": "a paper without a venue not written by authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose venue is not venue", "variables": {}}
{"nl": "paper published in venuename1 that does not use datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is acl and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper has a larger citation count than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "paper published at venuename0 with citations from many sources", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that cites the most number of paper", "variables": {}}
{"nl": "what paper published before year0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose venue is not venue", "variables": {}}
{"nl": "what paper with a key phrase of keyphrasename1 has a citation count not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "name the paper with a dataset of datasetname0 that does n't cite other papers .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that not cites paper", "variables": {}}
{"nl": "name the paper with a keyphrasename0 keyphrase that has the most recent production year .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "what paper has a venue of venuename0 and venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper whose venue is nature and whose venue is acl", "variables": {}}
{"nl": "what paper without the title title0 was written by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose title is not neural attention and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" is written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that author writes", "variables": {}}
{"nl": "paper not published in venuename1 and paper published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is not acl and whose venue is acl or nature", "variables": {}}
{"nl": "what paper not written by authorname0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose venue is venue", "variables": {}}
{"nl": "which papers are written by multiple authors including authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that author writes", "variables": {}}
{"nl": "paper published in journalname0 that 's not by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose journal is cell and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is smaller than 10", "variables": {}}
{"nl": "not datasetname1 and not published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is not blogs and whose venue is not nature or acl", "variables": {}}
{"nl": "paper with a key phrase other than keyphrasename1 and a venue that is not venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose keyphrase is not deep learning and whose venue is not nature", "variables": {}}
{"nl": "what paper published before year0 has a journal that 's not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose journal is not cell and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that the least number of author writes", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is 10 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "number of paper published in venuename0", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "number of paper whose venue is nature", "variables": {}}
{"nl": "what paper not written by authorname0 was published earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith not writes and that has the smallest publication year", "variables": {}}
{"nl": "paper not written by authorname0 or authorname1 and not about title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose title is not neural attention and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "which unpublished paper has citations more than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is not venue", "variables": {}}
{"nl": "keyphrasename1 or keyphrasename0 paper published in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what is the citation count of the paper with a title0 title ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose title is neural attention", "variables": {}}
{"nl": "what paper with the latest year of publication has a citation number equaling misc0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is 10 and that has the largest publication year", "variables": {}}
{"nl": "paper published after year0 at venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is nature or acl", "variables": {}}
{"nl": "what is a paper 's number of included keyphrases ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ) ) )", "can": "number of keyphrase of paper", "variables": {}}
{"nl": "what paper with a venue of venuename0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what publication year does the paper have the smallest citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that has the smallest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that noah smith writes and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "name the paper with a dataset of datasetname1 and a venue that is n't venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose dataset is blogs and whose venue is not acl", "variables": {}}
{"nl": "what paper not written by authorname1 has a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper that richard anderson not writes and whose dataset is blogs", "variables": {}}
{"nl": "what paper not written by authorname0 does not have a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is not acl and that has the largest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that cites paper", "variables": {}}
{"nl": "which paper 's dataset is n't datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper published after year0 has the largest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that the most number of author writes", "variables": {}}
{"nl": "what paper not about keyphrasename0 cites the least number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that cites the least number of paper", "variables": {}}
{"nl": "how many data sets does the paper have ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ) ) )", "can": "number of dataset of paper", "variables": {}}
{"nl": "what paper was not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson or noah smith not writes", "variables": {}}
{"nl": "keyphrasename0 paper that has title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose title is title", "variables": {}}
{"nl": "the paper with the biggest year of publication has what as a keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that has the largest publication year", "variables": {}}
{"nl": "what paper on keyphrasename1 is about keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with neither a keyphrasename1 nor a keyphrasename0 keyphrase has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is acl and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "paper using datasetname0 dataset that is about keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper not written by authorname1 and used dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose dataset is dataset", "variables": {}}
{"nl": "what datasetname1 are there ?", "lf": "( call SW.listValue datasetname1 )", "can": "blogs", "variables": {}}
{"nl": "what paper with citations from the most other papers has a keyphrase that 's keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that cites the most number of paper", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has the largest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose title is neural attention and that has the largest citation count", "variables": {}}
{"nl": "what paper published in year0 has the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a keyphrasename0 or keyphrasename1 keyphrase has no keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a data set of datasetname0 is written by the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that the least number of author writes", "variables": {}}
{"nl": "what year was a paper published that does not have a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose dataset is not reviews", "variables": {}}
{"nl": "the citation count of what paper with a keyphrase of keyphrasename0 is more than the authorname0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what datasetname1 paper has a citation count smaller than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what 's the paper with a keyphrase that is n't keyphrasename1 and a citation count above authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "which paper has more than misc0 citations and cites some paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that cites paper", "variables": {}}
{"nl": "what paper with less than misc0 citations does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what is the citation count of the paper not from venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose venue is not acl", "variables": {}}
{"nl": "what author with a citation count that is not misc0 wrote a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is not 10 and that writes paper", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that the most number of paper cites", "variables": {}}
{"nl": "name the paper that contains a journal and has a citation count other than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose journal is journal", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" has a venue that is not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is not acl", "variables": {}}
{"nl": "name the paper with a datasetname0 dataset and no specific venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose venue is not venue", "variables": {}}
{"nl": "topic of paper written by authorname1", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that richard anderson writes", "variables": {}}
{"nl": "which paper without journalname0 as its journal has a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose journal is not cell and whose venue is acl or nature", "variables": {}}
{"nl": "what paper not written by authorname0 has a dataset that is not datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper that noah smith not writes and whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a data set of datasetname1 is written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is blogs and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "which paper not titled title0 did not use the \" datasetname1 \" or \" datasetname0 \" datasets ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose title is not neural attention and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "paper that does not use \" datasetname0 \" dataset and does not have dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose dataset is not dataset", "variables": {}}
{"nl": "what paper written by authorname0 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that not cites paper", "variables": {}}
{"nl": "what is the paper with a certain venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is venue", "variables": {}}
{"nl": "what paper with the year year0 as its publication date has a publication year earlier than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose publication year is 2012 and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper written by authorname1 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that paper not cites", "variables": {}}
{"nl": "what paper written by authorname0 does not have a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is not nature", "variables": {}}
{"nl": "paper from the venuename1 venue that has misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose venue is acl and whose citation count is 10", "variables": {}}
{"nl": "what paper published before year0 was published the earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is smaller than 2012 and that has the smallest publication year", "variables": {}}
{"nl": "what is the citation count of a paper with a key phrase other than \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper with a number under misc0 as its citation count has the greatest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that the most number of author writes", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is 10", "variables": {}}
{"nl": "what is the paper with a year0 publication year and a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose publication year is 2012 and whose citation count is not 10", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 has a citation count lower than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has a citation count that is not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname0 is also written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that noah smith writes and that richard anderson or noah smith writes", "variables": {}}
{"nl": "name the paper written by authorname0 that has the fewest author writes .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that the least number of author writes", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is not 10 and that has the smallest citation count", "variables": {}}
{"nl": "what is the key phrase of a paper that has the key pharse \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "is the venue venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.concat venuename1 venuename0 ) )", "can": "acl or nature", "variables": {}}
{"nl": "a paper that uses the dataset of \" review \" or \" datasetname1 \" but not \" datasetname0 \" .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is not reviews and whose dataset is reviews or blogs", "variables": {}}
{"nl": "name the paper with a year0 publication year and a keyphrase classified as keyphrasename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is deep learning and whose publication year is 2012", "variables": {}}
{"nl": "keyphrasename0 paper that does not use datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "which paper published in journal has misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose citation count is 10", "variables": {}}
{"nl": "what year was a paper not written by authorname1 published in ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that richard anderson not writes", "variables": {}}
{"nl": "what is the paper with a datasetname1 dataset and not a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose dataset is blogs and whose venue is not nature", "variables": {}}
{"nl": "what paper has misc0 citations but was not writmisc0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper that noah smith not writes and whose citation count is 10", "variables": {}}
{"nl": "what paper does not cite other papers and has a keyphrase that is keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that not cites paper", "variables": {}}
{"nl": "papers published after year0 not in journal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose journal is journal", "variables": {}}
{"nl": "paper with the dataset not datasetname0 that has smaller than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose dataset is not reviews and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose title is not neural attention and whose publication year is not 2012", "variables": {}}
{"nl": "what paper has a venue that is neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is not nature and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper has a datasetname0 dataset , but not a datasetname1 or datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is reviews and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "title that is the title of the smallest paper amount", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string title_paper_title ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "title that is title of the least number of paper", "variables": {}}
{"nl": "author with less than misc0 citations equal to citation count of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "paper not about keyphrasename0 published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a journal of journalname0 was published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose journal is cell and whose publication year is 2012", "variables": {}}
{"nl": "what paper published in year0 contains the highest author writes amount ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that the most number of author writes", "variables": {}}
{"nl": "i need a paper that does not have the dataset datasetname0 and has a citation count different than the citation count of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper that does n't have the keyphrase keyphrasename0 also does n't have a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is not nature or acl", "variables": {}}
{"nl": "venuename0", "lf": "( call SW.listValue venuename0 )", "can": "nature", "variables": {}}
{"nl": "what is the most recent dataset of paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that has the largest publication year", "variables": {}}
{"nl": "name the paper that has a venue which is n't venuename0 and also has no specific keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper whose writer is authorname1 does not make any other paper citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that not cites paper", "variables": {}}
{"nl": "what paper with a data set of datasetname1 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper which was published in a year after year0 has a citation count which does n't equal authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the earliest year of publication for a paper with a publication year ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that has the smallest publication year", "variables": {}}
{"nl": "what paper not written by authorname0 is not titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper that noah smith not writes and whose title is not neural attention", "variables": {}}
{"nl": "what paper that is not written by authorname1 has a publication date later than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that richard anderson not writes and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper without an author has a citation count exceeding misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that author not writes", "variables": {}}
{"nl": "what paper which was n't published in the year year0 has a misc0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose citation count is 10 and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with some type of venue does not have an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose venue is venue", "variables": {}}
{"nl": "paper published in year0 with the fewest citation counts", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is 2012 and that has the smallest citation count", "variables": {}}
{"nl": "what is the venue of a paper with a citation count that is not misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose citation count is not 10", "variables": {}}
{"nl": "paper that has the keyphrasename0 keyphrase and whose dataset is datasetname1 or datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what is the paper with a datasetname1 data set and a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose dataset is blogs and whose citation count is not 10", "variables": {}}
{"nl": "what paper has a citation count of misc0 that 's also greater than the authorname0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what keyphrasename0 paper is n't written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is semantic parsing and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper in journal that uses datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose journal is journal", "variables": {}}
{"nl": "who 's the author with a misc0 citation count that also has a citation count less than authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose journal is cell and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" does not have an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that author not writes", "variables": {}}
{"nl": "what paper cited by other papers has a citation count that does n't equal misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that paper cites", "variables": {}}
{"nl": "what paper with the fewest citations of other papers was not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that cites the least number of paper", "variables": {}}
{"nl": "which author has a citation count that does not equal misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) )", "can": "author whose citation count is not 10", "variables": {}}
{"nl": "paper that does not include keyphrasename0 and has a citation count smaller than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is dataset", "variables": {}}
{"nl": "what is the journal of a paper with a venue that is not venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose venue is not acl", "variables": {}}
{"nl": "what paper did authorname1 write with a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that richard anderson writes and whose venue is nature", "variables": {}}
{"nl": "what paper with a venue of venuename0 or venuename1 has a dataset that 's not datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is not blogs and whose venue is nature or acl", "variables": {}}
{"nl": "what titled paper has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose title is title", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose dataset is dataset", "variables": {}}
{"nl": "what paper does not have a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what is the recent year a paper published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that has the largest publication year", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper not citing any other paper was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that paper not cites", "variables": {}}
{"nl": "what paper with a citation count less than the citation count of authorname1 has venuename1 as its venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "papers written by authorname0 that do not contain the keyphrases keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that noah smith writes and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "the author with the most citations has what as its total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string citation_count_author_number ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author that has the largest citation count", "variables": {}}
{"nl": "what paper that was not written by authorname0 has the highest number of citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith not writes and that has the largest citation count", "variables": {}}
{"nl": "what paper without any specific venue has a keyphrase that is not keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose venue is not venue", "variables": {}}
{"nl": "paper that has the datasetname1 dataset and has the oldest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is blogs and that has the smallest publication year", "variables": {}}
{"nl": "what author with more than misc0 citations does not have the same number of citations as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a journal other than journalname0 has a citation count not equal to authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper has a datasetname1 dataset but no specific keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 is written by neither authorname0 nor authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is not reviews and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what venuename1 paper was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose venue is acl and whose publication year is smaller than 2012", "variables": {}}
{"nl": "how many papers have misc0 citations ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ) )", "can": "number of paper whose citation count is 10", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose title is not title", "variables": {}}
{"nl": "i need a paper that does n't have the keyphrase keyphrasename1 and that does n't have the same citation count of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" is written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is not deep learning and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "which paper has a smaller citation count than misc0 and is published in venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is acl or nature", "variables": {}}
{"nl": "what is the total year of publication for a paper which does n't have the title title0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose title is not neural attention", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that author not writes", "variables": {}}
{"nl": "keyphrasename0 paper that does not use \" datasetname0 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is not reviews", "variables": {}}
{"nl": "name the paper published in a year other than year0 that has a dataset of datasetname1 or datasetname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper not written by authorname0 has a citation count which is less than authorname1 's citation amount ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper 's citation count is larger than authorname1 's citation count and also has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what is the paper without a datasetname0 dataset and a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is not reviews and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper has a citation count smaller than misc0 and is writmisc0 by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is smaller than 10 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper that has the most number of cites .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that the most number of paper cites", "variables": {}}
{"nl": "which paper published in year0 has the lowest amount of cites ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that the least number of paper cites", "variables": {}}
{"nl": "which paper with the keyphrase \" keyphrasename0 \" has the largest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose journal is not journal", "variables": {}}
{"nl": "what paper that was n't written by authorname1 has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper that richard anderson not writes and whose keyphrase is deep learning", "variables": {}}
{"nl": "what data set is the data set of the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "dataset that is dataset of the most number of paper", "variables": {}}
{"nl": "paper written by authorname1 that uses datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that richard anderson writes and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has less citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "which paper has misc0 citations and was writmisc0 at either venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is 10 and whose venue is acl or nature", "variables": {}}
{"nl": "what authored paper was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that author writes", "variables": {}}
{"nl": "how many citations does the paper not written by authorname0 have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that noah smith not writes", "variables": {}}
{"nl": "what paper with no citations from other papers does not have a title0 title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that paper not cites", "variables": {}}
{"nl": "what paper written by authorname1 has a key phrase that is not keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that richard anderson writes and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "how many papers are about keyphrasename0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "number of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which paper using a keyphrase of keyphrase has misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what is the citation count of a paper with a data set that is not datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose dataset is not blogs", "variables": {}}
{"nl": "what paper published after year0 does not have a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "paper about keyphrasename1 published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a title of \" title0 \" is written   by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose title is neural attention and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a citation count of misc0 does not have the title \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose citation count is 10 and whose title is not neural attention", "variables": {}}
{"nl": "what paper has a certain venue and has a keyphrasename1 keyphrase , too ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is venue", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" is cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that paper cites", "variables": {}}
{"nl": "a paper with a datasetname1 dataset has what number as its total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper was published during the most recent publication year and has a database of datasetname1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is blogs and that has the largest publication year", "variables": {}}
{"nl": "what is the paper with a citation count exceeding misc0 that is writmisc0 by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is 10 and that writes paper", "variables": {}}
{"nl": "tell me a paper that has the datasetname1 dataset and that cites the largest amount of papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that cites the most number of paper", "variables": {}}
{"nl": "what paper that has a keyphrasename1 keyphrase has a citation count that is other than authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper not having venuename0 or venuename1 as its venue was written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that richard anderson writes and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" is written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that author writes", "variables": {}}
{"nl": "papers not in the venue of venuename1 or venuename0 and contain more than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "paper with venue venuename1 with citation count equal to citation count of authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what datasetname1 paper cites the least number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that cites the least number of paper", "variables": {}}
{"nl": "what paper not written by authorname0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "name the paper with a journalname0 journal and a title0 title .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose journal is cell and whose title is neural attention", "variables": {}}
{"nl": "what paper published after year0 is written by the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that the least number of author writes", "variables": {}}
{"nl": "what paper with authorname0 as the writer is not cited by other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that paper not cites", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" has a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a venue that is n't venuename0 has a datasetname1 or datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is not nature and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what keyphrase does the paper with a non - datasetname0 dataset have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose dataset is not reviews", "variables": {}}
{"nl": "what paper is titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose title is neural attention", "variables": {}}
{"nl": "what paper with a keyphrase that 's not keyphrasename1 has a citation count that 's not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is not 10", "variables": {}}
{"nl": "number of papers that authorname1 did not write", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ) )", "can": "number of paper that richard anderson not writes", "variables": {}}
{"nl": "what paper published after year0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is not venue", "variables": {}}
{"nl": "what paper not written by authorname1 has a venue that is neither venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that richard anderson not writes and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a publication date prior to the year year0 has a keyphrase that is keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not about keyphrasename1 is not titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose keyphrase is not deep learning and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a data set that is neither datasetname1 nor datasetname0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose title is neural attention and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "name the paper with a dataset that is n't datasetname0 and that has a certain keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a specific keyphrase has a year0 publication year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper cited by papers is titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that paper cites", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 has a data set of neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose journal is not cell and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what is the venue of a paper that does not have a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose venue is not acl", "variables": {}}
{"nl": "what paper with a citation count of misc0 is writmisc0 by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that the most number of author writes", "variables": {}}
{"nl": "what paper with a dataset which is n't datasetname1 contains a specific kind of journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose journal is journal", "variables": {}}
{"nl": "what is the number of papers with a year of publication exceeding year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ) )", "can": "number of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper published after year0 has a citation count that is authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 does not have the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "which paper published in venuename0 did authorname1 or authorname0 write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is nature and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper with a keyphrasename0 keyphrase is not author written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that author not writes", "variables": {}}
{"nl": "what paper published in year0 has fewer citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper has a citation count below misc0 and no journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose journal is not journal", "variables": {}}
{"nl": "paper written by authorname0 or authorname1 not about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper 's key phrase is n't keyphrasename1 but is keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper with a data set of datasetname1 is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that the least number of paper cites", "variables": {}}
{"nl": "what paper not written by authorname0 has a citation count not equal to authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper authored by authorname1 was also written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that richard anderson writes and that noah smith or richard anderson writes", "variables": {}}
{"nl": "how many papers were published earliest ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ) )", "can": "number of paper that has the smallest publication year", "variables": {}}
{"nl": "what paper with a venue of venuename0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose dataset is dataset", "variables": {}}
{"nl": "show me a paper that has more than misc0 citations and that does n't have datasetname0 or datasetname1 in its dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper which has a journal that is n't journalname0 was the writing of authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose journal is not cell and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what is the title of the paper that used the \" datasetname1 \" dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string title_paper_title ) ) )", "can": "title of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper without a dataset of datasetname0 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is not reviews and that has the largest citation count", "variables": {}}
{"nl": "paper that does not use datasetname0 dataset and not about keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "how many papers have a keyphrase which is something other than keyphrasename1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ) )", "can": "number of paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper with a datasetname1 dataset also has a specific venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose venue is venue", "variables": {}}
{"nl": "what paper with the biggest citation count has authorname1 as its writer ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that richard anderson writes and that has the largest citation count", "variables": {}}
{"nl": "what paper with a year of publication other than year0 has a journal that 's journalname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose journal is cell and whose publication year is not 2012", "variables": {}}
{"nl": "name the paper which does not have a venue of venuename0 and has a citation count that is not authorname1 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "name the paper with a citation count over misc0 which was not writmisc0 by authorname1 or authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is larger than 10 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what is the data set of a paper with a title other than \" title0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose title is not neural attention", "variables": {}}
{"nl": "paper published before year0 and uses \" datasetname1 \" or \" datasetname0 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose title is title", "variables": {}}
{"nl": "which paper published in venuename1 and not written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is acl and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that the most number of author writes", "variables": {}}
{"nl": "paper that does n't use ' datasetname0 ' dataset and not about keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is not reviews", "variables": {}}
{"nl": "paper with a title other than \" title0 \" and is authored by either authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose title is not neural attention and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper not written by authorname0 cites other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that cites paper", "variables": {}}
{"nl": "who is the author with a citation count not equaling authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper with a keyphrase of keyphrasename0 has the least number of paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a venue of either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is 10 and whose venue is nature or acl", "variables": {}}
{"nl": "what paper with a title0 title has a specific title of some sort ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string title_paper_title ) ) )", "can": "title of paper whose title is neural attention", "variables": {}}
{"nl": "the most recent paper published in journalname0 journal", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose journal is cell and that has the largest publication year", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose dataset is not dataset", "variables": {}}
{"nl": "what paper with a citation count under misc0 has a keyphrase that 's not keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper that does not use datasetname1 dataset and does not have a topic", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what are the datasets of papers not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that richard anderson not writes", "variables": {}}
{"nl": "the oldest published paper written by authorname0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the smallest publication year", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 does not have an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that author not writes", "variables": {}}
{"nl": "what paper with a datasetname1 dataset has a keyphrasename1 key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose keyphrase is deep learning and whose dataset is blogs", "variables": {}}
{"nl": "which paper with a data set that is not datasetname0 is citated by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that the least number of paper cites", "variables": {}}
{"nl": "paper where the journal is journalname0 but does not have a keyphrase of keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose journal is cell and whose keyphrase is not deep learning", "variables": {}}
{"nl": "paper with a dataset not datasetname0 and which has a citation count smaller than authorname0 's citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper without a specific venue has authorname1 as its writer ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose venue is not venue", "variables": {}}
{"nl": "keyphrasename0 paper or keyphrasename1 paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper that uses the datasetname0 dataset has more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "name the paper with a citation count that is n't misc0 and is also larger than the authorname1 citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper does authorname0 not write for that is not about keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that noah smith not writes and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a journal other than journalname0 was published most recently ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose journal is not cell and that has the largest publication year", "variables": {}}
{"nl": "what paper with less than misc0 citations has a key phrase that is neither \" keyphrasename1 \" nor \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is smaller than 10 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a venue other than venuename0 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is not nature and that has the largest citation count", "variables": {}}
{"nl": "in what year was a paper with a keyphrasename0 keyphrase published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what paper uses a dataset but is not about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is dataset", "variables": {}}
{"nl": "what is the title of paper published in venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string title_paper_title ) ) )", "can": "title of paper whose venue is acl", "variables": {}}
{"nl": "what paper with a citation count under misc0 does not cite other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that not cites paper", "variables": {}}
{"nl": "paper published before year0 with the fewest number of citations .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that cites the least number of paper", "variables": {}}
{"nl": "papers without the keyphrases keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what 's the paper with an venuename1 venue that had a year0 publication date ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is acl and whose publication year is 2012", "variables": {}}
{"nl": "what is the citation count of a paper with a keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "i would like to know the paper 's total publication year that has the venue venuename1", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose venue is acl", "variables": {}}
{"nl": "what paper with a citation count of misc0 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a key phrase that is neither \" keyphrasename1 \" nor \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "which paper has the keyphrase keyphrasename0 or keyphrasename1 and the venue is venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is acl and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper written by an author does not have venuename1 as its venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that author writes", "variables": {}}
{"nl": "what is the keyphrase of the paper that has the venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose venue is not nature", "variables": {}}
{"nl": "total citations of paper not published at venuename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose venue is not nature", "variables": {}}
{"nl": "paper not written by authorname0 and is about keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper that used \" datasetname0 \" or \" datasetname1 \" dataset and that is not keyphrasename0 paper .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is reviews or blogs", "variables": {}}
{"nl": "how many papers have fewer than misc0 citations ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ) )", "can": "number of paper whose citation count is not 10", "variables": {}}
{"nl": "what paper written by an author was published post-year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that author writes", "variables": {}}
{"nl": "which paper that authorname0 wrote has a keyphrase of keyphrasename1 or of keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that noah smith writes and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "a paper that discusses keyphrasename0 but in not an venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is not acl", "variables": {}}
{"nl": "paper published in the journal journalname0 with more than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose journal is cell and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with no citations of other papers has a citation count that 's something other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that not cites paper", "variables": {}}
{"nl": "what paper has a different citation count than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper which contains a certain journal type has a publication year that is year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose journal is journal", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 and a citation count higher than authorname0 have ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what is the key phrase of a paper with a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper published in year0 is not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is 2012 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper does not have a title of \" title0 \" and cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that cites paper", "variables": {}}
{"nl": "the paper entitled title0 has what as its journal ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose title is neural attention", "variables": {}}
{"nl": "what is the key phrase of a paper with a data set that is not datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose dataset is not blogs", "variables": {}}
{"nl": "what paper titled title0 has a citation count that 's not authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose journal is journal", "variables": {}}
{"nl": "papers in the venuename0 venue not written by author .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that author not writes", "variables": {}}
{"nl": "what is a paper with a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose citation count is 10", "variables": {}}
{"nl": "what paper has the oldest publication year that is not focused on keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is not deep learning and that has the smallest publication year", "variables": {}}
{"nl": "what paper has a certain dataset included ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is dataset", "variables": {}}
{"nl": "what paper written by authorname0 is not written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that noah smith writes and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "paper with title0 in the title and is not published", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose venue is not venue", "variables": {}}
{"nl": "what paper with a journal other than journalname0 is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that paper not cites", "variables": {}}
{"nl": "what 's the paper with an venuename1 venue and a keyphrase that is n't keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is acl and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "name the paper with the earliest publication year and a venue that is venuename0 .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is nature and that has the smallest publication year", "variables": {}}
{"nl": "what author with a citation count over misc0 has the least number of papers writmisc0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string min ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is larger than 10 and that writes the least number of paper", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose venue is venue", "variables": {}}
{"nl": "what paper written by authorname0 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose journal is not journal", "variables": {}}
{"nl": "what venue does the paper with the biggest year of publication have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that has the largest publication year", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has a citation count that is not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose dataset is reviews and whose citation count is not 10", "variables": {}}
{"nl": "what paper not from venuename1 has a citation count smaller than that of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose journal is cell and whose dataset is not blogs", "variables": {}}
{"nl": "what keyphrasename0 paper is titled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose keyphrase is semantic parsing and whose title is neural attention", "variables": {}}
{"nl": "what paper is cited ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that paper cites", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is acl and whose venue is not acl or nature", "variables": {}}
{"nl": "what is the data set of a paper with a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "name the paper not containing a keyphrasename0 keyphrase and with a citation count bigger than authorname1 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what venuename1 paper has a citation count higher than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose venue is acl and whose citation count is larger than 10", "variables": {}}
{"nl": "what 's the paper with a certain venue and a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose venue is venue", "variables": {}}
{"nl": "paper with misc0 citations not about keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not written by authorname0 is written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that noah smith not writes and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper not published in year0 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that paper not cites", "variables": {}}
{"nl": "what paper with a venue that 's not venuename0 or venuename1 has a non - venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is not acl and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper has a dataset that is not datasetname0 and was published in the most recent publishing year ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is not reviews and that has the largest publication year", "variables": {}}
{"nl": "what is a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) )", "can": "paper", "variables": {}}
{"nl": "what is the dataset of a paper titled title0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose title is neural attention", "variables": {}}
{"nl": "papwe with keyphrasename0 and is written by authorname0 or authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is semantic parsing and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper that does not use datasetname0 dataset and does not cite authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "the citation count of what paper published before year0 has authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what year was a paper published which was published in year0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose publication year is 2012", "variables": {}}
{"nl": "paper from authorname0 published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is larger than 2012", "variables": {}}
{"nl": "which paper was written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson not writes and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is not reviews and that has the smallest citation count", "variables": {}}
{"nl": "what author with more than misc0 citations does n't have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "paper with less that misc0 citations and does not use datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose dataset is not blogs and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper not from journalname0 is not about datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose journal is not cell and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "name the paper published in a year other than year0 that is written by an author .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that author writes", "variables": {}}
{"nl": "name the paper which is n't written by authorname1 and which does n't have a keyphrasename1 keyphrase .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper that richard anderson not writes and whose keyphrase is not deep learning", "variables": {}}
{"nl": "which papers relate to datasetname1 or datasetname0 datasets without title0 in the title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose title is not neural attention and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with no title does not have misc0 as its citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose title is not title", "variables": {}}
{"nl": "what is the citation count of the paper that uses \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose dataset is reviews", "variables": {}}
{"nl": "what datasetname1 paper has a venue other than venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is blogs and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper writmisc0 by authorname1 has a citation count not equaling misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper that richard anderson writes and whose citation count is not 10", "variables": {}}
{"nl": "what paper makes no citations of other papers and has a venue which is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that not cites paper", "variables": {}}
{"nl": "papers on keyphrasename0 written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is semantic parsing and that richard anderson or noah smith writes", "variables": {}}
{"nl": "paper written in the place venuename0 and that was cited by paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that paper cites", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has a citation count above misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose dataset is not blogs and whose citation count is larger than 10", "variables": {}}
{"nl": "is it authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.concat authorname1 authorname0 ) )", "can": "richard anderson or noah smith", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a venue of either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose title is not neural attention and whose venue is nature or acl", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a citation count equal to authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "paper that used the datasetname1 dataset and was written by authorname0 or authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is blogs and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper with a citation count of misc0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what untitled paper was published in a year after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose title is not title", "variables": {}}
{"nl": "what paper published sometime after the year year0 does not have a specific type of journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose journal is not journal", "variables": {}}
{"nl": "what is the paper with a specific type of dataset that has a dataset that is n't datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose dataset is dataset", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what is the title of the publication that was published most recently ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string title_paper_title ) ) )", "can": "title of paper that has the largest publication year", "variables": {}}
{"nl": "paper not authored by authorname1 that has a dataset not called dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose dataset is not dataset", "variables": {}}
{"nl": "what author has a citation count below misc0 and writes papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is smaller than 10 and that writes paper", "variables": {}}
{"nl": "what is the title of the paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose title is title", "variables": {}}
{"nl": "what is the paper with a dataset that was n't datasetname1 and the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "paper with the most citations not written by authorname1", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a title that is not \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose venue is acl and whose title is not neural attention", "variables": {}}
{"nl": "name the paper with a citation count of misc0 and a citation count smaller than the citation count of authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is 10 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what is the dataset of the paper not including datasetname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose dataset is not reviews", "variables": {}}
{"nl": "what is the key phrase of a paper not published in year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose publication year is not 2012", "variables": {}}
{"nl": "paper which has the venue not venuename0 and which possesses the keyphrase keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is not nature and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what is the full citation count of a paper with a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a title of \" title0 \" does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose title is not title", "variables": {}}
{"nl": "what paper with a journalname0 journal has a specific keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a lower citation count that authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a data set of datasetname1 was written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that the most number of author writes", "variables": {}}
{"nl": "what paper with a citation count of misc0 was published erarliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is 10 and that has the smallest publication year", "variables": {}}
{"nl": "what paper has a keyphrasename0 keyphrase and a venue that 's not venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper that does not have a key phrase of \" keyphrasename0 \" also does not have a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is not 10", "variables": {}}
{"nl": "what paper with a citation count other than misc0 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is not 10 and that has the smallest citation count", "variables": {}}
{"nl": "what 's the paper with a key phrase equal to keyphrasename0 and a key phrase unequal to keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper not written by authorname0 has a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that noah smith not writes and whose venue is acl or nature", "variables": {}}
{"nl": "what is the year of publication of a paper with a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose dataset is reviews", "variables": {}}
{"nl": "paper with title0 in its title that cites authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "papers not related to keyphrasename0 included in journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose journal is journal", "variables": {}}
{"nl": "what paper with a journal of journalname0 has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose journal is cell and that has the smallest citation count", "variables": {}}
{"nl": "what paper with the highest number of citations of other papers has a venue other than venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that cites the most number of paper", "variables": {}}
{"nl": "when was the paper published that authorname0 writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {}}
{"nl": "what dataset paper displays keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is dataset", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 was published the latest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is not acl and that has the largest publication year", "variables": {}}
{"nl": "what paper with a title of \" title0 \" is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that the most number of author writes", "variables": {}}
{"nl": "how many citations does a paper not about keyphrasename1 have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "name the paper with a keyphrase that is n't keyphrasename0 and with the greatest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is not semantic parsing and that has the largest citation count", "variables": {}}
{"nl": "what is the paper that does n't have a keyphrasename0 keyphrase or a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is not blogs", "variables": {}}
{"nl": "which paper called title0 has the same number of citations as authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a venue of venuename0 is written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is nature and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper with a journal other than journalname0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper published before year0 has a venue that is neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose venue is not nature or acl", "variables": {}}
{"nl": "keyphrasename1 paper that does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose keyphrase is deep learning and whose dataset is not reviews", "variables": {}}
{"nl": "what paper titled title0 is written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that author writes", "variables": {}}
{"nl": "what datasets are used outside of the venuename1 venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is not acl", "variables": {}}
{"nl": "paper with citations written by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that paper cites", "variables": {}}
{"nl": "name the paper with a journal of journalname0 and a dataset of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose journal is cell and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a journal of journalname0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that paper cites", "variables": {}}
{"nl": "which paper with a venue other than venuename1 has a citation count other than that of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not acl and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what keyphrase is the keyphrase of the smallest amount of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "keyphrase that is keyphrase of the least number of paper", "variables": {}}
{"nl": "what paper has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper that has the smallest citation count", "variables": {}}
{"nl": "what 's the paper with a certain title and a journal that 's not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose title is title", "variables": {}}
{"nl": "what paper did authorname0 write with a keyphrase that 's not keyphrasename1 or keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that noah smith writes and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper had a title that is n't title0 and a venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose venue is not nature and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a data set of datasetname1 has less citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is blogs and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper with less than misc0 citations cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that the least number of paper cites", "variables": {}}
{"nl": "name the author with a citation count greater than that of authorname1 and that is not a citation count equaling misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "which paper not written by authorname1 has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that richard anderson not writes and that has the largest citation count", "variables": {}}
{"nl": "what paper published before year0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper written by authorname1 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "a paper with a year of publication greater than year0 has what as its total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper with a title that is n't title0 has some kind of keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with a venuename0 venue has a title that 's not title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose venue is nature and whose title is not neural attention", "variables": {}}
{"nl": "what paper written by authorname1 has the most recent publication year ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that richard anderson writes and that has the largest publication year", "variables": {}}
{"nl": "what type of paper venue is penned in by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {}}
{"nl": "paper from anyone not authorname1 or authorname0 that uses the word \" keyphrasename1 \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose keyphrase is deep learning and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what is a paper that is not called title0 and has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose title is not neural attention and whose citation count is larger than 10", "variables": {}}
{"nl": "when is the paper not about keyphrasename0 published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "paper with venue venuename1 whose dataset is n't datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose venue is acl and whose dataset is not reviews", "variables": {}}
{"nl": "paper with journal not about journalname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose journal is not cell", "variables": {}}
{"nl": "how many key phrases are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "number of keyphrase", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a data set of either datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is 10 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what is the venue of the paper with a title other than \" title0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose title is not neural attention", "variables": {}}
{"nl": "what paper with a venue of venuename0 does not have a venue of venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is nature and whose venue is not nature or acl", "variables": {}}
{"nl": "authorname0 wrote a paper with what dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that noah smith writes", "variables": {}}
{"nl": "what paper 's venue is not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose venue is not acl", "variables": {}}
{"nl": "what paper does authorname1 not write that is also not written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that author not writes", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose title is title", "variables": {}}
{"nl": "what is the paper not written by authorname0 or authorname1 that has a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is nature and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "which paper has a topic other than keyphrasename0 and was published most recently ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is not semantic parsing and that has the largest publication year", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" does not have a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a datasetname1 dataset has a dataset that is datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is blogs and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with authorname0 as the writer contains a key phrase of keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with an venuename1 venue cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that cites the least number of paper", "variables": {}}
{"nl": "what is the venue of a paper with a key phrase that is not keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "name the paper with a keyphrasename0 key phrase and a venue other than venuename0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is not nature", "variables": {}}
{"nl": "name the paper that was published in a year other than year0 and written by authorname0 or authorname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is not 2012 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper 's journal is not journalname0 and its dataset is not datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose journal is not cell and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what is the dataset of papers with citations other than misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose citation count is not 10", "variables": {}}
{"nl": "paper not published in venuename1 , that does not cite any paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that not cites paper", "variables": {}}
{"nl": "what paper does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is not dataset", "variables": {}}
{"nl": "what paper with a citation amount greater than misc0 has a data set that is datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what are the citation counts of papers in venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose venue is nature", "variables": {}}
{"nl": "paper which has the dataset datasetname1 and has the dataset not datasetname0 or datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is blogs and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "who is the author with a lesser citation count than authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "how many papers have journalname0 as the journal ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ) )", "can": "number of paper whose journal is cell", "variables": {}}
{"nl": "what paper not about keyphrasename1 was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper has a journal that is journalname0 and does n't cite other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that not cites paper", "variables": {}}
{"nl": "what paper lacking a keyphrase has an under misc0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "show me the paper 's title that has less than misc0 citations", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "paper not in journalname0 journal that has more citation from authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "a paper not written by authorname0 that came out after year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper that noah smith not writes and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper citing the fewest other papers was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and that cites the least number of paper", "variables": {}}
{"nl": "what paper published in year0 was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose publication year is 2012 and whose publication year is larger than 2012", "variables": {}}
{"nl": "keyphrasename0 paper with fewest authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that the least number of author writes", "variables": {}}
{"nl": "paper not written by authorname0 that uses dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose dataset is dataset", "variables": {}}
{"nl": "author with the fewest papers writmisc0 and has fewer than misc0 citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string min ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is smaller than 10 and that writes the least number of paper", "variables": {}}
{"nl": "what paper with some kind of title was written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose title is title", "variables": {}}
{"nl": "paper published after year0 at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper written by authorname0 does not have an venuename1 or venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that noah smith writes and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper published before year0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose title is not title", "variables": {}}
{"nl": "what is the venue of the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "venue that is venue of the least number of paper", "variables": {}}
{"nl": "what paper with a misc0 citation count does not have a venuename0 or venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is 10 and whose venue is not nature or acl", "variables": {}}
{"nl": "what author has a citation count of misc0 that does not write papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string write_author_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is 10 and that not writes paper", "variables": {}}
{"nl": "what is the title of a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ( call SW.reverse ( string title_paper_title ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "title that is title of paper", "variables": {}}
{"nl": "a paper that used the \" datasetname1 \" dataset that is n't on keyphrasename0 nor keyphrasename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "authorname1 wrote the paper \" title0 \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper that richard anderson writes and whose title is neural attention", "variables": {}}
{"nl": "what paper titled title0 has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose keyphrase is deep learning and whose title is neural attention", "variables": {}}
{"nl": "what paper with a lower citation count than authorname0 has a non - keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "which paper used the \" datasetname0 \" dataset and was not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is reviews and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper not published in year0 has a citation count less than authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what dataset does a paper have as its dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "dataset that is dataset of paper", "variables": {}}
{"nl": "what paper that 's titled title0 has a citation count that is n't the authorname1 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "paper that is least cited as well as has misc0 or more sources cited .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a venue of venuename0 has a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is 10", "variables": {}}
{"nl": "what paper written by authorname1 is citied by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that the least number of paper cites", "variables": {}}
{"nl": "journal with fewest papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string journal_paper_journal ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "journal that is journal of the least number of paper", "variables": {}}
{"nl": "what author has more citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper not written by authorname1 has a citation count that 's a citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is not acl and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "keyphrasename1 paper published before year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose keyphrase is deep learning and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a citation count over misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose title is neural attention and whose citation count is larger than 10", "variables": {}}
{"nl": "author with citations that are not exactly and less than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) )", "can": "author whose citation count is not 10 and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper written by authorname0 or authorname1 is entitled title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose title is neural attention and that noah smith or richard anderson writes", "variables": {}}
{"nl": "journal of paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ( call SW.reverse ( string journal_paper_journal ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "journal that is journal of paper", "variables": {}}
{"nl": "name a paper written by authorname0 about keyphrasename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper that noah smith writes and whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper not by authorname0 has a citation count that is not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper that noah smith not writes and whose citation count is not 10", "variables": {}}
{"nl": "paper using datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose dataset is reviews", "variables": {}}
{"nl": "what is the topic of paper with misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose citation count is 10", "variables": {}}
{"nl": "what paper without a venuename0 venue has a citation count that is n't the authorname0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper has a venue of venuename0 and not a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose venue is nature and whose venue is not acl", "variables": {}}
{"nl": "name the paper with the largest citation count published earlier than year0 .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is smaller than 2012 and that has the largest citation count", "variables": {}}
{"nl": "what is the publication year of a paper with misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose citation count is 10", "variables": {}}
{"nl": "which paper has a citation count but it 's not authorname0 's citation count and has a journal that 's not journalname0 , also ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what author has a citation count of less than misc0 and not the same as that of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "which paper written by an author dies not use a journal journalname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that author writes", "variables": {}}
{"nl": "journals not in the venuename0 venue", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose venue is not nature", "variables": {}}
{"nl": "a paper that is n't on keyphrasename1 and was published in any year other than year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose publication year is not 2012", "variables": {}}
{"nl": "what paper written by authorname1 was published the earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper that richard anderson writes and that has the smallest publication year", "variables": {}}
{"nl": "which paper has the least number of authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that the least number of author writes", "variables": {}}
{"nl": "what paper with a citation count under misc0 has the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname0 has a specific venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose venue is venue", "variables": {}}
{"nl": "paper not published in venuename0 or venuename1 with less than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is not nature or acl", "variables": {}}
{"nl": "paper published in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {}}
{"nl": "what paper which has a venue of venuename0 does not have any specific keyphrase associated with it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what is the venue of a paper with a journal of journalname0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose journal is cell", "variables": {}}
{"nl": "what year was a paper with a venue other than venuename1 published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is not acl", "variables": {}}
{"nl": "what paper with a keyphrasename0 keyphrase was written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that richard anderson writes and whose keyphrase is semantic parsing", "variables": {}}
{"nl": "which paper with the lowest citation count has a keyphrasename1 keys phrase", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is deep learning and that has the smallest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has less citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper has a venue that is neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is not nature or acl", "variables": {}}
{"nl": "paper not published in venuename0 and not using \" datasetname1 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose venue is not nature and whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a venue of venuename0 also has a venue of either venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is nature and whose venue is acl or nature", "variables": {}}
{"nl": "paper that does n't use datasetname1 and paper that use datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is not blogs and whose dataset is reviews or blogs", "variables": {}}
{"nl": "how many publications years included papers not related to keyphrasename1 .", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper with a venue of venuename0 is written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that author writes", "variables": {}}
{"nl": "what is the total publication year of the paper that has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that has the smallest citation count", "variables": {}}
{"nl": "what paper not written by authorname1 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and whose venue is venue", "variables": {}}
{"nl": "what paper that does not have an venuename1 venue was published after the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose venue is not acl and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a venue that is either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is nature or acl", "variables": {}}
{"nl": "name the paper published in year0 with a datasetname0 or datasetname1 dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is 2012 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "how many citations does a paper with more than misc0 citations have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a venue of venuename1 is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that the most number of author writes", "variables": {}}
{"nl": "paper without the venue venuename0 or venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is not nature and whose venue is not acl or nature", "variables": {}}
{"nl": "i need a paper with the journalname0 journal and which has datasetname0 in the dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper whose journal is cell and whose dataset is reviews", "variables": {}}
{"nl": "paper in journalname0 journal that has less citations from authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "how many citations does the paper that was published before year0 have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 does not have an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that author not writes", "variables": {}}
{"nl": "what paper has no dataset that is datasetname1 and no venue that is either venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is not blogs and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper that does not have a title of \" title0 \" has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose title is not neural attention and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper has an venuename1 venue and the earliest year of publication ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is acl and that has the smallest publication year", "variables": {}}
{"nl": "which titled paper has an earlier - than-year0 publication year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose title is title", "variables": {}}
{"nl": "what is the publication year of the paper ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper", "variables": {}}
{"nl": "what paper in venuename1 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is acl and that has the smallest citation count", "variables": {}}
{"nl": "what paper published after year0 was published earliest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is larger than 2012 and that has the smallest publication year", "variables": {}}
{"nl": "a paper with a year0 publication year has what as its total citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose publication year is 2012", "variables": {}}
{"nl": "what paper with no author writes has a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that author not writes", "variables": {}}
{"nl": "which paper that was not in the journal journalname0 used the \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose dataset is reviews and whose journal is not cell", "variables": {}}
{"nl": "what paper from journalname0 is from venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose journal is cell and whose venue is nature or acl", "variables": {}}
{"nl": "what authorname0 - written paper includes a journal of some sort ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose journal is journal", "variables": {}}
{"nl": "what author with a citation count that is not misc0 has less citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is not 10 and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "let 's see a paper that has the keyphrasename0 kkeyphrase and does n't have a dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is not dataset", "variables": {}}
{"nl": "what paper with a citation count under misc0 was published the earliest year ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is smaller than 10 and that has the smallest publication year", "variables": {}}
{"nl": "what paper with a journla of journalname0 is written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that author writes", "variables": {}}
{"nl": "which paper includes some kind of venue and a citation count equaling misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose venue is venue", "variables": {}}
{"nl": "what paper has a citation count other than misc0 and a dataset other than datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose citation count is not 10 and whose dataset is not blogs", "variables": {}}
{"nl": "the oldest paper published that does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is not reviews and that has the smallest publication year", "variables": {}}
{"nl": "what paper has a citation count less than misc0 and is writmisc0 by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is smaller than 10 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename0 \" also does not have a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose keyphrase is not semantic parsing and whose journal is not cell", "variables": {}}
{"nl": "what keyphrasename0 is there ?", "lf": "( call SW.listValue keyphrasename0 )", "can": "semantic parsing", "variables": {}}
{"nl": "name the paper which has a citation count lower than misc0 and that is not author writmisc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that author not writes", "variables": {}}
{"nl": "what paper not written by authorname0 has a venue that is neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that noah smith not writes and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper published in a year prior to year0 has an venuename1 or venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a datasetname0 database has a citation count which is greater than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose dataset is reviews and whose citation count is larger than 10", "variables": {}}
{"nl": "paper using datasetname0 dataset that does not cite authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" has less citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what is the title of a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ) )", "can": "title of paper", "variables": {}}
{"nl": "what keyphrase is given to a paper with an under-misc0 citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose citation count is not 10", "variables": {}}
{"nl": "paper from journalname0 that authorname1 did n't write", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper that richard anderson not writes and whose journal is cell", "variables": {}}
{"nl": "what 's the venue of a paper that has a keyphrase of keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "how many authors have a citation count in excess of misc0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ) )", "can": "number of author whose citation count is larger than 10", "variables": {}}
{"nl": "quantity of keyphrasename1 papers", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "can": "number of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "total publication year of paper with more than misc0 citations .", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper published in a year other than year0 has the largest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that the most number of author writes", "variables": {}}
{"nl": "what paper with less than misc0 citations is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that paper not cites", "variables": {}}
{"nl": "what keyphrasename0 or keyphrasename1 papers have been published in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is nature and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "which paper did n't come from an author and has the title title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that author not writes", "variables": {}}
{"nl": "written by authorname1 not about keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that richard anderson writes and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 has the fewest citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose journal is not cell and that has the smallest citation count", "variables": {}}
{"nl": "what 's the title of a paper with a keyphrase that is keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ) )", "can": "title of paper whose keyphrase is semantic parsing", "variables": {}}
{"nl": "what paper with a journal of journalname0 has a citation count higher than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is cell and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "name the paper with a specific type of venue and it 's a venue that is venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose venue is venue", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose title is not neural attention and whose citation count is smaller than 10", "variables": {}}
{"nl": "how many authors ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "number of author", "variables": {}}
{"nl": "paper written by authorname1 that is not about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper that richard anderson writes and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper citing the greatest number of papers is not titled title0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and that cites the most number of paper", "variables": {}}
{"nl": "what paper with more than misc0 citations has a data set of dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose dataset is dataset", "variables": {}}
{"nl": "who is the author that does n't write papers and has a citation count less than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string write_author_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is smaller than 10 and that not writes paper", "variables": {}}
{"nl": "what is the journal of a paper with a citation count below misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper not in the journalname0 journal is not titled ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose title is not title", "variables": {}}
{"nl": "what is the title of a paper with a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string title_paper_title ) ) )", "can": "title of paper whose dataset is reviews", "variables": {}}
{"nl": "what paper published other than the year year0 has no identifiable keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper in venuename1 is written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is acl and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper published before year0 has a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "which paper with more than misc0 citations is published in venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is larger than 10 and whose venue is acl or nature", "variables": {}}
{"nl": "what keyphrasename0 paper uses the dataset \" datasetname0 \" or \" datasetname1 \" ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a datasetname1 or datasetname0 dataset does not have keyphrasename0 as a keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper which does not have venuename1 as its venue also does not have keyphrasename0 or keyphrasename1 as its keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is not acl and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what is a paper that is n't located at venuename0 and that has the dataset datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is not nature and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper that was published before the year year0 did n't have authorname0 or authorname1 as its writer ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is smaller than 2012 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper is not cited by other papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that paper not cites", "variables": {}}
{"nl": "what paper has a citation count below misc0 with a key phrase of \" keyphrase ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "paper not about keyphrasename0 and does not use \" datasetname0 \" or \" datasetname1 \" dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper not written by authorname0 or authorname1 has a keyphrase that 's not keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a title of \" title0 \" does not have a key phrase of either \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose title is neural attention and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper has a venue other than venuename0 and the smallest amount of author writes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that the least number of author writes", "variables": {}}
{"nl": "which paper with fewest authors uses \" datasetname1 \" dataset ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that the least number of author writes", "variables": {}}
{"nl": "how many venues of paper are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ) ) )", "can": "number of venue of paper", "variables": {}}
{"nl": "what author with a number besides misc0 as his citation count has a citation count greater than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) )", "can": "author whose citation count is not 10 and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a keyphrasename0 or keyphrasename1 keyphrase has a year0 publication year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "paper that does not have title0 in its title and does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose title is not neural attention and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "most recently published paper not titled title0", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose title is not neural attention and that has the largest publication year", "variables": {}}
{"nl": "what paper with a citation count other than misc0 is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that the least number of paper cites", "variables": {}}
{"nl": "what paper written by authorname1 has a title other than \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper that richard anderson writes and whose title is not neural attention", "variables": {}}
{"nl": "what paper about keyphrasename1 was most recent ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is deep learning and that has the largest publication year", "variables": {}}
{"nl": "which paper 's venue is venuename1 or venuename0 and its keyphrase is something other than keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a data set of datasetname0 cites papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and that cites paper", "variables": {}}
{"nl": "which paper is n't published by venuename0 and has the greatest number of published authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that the most number of author writes", "variables": {}}
{"nl": "who is the author with a citation count that is above misc0 and a citation count that is equal to misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) )", "can": "author whose citation count is 10 and whose citation count is larger than 10", "variables": {}}
{"nl": "what is the key phrase of a paper with a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what is the paper with keyphrase which is not keyphrasename0 and a citation count that is not authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "who is the author with the highest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author that has the largest citation count", "variables": {}}
{"nl": "what paper with a keyphrase that is not \" keyphrasename0 \" has a venue that is venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is venue", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose title is not title", "variables": {}}
{"nl": "what venue is the paper authorname1 has not written ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that richard anderson not writes", "variables": {}}
{"nl": "what venue is there ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) )", "can": "venue", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 does not have a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose citation count is not 10 and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a data set other than datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose title is not neural attention and whose dataset is not blogs", "variables": {}}
{"nl": "what is the venue of a paper with a journal that is not journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose journal is not cell", "variables": {}}
{"nl": "who is authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.concat authorname0 authorname1 ) )", "can": "noah smith or richard anderson", "variables": {}}
{"nl": "what is the amount of papers that were published in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose publication year is 2012", "variables": {}}
{"nl": "name the paper with no specification of venue and a less - than-misc0 citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is not venue", "variables": {}}
{"nl": "papers from venuename1 that are written by the author .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that author writes", "variables": {}}
{"nl": "what paper with a title of \" title0 \" does not have a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose title is neural attention and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "paper with a key phrase other than keyphrasename0 that does not cite another paper .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that not cites paper", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 also does not have a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is not blogs and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what is the paper with an venuename1 venue and a citation count that 's greater than authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper was published in venuename0 and written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is nature and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what paper not published in year0 has a citation count less than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "which paper by authorname0 has datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that noah smith writes and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper with a venue that is not venuename0 has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is not nature and that has the smallest citation count", "variables": {}}
{"nl": "what paper with a writer that is authorname0 or authorname1 has a venue that is not venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose venue is not nature and that noah smith or richard anderson writes", "variables": {}}
{"nl": "total citation count of keyphrasename1 papers", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "what is the keyphrase of the paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "keyphrase that is keyphrase of paper", "variables": {}}
{"nl": "what paper with a data set of datasetname1 does not have a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose dataset is blogs and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "which paper was written at venuename0 or venuename1 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is 2012 and whose venue is nature or acl", "variables": {}}
{"nl": "what paper written by authorname0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper does n't include a journal and has a dataset that is n't datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose journal is not journal", "variables": {}}
{"nl": "what paper published before year0 has a venue of either venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose venue is nature or acl", "variables": {}}
{"nl": "what paper has a citation count under misc0 that is writmisc0 by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that author writes", "variables": {}}
{"nl": "how many papers have citation counts below misc0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ) )", "can": "number of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" has a venue that is not venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose keyphrase is deep learning and whose venue is not nature", "variables": {}}
{"nl": "what is the paper with a citation count that does n't equal misc0 and has a venue that 's not an venuename1 or venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose citation count is not 10 and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper with a venue other than venuename1 is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that the most number of author writes", "variables": {}}
{"nl": "what paper that has a keyphrasename0 keyphrase has a keyphrasename1 keyphrase as well ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper not writmisc0 by authorname0 has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper that noah smith not writes and whose citation count is smaller than 10", "variables": {}}
{"nl": "what author has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with less than misc0 citations has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is smaller than 10 and that has the smallest citation count", "variables": {}}
{"nl": "what is the key phrase of a paper not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that richard anderson not writes", "variables": {}}
{"nl": "how many papers have a title ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ) ) )", "can": "number of title of paper", "variables": {}}
{"nl": "what paper with a venue of venuename0 is written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that the most number of author writes", "variables": {}}
{"nl": "what is the title of a paper with more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper has the most numerous paper citations and a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that the most number of paper cites", "variables": {}}
{"nl": "what paper has a venue of venuename1 and no data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose dataset is not dataset", "variables": {}}
{"nl": "which paper which does n't have the title title0 does not have a venue of some type ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose venue is not venue", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" has a title that is not \" title0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose keyphrase is semantic parsing and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a citation count other than misc0 has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper did authorname1 not write that does not have a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper that richard anderson not writes and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "paper published in year0 that has a title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose title is title", "variables": {}}
{"nl": "what paper with a citation count above misc0 does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what is the paper with a keyphrasename1 keyphrase that does n't have a keyphrasename0 plus keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper penned by authorname1 has a venue of either venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that richard anderson not writes and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose dataset is reviews and whose dataset is not blogs", "variables": {}}
{"nl": "paper published in year0 that does not use datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose publication year is 2012 and whose dataset is not blogs", "variables": {}}
{"nl": "what is the title of paper that does not use ' datasetname1 ' dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string title_paper_title ) ) )", "can": "title of paper whose dataset is not blogs", "variables": {}}
{"nl": "what paper written by authorname1 has a venue of venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper that richard anderson writes and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a journal other than journalname0 has a data set of dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose dataset is dataset", "variables": {}}
{"nl": "what is a paper that does not have a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose dataset is not reviews", "variables": {}}
{"nl": "which paper has a key phrase that differs from keyphrasename1 and no apparent journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose journal is not journal", "variables": {}}
{"nl": "how many citations does a paper with a key phrase of \" keyphrasename1 \" have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "place where paper was written which has the dataset datasetname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose dataset is reviews", "variables": {}}
{"nl": "what paper is the product of authorname1 's or authorname0 's writing ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper not written by authorname0 has a citation count that is not the same as that of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper with a data set of datasetname1 has a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with ac itation count below misc0 does not have the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper has a venue of venuename1 and is not written by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that author not writes", "variables": {}}
{"nl": "what paper with no writing author was not published in the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that author not writes", "variables": {}}
{"nl": "paper written by authorname1 or authorname0 that does not use datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is not reviews and that richard anderson or noah smith writes", "variables": {}}
{"nl": "paper with title0 in its title and has the most citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that cites the most number of paper", "variables": {}}
{"nl": "what paper with misc0 citations has a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose dataset is dataset", "variables": {}}
{"nl": "what paper with the most citations of other papers has an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a data set of datasetname1 was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose dataset is blogs and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a citation count of misc0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose title is not title", "variables": {}}
{"nl": "what paper with more than misc0 citations has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname1 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that cites the least number of paper", "variables": {}}
{"nl": "not journalname0 journal and less citation from authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper was published before the year year0 and written by its author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that author writes", "variables": {}}
{"nl": "what paper contains a dataset that is not datasetname1 and a citation count that 's higher than the citation count of authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "in what year was the paper with a citation count under misc0 published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "what is the paper with no specific dataset that has a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose dataset is not dataset", "variables": {}}
{"nl": "what paper not published in journalname0 has the largest amount of authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that the most number of author writes", "variables": {}}
{"nl": "what is the title of a paper with the lowest citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string title_paper_title ) ) )", "can": "title of paper that has the smallest citation count", "variables": {}}
{"nl": "what paper not published in year0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is not dataset", "variables": {}}
{"nl": "paper published in a year other than year0 which has the keyphrase keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is not 2012 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a venue other than venuename0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose venue is venue", "variables": {}}
{"nl": "what datasetname0 or datasetname1 are there ?", "lf": "( call SW.listValue ( call SW.concat datasetname0 datasetname1 ) )", "can": "reviews or blogs", "variables": {}}
{"nl": "what is a paper that has the datasetname0 dataset and has less than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose dataset is reviews and whose citation count is smaller than 10", "variables": {}}
{"nl": "how many times is this author cited ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ) )", "can": "citation count of author", "variables": {}}
{"nl": "name the paper with a year0 publication date and a venue that 's not venuename0 or venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose publication year is 2012 and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper that has a citation count of misc0 has a keyphrase that is something besides keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose citation count is 10 and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what is the journal of a paper with a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose citation count is not 10", "variables": {}}
{"nl": "what paper published in year0 has a citation count not equal to authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "which paper with no specific title has venuename0 as a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose title is not title", "variables": {}}
{"nl": "what paper with a specific title has a title of title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose title is title", "variables": {}}
{"nl": "what paper has a keyphrase that 's not keyphrasename1 and a venue that 's not venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper published after year0 is written by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is larger than 2012 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper written by noah smtih has the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "a paper that does not involve keyphrasename1 or keyphrasename0 and was not published in year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is not 2012 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what is the journal of a a paper with a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper with a citation count above misc0 also has a non - datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose dataset is not reviews and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename1 \" and a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is deep learning and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a citation count above misc0 has a citation count that is authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that not cites paper", "variables": {}}
{"nl": "what is a paper without journalname0 as a journal and that has the smallest amount of writes by an author ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that the least number of author writes", "variables": {}}
{"nl": "in what year was the most recent paper published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that has the largest publication year", "variables": {}}
{"nl": "keyphrasename0 paper not published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper does authorname0 write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {}}
{"nl": "which author has more citations than authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "paper not written by authorname0 that uses datasetname1 or datasetname0 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that noah smith not writes and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper witha data set that is not datasetname1 has the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "how many authors have a citation count that is under misc0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ) )", "can": "number of author whose citation count is not 10", "variables": {}}
{"nl": "name the paper cited by the greatest number of other papers with a dataset that 's not datasetname0 .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that the most number of paper cites", "variables": {}}
{"nl": "paper published in year0 that the smallest amount of author writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that the least number of author writes", "variables": {}}
{"nl": "what paper published before year0 has a citation count not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "name a paper that is published in venuename0 or venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is nature or acl", "variables": {}}
{"nl": "i need something from venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.concat venuename0 venuename1 ) )", "can": "nature or acl", "variables": {}}
{"nl": "which paper titled title0 that is not a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose journal is not journal", "variables": {}}
{"nl": "paper that was not published in year0 and did not use datasetname1 or datasetname0 as a dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper has a venue other than venuename1 and is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that paper not cites", "variables": {}}
{"nl": "what paper has a publication date that was not year0 nor not the venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose venue is not acl and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a citation count that 's authorname1 's citation count also has a keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a data set of datasetname1 is cited by papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that paper cites", "variables": {}}
{"nl": "name the paper with a citation count under misc0 with a venuename0 venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a citation count other than misc0 is writmisc0 by the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that the least number of author writes", "variables": {}}
{"nl": "what papers has authorname0 written that are not in venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that noah smith writes and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" has the biggest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose title is not neural attention and that has the largest citation count", "variables": {}}
{"nl": "what is the journal of a paper with a jouranl of journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose journal is cell", "variables": {}}
{"nl": "what paper has a publication year of year0 and not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that richard anderson not writes and whose publication year is 2012", "variables": {}}
{"nl": "paper not written by authorname1 or authorname0 and does n't use datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is not blogs and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper published after year0 has some type of keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "a paper with a citation count of misc0 and is a journal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose journal is journal", "variables": {}}
{"nl": "citation from authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.concat authorname1 authorname0 ) ( string citation_count_author_number ) ) )", "can": "citation count of richard anderson or noah smith", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" also has a key phrase of \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with misc0 citations is writmisc0 by either authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is not 10 and that richard anderson or noah smith writes", "variables": {}}
{"nl": "keyphrasename1 paper written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is deep learning and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper not in journalname0 journal and not published in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose journal is not cell and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a non - venuename1 venue was n't written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is not acl and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "papers about keyphrasename1 not using dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose dataset is not dataset", "variables": {}}
{"nl": "what is the publication year of a paper with a venue that is not venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is not nature", "variables": {}}
{"nl": "what paper with a journal of some sort was not written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose journal is journal", "variables": {}}
{"nl": "what paper has a datasetname1 dataset and the most numerous paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that the most number of paper cites", "variables": {}}
{"nl": "what paper has a citation count of misc0 or less ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose citation count is 10 and whose citation count is smaller than 10", "variables": {}}
{"nl": "paper not using dataset and published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose dataset is not dataset", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 does not cite a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that paper not cites", "variables": {}}
{"nl": "the paper was written by the most number of authors ans is not about keyphrasename1", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that the most number of author writes", "variables": {}}
{"nl": "name the paper with a keyphrase that is n't keyphrasename0 and a publication year prior to year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose publication year is smaller than 2012", "variables": {}}
{"nl": "which paper that was published in the year year0 does not have a keyphrase that is keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose publication year is 2012 and whose keyphrase is not deep learning", "variables": {}}
{"nl": "name the paper without keyphrasename0 as its keyphrase and the year year0 as its date of publication .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) )", "can": "paper whose publication year is 2012 and whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is not 10 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper has a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "paper that does not have the dataset datasetname1 and that has a publication year after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose dataset is not blogs and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a citation count above misc0 has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a specific dataset has a year0 year of publication ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose dataset is dataset", "variables": {}}
{"nl": "name the paper with a citation count of misc0 that 's not writmisc0 by authorname1 or authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose citation count is 10 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper without datasetname1 as its dataset has venuename0 or venuename1 as its venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is not blogs and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a citation count above misc0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper with some kind of journal has a venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose journal is journal", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is not semantic parsing and that has the smallest citation count", "variables": {}}
{"nl": "paper published in venuename1 outside of the year year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose venue is acl and whose publication year is not 2012", "variables": {}}
{"nl": "a paper without journal as its journalname0 was given what title ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string title_paper_title ) ) )", "can": "title of paper whose journal is not cell", "variables": {}}
{"nl": "i need a dataset of paper that has the least amount of citations", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper that has the smallest citation count", "variables": {}}
{"nl": "what is the journal of a paper published after year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "what is the paper which contains a datasetname1 dataset but not any specific kind of journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose journal is not journal", "variables": {}}
{"nl": "what paper has a publication year after year0 with a datasetname0 or datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper has less than misc0 citations and no venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose venue is venue", "variables": {}}
{"nl": "what paper with a citation count other than misc0 has a data set of datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose citation count is not 10 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "which paper with misc0 citations cites the least number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that cites the least number of paper", "variables": {}}
{"nl": "paper publshed in year0 at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {}}
{"nl": "what paper has a venue of venuename0 and more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose title is neural attention and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a citation count over misc0 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose journal is not journal", "variables": {}}
{"nl": "who is the author that has a misc0 count citation and does not have the same citation count as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( misc0 ) ) ( string citation_count_author_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is 10 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname0 has a journalname0 journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper that noah smith writes and whose journal is cell", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename0 \" also does not have a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper about keyphrasename1 or keyphrasename0 not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that noah smith not writes and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what is the journal of the paper with the smallest citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string journal_paper_journal ) ) )", "can": "journal of paper that has the smallest citation count", "variables": {}}
{"nl": "name the paper with an under-misc0 citation count that is the biggest citation count listed .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is smaller than 10 and that has the largest citation count", "variables": {}}
{"nl": "paper not about keyphrasename0 and fewest authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that the least number of author writes", "variables": {}}
{"nl": "what paper with the highest amount of citations of other papers was written by authorname1 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that the most number of paper cites", "variables": {}}
{"nl": "the keyphrasename1 or keyphrasename0 key phrase applies to what paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what is the paper with a venue of venuename1 and a dataset that is datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose venue is acl and whose dataset is blogs", "variables": {}}
{"nl": "which paper published in year0 has a dataset of datasetname1 or of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is 2012 and whose dataset is blogs or reviews", "variables": {}}
{"nl": "which author has the largest citation count with a citation count larger than misc0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string max ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is larger than 10 and that has the largest citation count", "variables": {}}
{"nl": "what datasetname0 exist ?", "lf": "( call SW.listValue datasetname0 )", "can": "reviews", "variables": {}}
{"nl": "paper with keyphrases not within the venuename0 venue", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose keyphrase is keyphrase", "variables": {}}
{"nl": "paper with more citations than authorname0 that is not a journalname0 journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "show me a journalname0 journal that has the smallest number of author writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and that the least number of author writes", "variables": {}}
{"nl": "paper that has misc0 citations and title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose title is title", "variables": {}}
{"nl": "what paper published after year0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is venue", "variables": {}}
{"nl": "what is the citation count of the paper from a year other than year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose publication year is not 2012", "variables": {}}
{"nl": "what paper with citations from other papers has a venue that 's not venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that cites paper", "variables": {}}
{"nl": "what paper without datasetname0 as its database has a citation count that is authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper is not about datasetname0 and was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose dataset is not reviews and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 has a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is not 10 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "how many years have authorname1 write for the paper ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that richard anderson writes", "variables": {}}
{"nl": "which most recent paper is publshed before year0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is smaller than 2012 and that has the largest publication year", "variables": {}}
{"nl": "name a paper published in venuename0 about venuename0 or venuename1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is nature and whose venue is nature or acl", "variables": {}}
{"nl": "what paper written by authorname1 has a venue other than venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper that richard anderson writes and whose venue is not acl", "variables": {}}
{"nl": "a journalname0 journal and a datasetname1 dataset are a part of which paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose journal is cell and whose dataset is blogs", "variables": {}}
{"nl": "which paper sites the least number of paper and has a citation could smaller than misc0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that cites the least number of paper", "variables": {}}
{"nl": "a paper with a keyphrase that is n't keyphrasename0 has what as its keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a datasetname1 dataset has some sort of keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper has a venue that is neither venuename1 nor venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is not acl or nature", "variables": {}}
{"nl": "what paper not written by authorname0 does not have a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose title is title", "variables": {}}
{"nl": "what paper with no determinant venue has a venue that is n't venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose venue is not venue", "variables": {}}
{"nl": "total citation count of paper called title0", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose title is neural attention", "variables": {}}
{"nl": "paper journalname0 journal not by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose journal is cell and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "paper published in venuename0 not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith not writes and whose venue is nature", "variables": {}}
{"nl": "paper not published in venuename0 and paper published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is not nature and whose venue is acl or nature", "variables": {}}
{"nl": "where is the paper with misc0 citations published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose citation count is 10", "variables": {}}
{"nl": "a paper that used a \" datasetname1 \" dataset and has no citations .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that paper not cites", "variables": {}}
{"nl": "what paper published in a year other than year0 cites another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and that cites paper", "variables": {}}
{"nl": "which   year0 papers are not written by neither authorname0 nor authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is 2012 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a citation count over misc0 is writmisc0 by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that author writes", "variables": {}}
{"nl": "what paper with a journalname0 journal has the earliest year of publication ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose journal is cell and that has the smallest publication year", "variables": {}}
{"nl": "keyphrasename0 paper published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature or acl", "variables": {}}
{"nl": "which paper writmisc0 by authorname0 or authorname1 has misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is 10 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper that uses datasetname0 dataset and published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is reviews and whose venue is acl or nature", "variables": {}}
{"nl": "what paper with a venue of venuename1 has a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper whose venue is acl and whose journal is cell", "variables": {}}
{"nl": "what is the total citation count of an author with more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author whose citation count is larger than 10", "variables": {}}
{"nl": "what year was the paper with a data set of datasetname1 published in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose dataset is blogs", "variables": {}}
{"nl": "which paper in venuename0 have the least number of cites ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that the least number of paper cites", "variables": {}}
{"nl": "what is the number of journals ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ) ) )", "can": "number of journal of paper", "variables": {}}
{"nl": "what paper not written by authorname0 was published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith not writes and whose publication year is 2012", "variables": {}}
{"nl": "which paper did not use the \" datasetname1 \" dataset , and was not published in journalname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose journal is not cell and whose dataset is not blogs", "variables": {}}
{"nl": "what paper written by authorname1 does not have a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper that richard anderson writes and whose dataset is not reviews", "variables": {}}
{"nl": "what is the total citation count of a paper with misc0 citations ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose citation count is 10", "variables": {}}
{"nl": "what paper not from year0 has a citation count of higher than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is larger than 10", "variables": {}}
{"nl": "what is the publication year of a paper with a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "can you tell me the total number of paper 's citation that was not located in venuename0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose venue is not nature", "variables": {}}
{"nl": "what paper making the most citations of other papers has something other than keyphrasename0 as its keyphrase ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that cites the most number of paper", "variables": {}}
{"nl": "paper not published in year0 and which has the dataset not datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose publication year is not 2012 and whose dataset is not blogs", "variables": {}}
{"nl": "what is the venue of a paper published in venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose venue is acl", "variables": {}}
{"nl": "what paper with a datasetname0 dataset has a venue other than venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is reviews and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose journal is not journal", "variables": {}}
{"nl": "what is the name of the paper with a publication year that is n't year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a citation count above misc0 does not cite another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that not cites paper", "variables": {}}
{"nl": "what paper written by authorname0 does not have a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper that noah smith writes and whose venue is not acl", "variables": {}}
{"nl": "which paper is not about datasetname1 and cites the least amount of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that cites the least number of paper", "variables": {}}
{"nl": "what paper is not in venuename0 and its journal is not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose venue is not nature and whose journal is not cell", "variables": {}}
{"nl": "paper that is not journalname0 journal and is not written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose journal is not cell and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper has a keyphrasename1 keyphrase but a venue that 's not venuename1 or venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is deep learning and whose venue is not nature or acl", "variables": {}}
{"nl": "keyphrasename0 paper and not journalname0 journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose keyphrase is semantic parsing and whose journal is not cell", "variables": {}}
{"nl": "what is the citation count for the author with the smallest citation acount ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string min ) ( string citation_count_author_number ) ) ( string citation_count_author_number ) ) )", "can": "citation count of author that has the smallest citation count", "variables": {}}
{"nl": "paper not in journalname0 journal published in venuename1 or venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose journal is cell and whose venue is acl or nature", "variables": {}}
{"nl": "paper published in year0 and does not have a topic", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what paper with a venue other than venuename0 cites the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that cites the least number of paper", "variables": {}}
{"nl": "paper published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose venue is nature", "variables": {}}
{"nl": "what paper titled title0 has a citation count smaller than that of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "the fewest paper that uses dataset", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string dataset_paper_dataset ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "dataset that is dataset of the least number of paper", "variables": {}}
{"nl": "which paper about keyphrasename1 has more citations than authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "paper that does not have a publication date of year0 and has the smallers publication year .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose publication year is not 2012 and that has the smallest publication year", "variables": {}}
{"nl": "what paper not published in year0 has no data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose dataset is dataset", "variables": {}}
{"nl": "what is the most common title of some paper ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string title_paper_title ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "title that is title of the most number of paper", "variables": {}}
{"nl": "what paper with a keyphrasename1 keyphrase was not given a title of some kind ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and whose title is not title", "variables": {}}
{"nl": "what paper with a title of \" title0 \" does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose dataset is not dataset", "variables": {}}
{"nl": "what is the paper with a title of title0 and the publication year that 's furthest in the past ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose title is neural attention and that has the smallest publication year", "variables": {}}
{"nl": "keyphrasename0 or keyphrasename1 paper that was published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "what paper with a data set of datasetname0 does not have a key phrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose dataset is reviews and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "what is the citation count of the author with the lowest citation count ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string min ) ( string citation_count_author_number ) ) ( string citation_count_author_number ) ) ) )", "can": "total citation count of author that has the smallest citation count", "variables": {}}
{"nl": "which author with a citation count other than misc0 has no paper writmisc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string write_author_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is not 10 and that not writes paper", "variables": {}}
{"nl": "paper published in venuename1 with the most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is acl and that has the largest citation count", "variables": {}}
{"nl": "a paper having a citation count over misc0 has what for a venue ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a citation count that is not misc0 has more citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is not 10 and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have a venue of venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose venue is acl and whose venue is not nature or acl", "variables": {}}
{"nl": "what is a paper that has the keyphrasename0 keyphrase and is not titled title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose title is not title", "variables": {}}
{"nl": "what year was a paper published that does not have the venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose venue is not nature", "variables": {}}
{"nl": "i need a paper not at the place venuename1 and that has the citations of the smallest amount of papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that cites the least number of paper", "variables": {}}
{"nl": "what paper with a citation count of misc0 has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose citation count is 10 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "which paper does n't have datasetname0 as its dataset or venuename1 or venuename0 as its venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose dataset is not reviews and whose venue is not acl or nature", "variables": {}}
{"nl": "where the paper with less than misc0 citations is published .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose citation count is smaller than 10", "variables": {}}
{"nl": "paper with the keyphrase keyphrasename0 that has a publication year after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is larger than 2012", "variables": {}}
{"nl": "what is the count of papers that have a dataset of datasetname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ) )", "can": "number of paper whose dataset is reviews", "variables": {}}
{"nl": "paper not published in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose publication year is not 2012", "variables": {}}
{"nl": "datasets for papers published before year0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has the fewest citations by other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that the least number of paper cites", "variables": {}}
{"nl": "what paper with a title of \" title0 \" was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose title is neural attention and whose publication year is smaller than 2012", "variables": {}}
{"nl": "paper not written by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) )", "can": "paper that richard anderson not writes", "variables": {}}
{"nl": "paper with the keyphrase keyphrasename0 that has misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is 10", "variables": {}}
{"nl": "what author has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) )", "can": "author whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with a citation count of misc0 is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that the least number of paper cites", "variables": {}}
{"nl": "papers within the venue of venuename1 that have a title title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose venue is acl and whose title is neural attention", "variables": {}}
{"nl": "what paper with title0 as its title has venuename0 as its venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper whose venue is nature and whose title is neural attention", "variables": {}}
{"nl": "what is the paper with a keyphrasename0 keyphrase and an venuename1 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is acl", "variables": {}}
{"nl": "what papers with no author use the \" datasetname1 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that author not writes", "variables": {}}
{"nl": "what paper written by authorname0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose dataset is dataset", "variables": {}}
{"nl": "what paper with authorname0 as its writer has a citation count above misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper that noah smith writes and whose citation count is larger than 10", "variables": {}}
{"nl": "what is the key phrase of a paper with a key phrase other than \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "how many authors have fewest citations ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string min ) ( string citation_count_author_number ) ) ) )", "can": "number of author that has the smallest citation count", "variables": {}}
{"nl": "what is the citation count of the author with a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_author_number ) ) )", "can": "citation count of author whose citation count is not 10", "variables": {}}
{"nl": "what is keyphrasename1 ?", "lf": "( call SW.listValue keyphrasename1 )", "can": "deep learning", "variables": {}}
{"nl": "what is the paper not entitled title0 that was published in a year following year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose title is not neural attention and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper has keyphrasename1 as its keyphrase but does not have a publication year of year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose keyphrase is deep learning and whose publication year is not 2012", "variables": {}}
{"nl": "paper published before year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose publication year is smaller than 2012", "variables": {}}
{"nl": "what is the keyphrase of the paper written by authorname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {}}
{"nl": "what paper with a venue of venuename0 has a key phrase that is neither \" keyphrasename0 \" nor \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose venue is nature and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper not published in year0 that is written by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is not 2012 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "i am looking for papers about keyphrasename1 without the title title0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string title_paper_title ) ( string ! = ) title0 ) )", "can": "paper whose keyphrase is deep learning and whose title is not neural attention", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename1 \" does not have a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose keyphrase is deep learning and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper that authorname1 did n't write does n't have a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper that richard anderson not writes and whose dataset is not blogs", "variables": {}}
{"nl": "what paper did authorname0 write which includes a dataset of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that noah smith writes and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper by authorname0 has no other author writing ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that author not writes", "variables": {}}
{"nl": "in what year was the paper that has a keyphrase other than keyphrasename1 published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose keyphrase is not deep learning", "variables": {}}
{"nl": "in what papers can a keyphrasename0 keyphrase and a journalname0 journal be found ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper whose keyphrase is semantic parsing and whose journal is cell", "variables": {}}
{"nl": "name the paper with a datasetname1 dataset and either a venuename0 or an venuename1 venue .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose dataset is blogs and whose venue is nature or acl", "variables": {}}
{"nl": "what paper with a venue of venuename0 has a dataset other than datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is nature and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "paper written by authorname1 and is written my the fewest authors", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that the least number of author writes", "variables": {}}
{"nl": "what paper written by authorname1 has a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper that richard anderson writes and whose keyphrase is deep learning", "variables": {}}
{"nl": "which paper lacking a dataset has a misc0 citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and whose dataset is not dataset", "variables": {}}
{"nl": "what paper written by an author has a dataset that 's not datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that author writes", "variables": {}}
{"nl": "what paper with a venuename0 venue has a year of publication other than year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is not 2012", "variables": {}}
{"nl": "name the paper that has no specific venue and a journal specified as a journalname0 journal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose venue is not venue", "variables": {}}
{"nl": "which paper not about keyphrasename0 has the most citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that the most number of paper cites", "variables": {}}
{"nl": "published paper with title0 in its title", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string venue_paper_venue ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and whose venue is venue", "variables": {}}
{"nl": "which keyphrasename1 or keyphrasename0 paper was published after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "paper not about keyphrasename1 and has citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that paper cites", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has a data set of either datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is not acl and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what is the paper published in year0 that has a citation count equal to authorname0 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is 2012 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename1 \" does not have a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose keyphrase is not deep learning and whose venue is not acl", "variables": {}}
{"nl": "what paper with a data set of datasetname1 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is blogs and that has the smallest citation count", "variables": {}}
{"nl": "what is the paper with a venue that is not venuename0 and also with the fewest amount of other paper citations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that the least number of paper cites", "variables": {}}
{"nl": "what paper published before year0 cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that cites the most number of paper", "variables": {}}
{"nl": "what paper with a journal other than journalname0 does not have a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose journal is not cell and whose dataset is not reviews", "variables": {}}
{"nl": "paper that does n't use ' datasetname0 ' dataset and is not written by an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that author not writes", "variables": {}}
{"nl": "what paper is by authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that richard anderson writes", "variables": {}}
{"nl": "what paper with a data set other than datasetname0 has a key phrase of \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose dataset is not reviews and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what 's the paper with a publishing year after year0 and with a venue that 's not venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is larger than 2012 and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a datasetname0 dataset did not see publication in the year year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper whose dataset is reviews and whose publication year is not 2012", "variables": {}}
{"nl": "name the paper whose citation count exceeds misc0 and that also has the littlest citation count .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose citation count is larger than 10 and that has the smallest citation count", "variables": {}}
{"nl": "what 's a paper with a venuename0 venue and a keyphrase other than keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose venue is nature and whose keyphrase is not deep learning", "variables": {}}
{"nl": "what paper published some year before year0 has some keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper on keyphrasename0 has the greatest number of authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that the most number of author writes", "variables": {}}
{"nl": "what paper with a data set of datasetname0 has the same citation count of as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is reviews and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper that authorname1 did not write has a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper that richard anderson not writes and whose dataset is reviews", "variables": {}}
{"nl": "a paper that does not have a venue in venuename0 and has authorname0 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is not nature and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what paper written by authorname1 has the most citations of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and that cites the most number of paper", "variables": {}}
{"nl": "how many authors have the highest citation count ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string citation_count_author_number ) ) ) )", "can": "number of author that has the largest citation count", "variables": {}}
{"nl": "how many papers are written by authorname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {}}
{"nl": "for the paper that authorname0 did n't write , what is the citation count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that noah smith not writes", "variables": {}}
{"nl": "what is the data set of a paper with a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose citation count is 10", "variables": {}}
{"nl": "the paper not titled title0 has what as its title ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string title_paper_title ) ) )", "can": "title of paper whose title is not neural attention", "variables": {}}
{"nl": "what paper written by authorname0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose venue is not venue", "variables": {}}
{"nl": "name the paper with a writer that is authorname0 or authorname1 and a dataset that 's not datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is not blogs and that noah smith or richard anderson writes", "variables": {}}
{"nl": "what writer that does n't have a misc0 citation count is the writer of the greatest amount of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is not 10 and that writes the most number of paper", "variables": {}}
{"nl": "what paper with a keyphrasename1 keyphrase has the highest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is deep learning and that has the largest citation count", "variables": {}}
{"nl": "paper not about keyphrasename1 and not written by an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that author not writes", "variables": {}}
{"nl": "paper in journal that does not use datasetname1 dataset", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose dataset is not blogs", "variables": {}}
{"nl": "what author - penned paper has a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that author writes", "variables": {}}
{"nl": "how is title0 used ?", "lf": "( call SW.listValue title0 )", "can": "neural attention", "variables": {}}
{"nl": "paper not about keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "which author writes the most paper ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author that writes the most number of paper", "variables": {}}
{"nl": "what paper not written by authorname1 has the title title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string title_paper_title ) ( string = ) title0 ) )", "can": "paper that richard anderson not writes and whose title is neural attention", "variables": {}}
{"nl": "what is the paper with a publication year occurring after year0 and with a datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose dataset is not reviews and whose publication year is larger than 2012", "variables": {}}
{"nl": "what is the keyphrase of the paper with the earliest publication year ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that has the smallest publication year", "variables": {}}
{"nl": "what paper not published in year0 was written by neither authorname1 nor authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose publication year is not 2012 and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what paper not from year0 is not about keyphrasename0 or keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is not 2012 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper with title0 in its title that cites other source", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that not cites paper", "variables": {}}
{"nl": "what paper with a post-year0 publication date has a dataset other than datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose publication year is larger than 2012 and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper not written by authorname1 was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper that richard anderson not writes and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what citation count is attributed to a paper with a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose journal is cell", "variables": {}}
{"nl": "what paper did authorname0 write , which did not use the \" datasetname1 \" or \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that noah smith writes and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper has got some type of key phrase and a year of publication that is not year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is not 2012 and whose keyphrase is keyphrase", "variables": {}}
{"nl": "what paper published before year0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose dataset is dataset", "variables": {}}
{"nl": "what paper writmisc0 by authorname1 has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper that richard anderson writes and whose citation count is larger than 10", "variables": {}}
{"nl": "name the paper with a venue of venuename0 and a datasetname1 dataset .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) )", "can": "paper whose venue is nature and whose dataset is blogs", "variables": {}}
{"nl": "paper with dataset being datasetname0 or datasetname1 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose dataset is reviews and whose dataset is reviews or blogs", "variables": {}}
{"nl": "papers using datasetname1 dataset with less than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose dataset is blogs and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a venue of venuename1 also has a dataset of some type ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose venue is acl and whose dataset is dataset", "variables": {}}
{"nl": "what paper not written by authorname0 has a greater citation count than authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "what venuename0 paper has the most citations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and that has the largest citation count", "variables": {}}
{"nl": "what paper written by authorname1 was not published in year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper that richard anderson writes and whose publication year is not 2012", "variables": {}}
{"nl": "what year was a paper publisehd with a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose venue is nature", "variables": {}}
{"nl": "number of paper citations which had a dataset not datasetname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose dataset is not reviews", "variables": {}}
{"nl": "what is the paper that has a journal of some kind and that has a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose journal is journal", "variables": {}}
{"nl": "what publication year applies to a paper which has a year of publication that 's year0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose publication year is 2012", "variables": {}}
{"nl": "what is the paper by authorname1 titled ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string title_paper_title ) ) )", "can": "title of paper that richard anderson not writes", "variables": {}}
{"nl": "what paper has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose citation count is not 10 and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper not published in year0 has a citation count other than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is not 10", "variables": {}}
{"nl": "how many citations did the paper whose publication year comes after year0 have ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose publication year is larger than 2012", "variables": {}}
{"nl": "name the paper not written by authorname1 with a dataset that 's datasetname1 or datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper that richard anderson not writes and whose dataset is blogs or reviews", "variables": {}}
{"nl": "what paper written by authorname0 has a citation count smaller than authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is smaller than citation count of richard anderson", "variables": {}}
{"nl": "what paper has a dataset that 's not datasetname1 or datasetname0 and a venue that is venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose venue is nature and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper does not have a citation count of misc0 and does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose journal is not journal", "variables": {}}
{"nl": "who is the author ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) )", "can": "author", "variables": {}}
{"nl": "what paper with a citation count over misc0 has no specific title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and whose title is not title", "variables": {}}
{"nl": "what paper lacking a venue does not have a keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose venue is not venue", "variables": {}}
{"nl": "papers not focused on keyphrasename1 that are includes datasetname0 or datasetname1 datasets .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper is written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that noah smith or richard anderson writes", "variables": {}}
{"nl": "what is the publication year of the paper published the earliest ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that has the smallest publication year", "variables": {}}
{"nl": "what facts pertain to the year year0 ?", "lf": "( call SW.listValue ( year0 ) )", "can": "2012", "variables": {}}
{"nl": "what paper containing a datasetname0 or datasetname1 dataset has a citation count less than misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose citation count is smaller than 10 and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 has the earliest publication year ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string min ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is not blogs and that has the smallest publication year", "variables": {}}
{"nl": "name the paper with the greatest quantity of paper citations and a keyphrasename0 keyphrase .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and that the most number of paper cites", "variables": {}}
{"nl": "what is the paper with a citation count of misc0 that was writmisc0 by an author ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that author writes", "variables": {}}
{"nl": "what author has the same citation count as authorname1 's citation count ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 has less citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "which keyphrasename1 paper uses datasetname1 or datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is deep learning and whose dataset is blogs or reviews", "variables": {}}
{"nl": "how many citations does the paper with the most citations have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string citation_count_paper_number ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that has the largest citation count", "variables": {}}
{"nl": "a paper published before year0 and has a citation count of something other than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose citation count is not 10 and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper not published in year0 has a citation count not equal to authorname1 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "in what year was the paper written by authorname0 published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that noah smith writes", "variables": {}}
{"nl": "what is the keyphrase ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) )", "can": "keyphrase", "variables": {}}
{"nl": "what paper with a journal that is not journalname0 cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and that cites the most number of paper", "variables": {}}
{"nl": "name the paper that has a dataset which is not datasetname1 and that has the fewest amount of sites of other papers .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that the least number of paper cites", "variables": {}}
{"nl": "papaer in a journalname0 journal with a citation count less than misc0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose journal is cell and whose citation count is smaller than 10", "variables": {}}
{"nl": "paper titled title0 with less than misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose title is neural attention and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper with a keyphrase of keyphrasename1 was not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is deep learning and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "which paper has the smallest citation count with the keyphrase that is not keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is not deep learning and that has the smallest citation count", "variables": {}}
{"nl": "name the paper with venuename0 as its venue and the fewest amount of author writes .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and that the least number of author writes", "variables": {}}
{"nl": "when were papers published that authorname1 did not author ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that richard anderson not writes", "variables": {}}
{"nl": "what paper written by authorname0 does n't use the \" datasetname0 \" dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper that noah smith writes and whose dataset is not reviews", "variables": {}}
{"nl": "what paper with a citation count other than misc0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and whose venue is not venue", "variables": {}}
{"nl": "what paper with a title other than \" title0 \" has a citation count that is not equal to authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what is the title of a paper with a citation count of misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string title_paper_title ) ) )", "can": "title of paper whose citation count is 10", "variables": {}}
{"nl": "papers not written by authorname1 and are not in the venuename1 venue", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper that richard anderson not writes and whose venue is not acl", "variables": {}}
{"nl": "what paper has a citation count not equal to misc0 and a venue not equal to venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose venue is not acl and whose citation count is not 10", "variables": {}}
{"nl": "which paper that uses ' datasetname0 ' dataset has the most citation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is reviews and that has the largest citation count", "variables": {}}
{"nl": "what paper with a venue that is not venuename1 cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and that paper cites", "variables": {}}
{"nl": "what paper with a publication year prior to year0 has the least number of citations of other papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that the least number of paper cites", "variables": {}}
{"nl": "what is the most recent year of publication for a paper with the title title0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose title is neural attention and that has the largest publication year", "variables": {}}
{"nl": "paper that is not written by authorname1 and does not cite authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson not writes and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "i need a paper with datasetname0 in the dataset that does not have the keyphrasename1 keyphrase", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose dataset is reviews and whose keyphrase is not deep learning", "variables": {}}
{"nl": "how many citations does a paper with more than misc0 citations have ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper with key phrases other than \" keyphrasename1 \" is cited by the fewest papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string min ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that the least number of paper cites", "variables": {}}
{"nl": "what untitled paper was written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose title is not title", "variables": {}}
{"nl": "what paper published after year0 has the lowest citation number ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose publication year is larger than 2012 and that has the smallest citation count", "variables": {}}
{"nl": "what is the citation count of a paper with a key phrase other than \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" has a data set of neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "what paper published in year0 has a venue of neither venuename0 nor venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose publication year is 2012 and whose venue is not nature or acl", "variables": {}}
{"nl": "what paper with a title that is not \" title0 \" does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose dataset is not dataset", "variables": {}}
{"nl": "paper not published in venuename1 and not about keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is not acl and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper does bot have a key phrase of \" keyphrasename0 \" or \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper whose keyphrase is not semantic parsing and whose keyphrase is not deep learning", "variables": {}}
{"nl": "name the paper with a citation count exceeding authorname1 's citation count .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "paper that does not have misc0 citations and is not writmisc0 by authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is not 10 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper from before year0 does authorname1 or authorname0 write for ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose publication year is smaller than 2012 and that noah smith or richard anderson writes", "variables": {}}
{"nl": "how many citations were in the paper not published in journalname0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose journal is not cell", "variables": {}}
{"nl": "what paper cited most frequently by other papers has a keyphrasename1 keyphrase ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that the most number of paper cites", "variables": {}}
{"nl": "what paper with a data set other than datasetname1 does not have a journal ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and whose journal is not journal", "variables": {}}
{"nl": "what is the paper that does not have a datasetname0 dataset and that authorname0 did not write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper that noah smith not writes and whose dataset is not reviews", "variables": {}}
{"nl": "the title of a paper that is unrelated to keyphrasename0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string title_paper_title ) ) )", "can": "title of paper whose keyphrase is not semantic parsing", "variables": {}}
{"nl": "what paper with a venue other than venuename0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and whose venue is not venue", "variables": {}}
{"nl": "keyphrasename1 paper published in venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) venuename1 ) )", "can": "paper whose keyphrase is deep learning and whose venue is acl", "variables": {}}
{"nl": "what paper containing citations from other papers has keyphrasename1 as the keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string cites_paper_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is deep learning and that cites paper", "variables": {}}
{"nl": "who wrote paper with more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string > ) ( misc0 ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is larger than 10 and that writes paper", "variables": {}}
{"nl": "what paper with a venue of venuename1 does not have the same citation count as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is acl and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what is the paper with keyphrasename1 keyphrase and a citation count that 's not misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose keyphrase is deep learning and whose citation count is not 10", "variables": {}}
{"nl": "what paper with more than misc0 citations has the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is larger than 10 and that the least number of author writes", "variables": {}}
{"nl": "what paper with a venue other than venuename1 has no title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose title is not title", "variables": {}}
{"nl": "what venue has the least amount of citations ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string citation_count_paper_number ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that has the smallest citation count", "variables": {}}
{"nl": "what paper has an venuename1 venue and a dataset of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose venue is acl and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what papers contain a citation count that is higher than misc0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose citation count is larger than 10", "variables": {}}
{"nl": "what paper did authorname1 write prior to year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper that richard anderson writes and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what is the total citation count of a paper ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper", "variables": {}}
{"nl": "what paper has a citation count above misc0 that 's not the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is larger than 10 and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is not venue", "variables": {}}
{"nl": "what is the dataset of a paper with a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose dataset is blogs", "variables": {}}
{"nl": "what paper with a venue type that 's venuename0 has a specific name as a title ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose venue is nature and whose title is title", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 is written by either authorname0 or authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is not blogs and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper with a venue other than venuename0 is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose venue is not nature and that the most number of paper cites", "variables": {}}
{"nl": "paper that used the \" datasetname1 \" dataset with a publication year greater than year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose dataset is blogs and whose publication year is larger than 2012", "variables": {}}
{"nl": "which paper did authorname0 write that has a venuename0 venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {}}
{"nl": "which paper has a dataset that is n't datasetname0 and a journal that is journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) )", "can": "paper whose journal is cell and whose dataset is not reviews", "variables": {}}
{"nl": "paper written by authorname0 and paper not written by authorname1 or authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper that noah smith writes and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "name the paper with a citation count of misc0 cited by another paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that paper cites", "variables": {}}
{"nl": "paper written by authorname1 with less citations from authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "name the paper which includes a journal and has a dataset that 's not datasetname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and whose journal is journal", "variables": {}}
{"nl": "what is the number of venuename1 papers ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ) )", "can": "number of paper whose venue is acl", "variables": {}}
{"nl": "author who published citation count fewer than misc0 and same citations of authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string citation_count_author_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "author whose citation count is smaller than 10 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper has a journal of journalname0 and is penned by authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose journal is cell and that richard anderson or noah smith writes", "variables": {}}
{"nl": "what paper published before year0 has a data set that is neither datasetname0 nor datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose dataset is not reviews or blogs", "variables": {}}
{"nl": "a cited paper was not written by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that paper cites", "variables": {}}
{"nl": "which paper does not have a venue if venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename1 venuename0 ) ) )", "can": "paper whose venue is nature and whose venue is not acl or nature", "variables": {}}
{"nl": "what paper without authorname1 or authorname0 as writer had a venue of venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose venue is acl and that richard anderson or noah smith not writes", "variables": {}}
{"nl": "what is the number of papers not written by authorname0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ) )", "can": "number of paper that noah smith not writes", "variables": {}}
{"nl": "a paper with a year of publication that 's not year0 has what as its total production year ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose publication year is not 2012", "variables": {}}
{"nl": "paper not written by authorname0 and does not have a publication year of year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) )", "can": "paper that noah smith not writes and whose publication year is not 2012", "variables": {}}
{"nl": "what paper with a journal other than journalname0 has a citation count equal to authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose journal is not cell and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "paper written by authorname1g and with the journal being journalname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string journal_paper_journal ) ( string = )  journalname0 ) )", "can": "paper that richard anderson writes and whose journal is cell", "variables": {}}
{"nl": "which publisher does not use datasetname0 dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose dataset is not reviews", "variables": {}}
{"nl": "what paper not written by authorname0 has a citation count lower than authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith not writes and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper with a venue of venuename0 has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose venue is nature and whose citation count is larger than 10", "variables": {}}
{"nl": "what paper not by authorname1 is not written by authorname1 or authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper that richard anderson not writes and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "how many papers are there which contain a data set that is n't datasetname1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ) )", "can": "number of paper whose dataset is not blogs", "variables": {}}
{"nl": "what paper was writmisc0 by authorname0 with a citation count equal to misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) )", "can": "paper that noah smith writes and whose citation count is 10", "variables": {}}
{"nl": "what is the full citation number of a paper without a datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper whose dataset is not blogs", "variables": {}}
{"nl": "what is the paper with no specific journal but that has a journal that is journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose journal is not journal", "variables": {}}
{"nl": "what papers published in year0 contain keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {}}
{"nl": "what is the title of a paper with the venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string title_paper_title ) ) )", "can": "title of paper whose venue is nature", "variables": {}}
{"nl": "what author with a citation count below misc0 who has the lowest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string min ) ( string citation_count_author_number ) ) )", "can": "author whose citation count is smaller than 10 and that has the smallest citation count", "variables": {}}
{"nl": "paper not using datasetname0 dataset that cites authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not reviews and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what journal was a paper with a key phrase of \" keyphrasename1 \" published in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose keyphrase is deep learning", "variables": {}}
{"nl": "what paper with a keyphrasename1 keyphrase has no datasetname1 dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose keyphrase is deep learning and whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a journal other than journalname0 does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose journal is not cell and whose venue is not venue", "variables": {}}
{"nl": "what paper with a journal of journalname0 has a data set that is not dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose dataset is not dataset", "variables": {}}
{"nl": "published paper authorname0 did n't write and is n't a dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that noah smith not writes and whose dataset is not dataset", "variables": {}}
{"nl": "published paper before year0 with misc0 citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose citation count is 10 and whose publication year is smaller than 2012", "variables": {}}
{"nl": "citation count of oldest published paper", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string min ) ( string publication_year_paper_number ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper that has the smallest publication year", "variables": {}}
{"nl": "paper published in year0 written by author", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that author writes", "variables": {}}
{"nl": "what paper with a venue of venuename0 was published the last ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose venue is nature and that has the largest publication year", "variables": {}}
{"nl": "what paper with a key phrase that is not \" keyphrasename1 \" is cited by the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not deep learning and that the most number of paper cites", "variables": {}}
{"nl": "what paper with less than misc0 citations has the same number of citations as authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "authorname0 did n't write what paper whose journal is not journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper that noah smith not writes and whose journal is not cell", "variables": {}}
{"nl": "what paper not about keyphrasename1 is from venuename0 or venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose keyphrase is not deep learning and whose venue is nature or acl", "variables": {}}
{"nl": "paper published by authorname0 with more citations than authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "paper who is not published by venuename1 and not a venue", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose venue is not venue", "variables": {}}
{"nl": "paper that is cited the most with less than misc0 citations", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and that the most number of paper cites", "variables": {}}
{"nl": "what is the paper not cited by other papers that has a publishing year after year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is larger than 2012 and that paper not cites", "variables": {}}
{"nl": "what paper with a data set of datasetname0 is written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose dataset is reviews and that noah smith or richard anderson writes", "variables": {}}
{"nl": "paper does n't have misc0 citations and has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose citation count is not 10 and that has the largest publication year", "variables": {}}
{"nl": "what paper with a journal of journalname0 does not have a data set ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose journal is cell and whose dataset is dataset", "variables": {}}
{"nl": "what paper titled \" title0 \" does not have a journal of journalname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string journal_paper_journal ) ( string ! = )  journalname0 ) )", "can": "paper whose title is neural attention and whose journal is not cell", "variables": {}}
{"nl": "what is the dataset ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) )", "can": "dataset", "variables": {}}
{"nl": "do you know the paper that has the datasetname0 dataset and the one that either authorname1 or authorname0 writes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is reviews and that richard anderson or noah smith writes", "variables": {}}
{"nl": "do you know the dataset of the paper whose venue is venuename1 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose venue is acl", "variables": {}}
{"nl": "what about one that is n't title0 and the citation count is less than the citation count of authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is not neural attention and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "what paper does authorname0 write whose citation count is not the same as authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that noah smith writes and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "what year was the paper with the highest citation count published ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( string citation_count_paper_number ) ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper that has the largest citation count", "variables": {}}
{"nl": "what paper with a key phrase of \" keyphrasename0 \" does not have a venue ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is not venue", "variables": {}}
{"nl": "what paper not written by authorname1 has a data set of datasetname0 or datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper that richard anderson not writes and whose dataset is reviews or blogs", "variables": {}}
{"nl": "what paper written by authorname1 has a key phrase of either \" keyphrasename1 \" or \" keyphrasename0 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper that richard anderson writes and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper written by authorname0 cites a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and that paper cites", "variables": {}}
{"nl": "what paper published prior to year0 does not have a type of keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is not keyphrase", "variables": {}}
{"nl": "paper that has misc0 citations and not writmisc0 by the author .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that author not writes", "variables": {}}
{"nl": "for papers with a venue of venuename0 , what is the total publication year ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ) ) )", "can": "total publication year of paper whose venue is nature", "variables": {}}
{"nl": "paper published in venuename0 with different citation count of authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose venue is nature and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "paper published before year0 in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is smaller than 2012", "variables": {}}
{"nl": "paper published in venuename0 that is n't keyphrasename1 or keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is nature and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper with a data set of datasetname1 does not cite papers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose dataset is blogs and that not cites paper", "variables": {}}
{"nl": "paper with a title of \" title0 \" that is written by the fewest authors .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose title is neural attention and that the least number of author writes", "variables": {}}
{"nl": "a paper that does not discuss keyphrasename0 and has a citation count that is higher than authorname0 's .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what dataset paper does not have a title about title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper whose title is not neural attention and whose dataset is dataset", "variables": {}}
{"nl": "paper with   a title created by authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string title_paper_title ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose title is title", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 was published before year0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose dataset is not blogs and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper with a data set of datasetname0 was published most recently ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose dataset is reviews and that has the largest publication year", "variables": {}}
{"nl": "what paper has a venue that is venuename1 and a citation number that is n't misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) )", "can": "paper whose venue is acl and whose citation count is not 10", "variables": {}}
{"nl": "what venue has the highest number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "venue that is venue of the most number of paper", "variables": {}}
{"nl": "paper that is not about keyphrasename1 and published before year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) )", "can": "paper whose keyphrase is not deep learning and whose publication year is smaller than 2012", "variables": {}}
{"nl": "what paper did authorname1 not write that is not cited by a paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( call SW.reverse ( string cites_paper_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that paper not cites", "variables": {}}
{"nl": "what paper with a data set of datasetname1 is written by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) ( call SW.concat authorname1 authorname0 ) ) )", "can": "paper whose dataset is blogs and that richard anderson or noah smith writes", "variables": {}}
{"nl": "which paper that uses datasetname1 has more than misc0 citations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string citation_count_paper_number ) ( string > ) ( misc0 ) ) )", "can": "paper whose dataset is blogs and whose citation count is larger than 10", "variables": {}}
{"nl": "paper that is not written by authorname0 and is published in venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string venue_paper_venue ) ( string = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper that noah smith not writes and whose venue is nature or acl", "variables": {}}
{"nl": "what untitled paper has a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string title_paper_title ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.title ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose title is not title", "variables": {}}
{"nl": "paper published after year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper not about keyphrasename0 is written by the most number of authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and that the most number of author writes", "variables": {}}
{"nl": "what paper without a dataset was written by authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that noah smith writes and whose dataset is not dataset", "variables": {}}
{"nl": "name a paper written by authorname1 which contains a journal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose journal is journal", "variables": {}}
{"nl": "what paper with a data set that is not datasetname1 is written by the fewest authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string min ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not blogs and that the least number of author writes", "variables": {}}
{"nl": "what is the journal of the paper with a venue of venuename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string journal_paper_journal ) ) )", "can": "journal of paper whose venue is nature", "variables": {}}
{"nl": "what paper on keyphrasename0 was not written by authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose keyphrase is semantic parsing and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "what paper with a title of \" title0 \" has more citations than authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose title is neural attention and whose citation count is larger than citation count of noah smith", "variables": {}}
{"nl": "what paper has a journal of journalname0 and was written after year0 >", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose journal is cell and whose publication year is larger than 2012", "variables": {}}
{"nl": "what paper with a venue of venuename0 has the smallest citation count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string min ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and that has the smallest citation count", "variables": {}}
{"nl": "who was the author who writes paper ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author that writes paper", "variables": {}}
{"nl": "what paper not about keyphrasename1 has the same citation count as authorname0 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "paper with the publication year of year0 and that some author does not write", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose publication year is 2012 and that author not writes", "variables": {}}
{"nl": "which paper has a citation count that 's less than authorname0 's citation count and a keyphrase that is n't keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string < ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is smaller than citation count of noah smith", "variables": {}}
{"nl": "paper that does n't have citations", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that not cites paper", "variables": {}}
{"nl": "what year was authorname1 's paper published ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that richard anderson writes", "variables": {}}
{"nl": "paper not published in year0 with the same number of citations as authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper written by authorname1 has a data set of datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) )", "can": "paper that richard anderson writes and whose dataset is reviews", "variables": {}}
{"nl": "papers with a citation count below misc0 .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string citation_count_paper_number ) ) )", "can": "citation count of paper whose citation count is not 10", "variables": {}}
{"nl": "what journal contains the highest number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string journal_paper_journal ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "journal that is journal of the most number of paper", "variables": {}}
{"nl": "what author writes the most papers , but has a citation count below misc0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string citation_count_author_number ) ( string < ) ( misc0 ) ) ( string max ) ( string write_author_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "author whose citation count is smaller than 10 and that writes the most number of paper", "variables": {}}
{"nl": "what paper with misc0 citations is writmisc0 by either authorname0 or authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) ( call SW.concat authorname0 authorname1 ) ) )", "can": "paper whose citation count is 10 and that noah smith or richard anderson not writes", "variables": {}}
{"nl": "keyphrase that is the keyphrase of the most papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.keyphrase ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string keyphrase_paper_keyphrase ) ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "keyphrase that is keyphrase of the most number of paper", "variables": {}}
{"nl": "paper that does not use datasetname1 dataset and does not cite authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose dataset is not blogs and whose citation count is not citation count of noah smith", "variables": {}}
{"nl": "what paper was published before year0 that does not contain keyphrasename1 or keyphrasename0 keyphrases ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is not deep learning or semantic parsing", "variables": {}}
{"nl": "what paper having a venue of venuename1 does not have a data set of datasetname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ( string dataset_paper_dataset ) ( string ! = ) datasetname1 ) )", "can": "paper whose venue is acl and whose dataset is not blogs", "variables": {}}
{"nl": "what paper with a key phrase other than \" keyphrasename0 \" has a data set that is neither datasetname1 nor datasetname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.concat datasetname1 datasetname0 ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose dataset is not blogs or reviews", "variables": {}}
{"nl": "what paper with a data set that is not datasetname0 was written by the most authors ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string ! = ) datasetname0 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper whose dataset is not reviews and that the most number of author writes", "variables": {}}
{"nl": "paper from anywhere that 's not venuename1 which uses the words \" keyphrasename1 \" or \" keyphrasename0 \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string keyphrase_paper_keyphrase ) ( string = ) ( call SW.concat keyphrasename1 keyphrasename0 ) ) )", "can": "paper whose venue is not acl and whose keyphrase is deep learning or semantic parsing", "variables": {}}
{"nl": "what paper written by authorname1 has more citations than authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string citation_count_paper_number ) ( string > ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper that richard anderson writes and whose citation count is larger than citation count of richard anderson", "variables": {}}
{"nl": "which paper used as a citation by other papers has an earlier - than-year0 publication year ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( call SW.reverse ( string cites_paper_paper ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose publication year is smaller than 2012 and that paper cites", "variables": {}}
{"nl": "what paper with a citation count that is not authorname1 's citation count has a keyphrase that is not keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) ( string citation_count_paper_number ) ( string ! = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not deep learning and whose citation count is not citation count of richard anderson", "variables": {}}
{"nl": "papers authored by authorname0 that were published in year0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {}}
{"nl": "what paper has authorname1 as its author and a dataset that 's not a dataset ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string dataset_paper_dataset ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.dataset ) ( string ! type ) ) ) )", "can": "paper that richard anderson writes and whose dataset is not dataset", "variables": {}}
{"nl": "paper with the same number of citations as authorname1 and does n't use the word \" keyphrasename0 \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname1 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is not semantic parsing and whose citation count is citation count of richard anderson", "variables": {}}
{"nl": "what paper has a citation count that is authorname0 's citation number and a keyphrasename0 keyphrase ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string citation_count_paper_number ) ( string = ) ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) ) )", "can": "paper whose keyphrase is semantic parsing and whose citation count is citation count of noah smith", "variables": {}}
{"nl": "what venue does authorname1 write for ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that richard anderson writes", "variables": {}}
{"nl": "what paper had a year0 publication date and a venue different than venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) )", "can": "paper whose publication year is 2012 and whose venue is not acl", "variables": {}}
{"nl": "what paper written by authorname1 does not have a key phrase of \" keyphrasename1 ? \"", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ( string ! = ) keyphrasename1 ) )", "can": "paper that richard anderson writes and whose keyphrase is not deep learning", "variables": {}}
{"nl": "paper not written by authorname1 that is written by the most authors .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that the most number of author writes", "variables": {}}
{"nl": "paper use ' datasetname0 ' dataset not published in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname0 ) ( string venue_paper_venue ) ( string ! = ) venuename0 ) )", "can": "paper whose dataset is reviews and whose venue is not nature", "variables": {}}
{"nl": "what paper not written by authorname1 cites the most papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string max ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper that richard anderson not writes and that cites the most number of paper", "variables": {}}
{"nl": "a paper whose journal is not journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose journal is not journal", "variables": {}}
{"nl": "paper whose journal is journalname0 and the venue is not venuename0 or venuename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string journal_paper_journal ) ( string = )  journalname0 ) ( string venue_paper_venue ) ( string ! = ) ( call SW.concat venuename0 venuename1 ) ) )", "can": "paper whose journal is cell and whose venue is not nature or acl", "variables": {}}
{"nl": "paper whose venue is not venuename1 and that journal is not journal", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string ! = ) venuename1 ) ( string journal_paper_journal ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose venue is not acl and whose journal is not journal", "variables": {}}
{"nl": "paper whose publication year is smaller than year0 and the keyphrase is not keyphrasename0 or keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string < ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ( string ! = ) ( call SW.concat keyphrasename0 keyphrasename1 ) ) )", "can": "paper whose publication year is smaller than 2012 and whose keyphrase is not semantic parsing or deep learning", "variables": {}}
{"nl": "paper whose dataset is datasetname1 and has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) datasetname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose dataset is blogs and that has the largest citation count", "variables": {}}
{"nl": "paper whose publication year is n't year0 and whose citation count is less than misc0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string ! = ) ( year0 ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) )", "can": "paper whose publication year is not 2012 and whose citation count is smaller than 10", "variables": {}}
{"nl": "what paper which contains a journal has a citation count under misc0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string < ) ( misc0 ) ) ( string journal_paper_journal ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.journal ) ( string ! type ) ) ) )", "can": "paper whose citation count is smaller than 10 and whose journal is journal", "variables": {}}
{"nl": "what paper has the greatest author writes amount ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string write_author_paper ) ) ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ) )", "can": "paper that the most number of author writes", "variables": {}}
{"nl": "paper with misc0 citations that cites other sources", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string = ) ( misc0 ) ) ( string cites_paper_paper ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is 10 and that not cites paper", "variables": {}}
{"nl": "what 's the total citation number for a paper not written by authorname1 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname1 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that richard anderson not writes", "variables": {}}
{"nl": "what paper has other than misc0 citations but cites the least number of papers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string citation_count_paper_number ) ( string ! = ) ( misc0 ) ) ( string min ) ( string cites_paper_paper ) ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ) )", "can": "paper whose citation count is not 10 and that cites the least number of paper", "variables": {}}
{"nl": "paper that does not have title0 in its title and uses datasetname0 or datasetname1 dataset", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string ! = ) title0 ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat datasetname0 datasetname1 ) ) )", "can": "paper whose title is not neural attention and whose dataset is reviews or blogs", "variables": {}}
