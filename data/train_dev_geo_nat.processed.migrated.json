{"nl": "how many states border on the state whose capital is city0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) ) )", "variables": {"city0": "fb:en.city.boston_ma"}, "can": "number of state that borders state whose capital is sacramento", "idx": "train_geo_nat-0", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) ) )"}
{"nl": "what rivers flow through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "river that traverses california", "idx": "train_geo_nat-1", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "name the states which have no surrounding states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that not borders state", "idx": "train_geo_nat-2", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what is the density of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "density of california", "idx": "train_geo_nat-3", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )"}
{"nl": "what river is the longest one in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the largest length", "idx": "train_geo_nat-4", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the longest river that flows through state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-5", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what are the major cities of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-6", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.fort_wayne"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-7", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the shortest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.nebraska"}, "can": "river that traverses california and that has the smallest length", "idx": "train_geo_nat-8", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what is the size of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "area of california", "idx": "train_geo_nat-9", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what states have rivers running through them ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that river traverses", "idx": "train_geo_nat-10", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "what is the length of the river that runs through the most number of states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ( string len_river_length ) ) )", "variables": {}, "can": "length of river that traverses the most number of state", "idx": "train_geo_nat-11", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ( string len_river_length ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.arkansas"}, "can": "state that borders california", "idx": "train_geo_nat-12", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what capital is the largest in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-13", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the longest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-14", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "place that is high point of california", "idx": "train_geo_nat-15", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-16", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "how many cities are there in country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of city", "idx": "train_geo_nat-17", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )"}
{"nl": "what rivers flow through the largest state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )", "variables": {}, "can": "river that traverses state that has the largest area", "idx": "train_geo_nat-18", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what are the major cities in the smallest state in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is major and that is contained by state that has the smallest population", "idx": "train_geo_nat-19", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ) )"}
{"nl": "what is the height of place0 ?", "lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )", "variables": {"place0": "fb:en.place.mount_mckinley"}, "can": "elevation of death valley", "idx": "train_geo_nat-20", "canonical_lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )"}
{"nl": "how many states are next to major rivers ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) ) )", "variables": {}, "can": "number of state that river that is major borders", "idx": "train_geo_nat-21", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) ) )"}
{"nl": "what states have rivers named river0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-22", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what state has the most major rivers running through it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) )", "variables": {}, "can": "state that the most number of river that is major traverses", "idx": "train_geo_nat-23", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) )"}
{"nl": "how many people live in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.riverside_ca"}, "can": "population of sacramento", "idx": "train_geo_nat-24", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the average population per square km in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "density of usa", "idx": "train_geo_nat-25", "canonical_lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) )"}
{"nl": "which rivers run through states bordering state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "river that traverses state that borders california", "idx": "train_geo_nat-26", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the longest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-27", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "which states does the river0 river pass through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.missouri"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-28", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the smallest city of the smallest state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string min ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is contained by state that has the smallest area and that has the smallest population", "idx": "train_geo_nat-29", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "what is the highest point in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "place that has the largest elevation", "idx": "train_geo_nat-30", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )"}
{"nl": "what is the lowest point in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "place that has the smallest elevation", "idx": "train_geo_nat-31", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )"}
{"nl": "what state borders the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ) )", "variables": {}, "can": "state that borders state that has the smallest population", "idx": "train_geo_nat-32", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ) )"}
{"nl": "how many rivers are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "number of river that traverses california", "idx": "train_geo_nat-33", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "which state has the greatest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "train_geo_nat-34", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "what is the lowest elevation in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "place that is low point of california", "idx": "train_geo_nat-35", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "how many states does the river0 river run through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.missouri"}, "can": "number of state that colorado river traverses", "idx": "train_geo_nat-36", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "what is the highest elevation in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.south_carolina"}, "can": "place that is high point of california", "idx": "train_geo_nat-37", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "which rivers run through the state with the lowest elevation in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that traverses state that place that has the smallest elevation is contained by", "idx": "train_geo_nat-38", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what is the population of city0 ga ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.atlanta_ga"}, "can": "population of sacramento", "idx": "train_geo_nat-39", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.south_dakota"}, "can": "population of california", "idx": "train_geo_nat-40", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-41", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what are the capitals of the states that border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of state that borders california", "idx": "train_geo_nat-42", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what state has highest elevation ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-43", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what are the populations of the states through which the river0 river run ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-44", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "what are the populations of all the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "population of city that is major and that is contained by california", "idx": "train_geo_nat-45", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ( string population_city_count ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.maryland"}, "can": "city that is capital of california", "idx": "train_geo_nat-46", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "population of california", "idx": "train_geo_nat-47", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what cities in state0 have the highest populations ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-48", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what state is the state with the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that the most number of river traverses", "idx": "train_geo_nat-49", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "what are the major cities in the largest state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )", "variables": {}, "can": "city that is major and that is contained by state that has the largest area", "idx": "train_geo_nat-50", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what is the elevation of place0 ?", "lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )", "variables": {"place0": "fb:en.place.death_valley"}, "can": "elevation of death valley", "idx": "train_geo_nat-51", "canonical_lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )"}
{"nl": "what are the biggest rivers in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-52", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the length of the river that traverses the most states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ( string len_river_length ) ) )", "variables": {}, "can": "length of river that traverses the most number of state", "idx": "train_geo_nat-53", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ( string len_river_length ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.indiana"}, "can": "city that is capital of california", "idx": "train_geo_nat-54", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "area of california", "idx": "train_geo_nat-55", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the area of all the states combined ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )", "variables": {}, "can": "total area of state", "idx": "train_geo_nat-56", "canonical_lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what is the size of the largest state in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "area of state that has the largest area", "idx": "train_geo_nat-57", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the largest state ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the largest area", "idx": "train_geo_nat-58", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the largest state that borders the state with the lowest point in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that borders state that place that has the smallest elevation is contained by and that has the largest area", "idx": "train_geo_nat-59", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the most populous city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-60", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "city that is capital of california", "idx": "train_geo_nat-61", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the tallest mountain in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "mountain that has the largest elevation", "idx": "train_geo_nat-62", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) )"}
{"nl": "what state is city0 in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.dallas_tx"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-63", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what is the population density of the smallest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )", "variables": {}, "can": "density of state that has the smallest area", "idx": "train_geo_nat-64", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )"}
{"nl": "how many states does state0 border ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "number of state that borders california", "idx": "train_geo_nat-65", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the smallest state through which the longest river runs ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that river that has the largest length traverses and that has the smallest area", "idx": "train_geo_nat-66", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "how many citizens live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "population of california", "idx": "train_geo_nat-67", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what state has the largest urban population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the largest population", "idx": "train_geo_nat-68", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what states high point are higher than that of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "state whose high point is place whose elevation is larger than elevation of place that is high point of california", "idx": "train_geo_nat-69", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what is the highest point in the country ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )", "variables": {}, "can": "place that has the largest elevation", "idx": "train_geo_nat-70", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )"}
{"nl": "how many people are in the state of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.nevada"}, "can": "population of california", "idx": "train_geo_nat-71", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the longest river that runs through a state that borders state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.tennessee"}, "can": "river that traverses state that borders california and that has the largest length", "idx": "train_geo_nat-72", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "how many rivers are in the state with the highest point ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) ) )", "variables": {}, "can": "number of river that traverses state that place that has the largest elevation is contained by", "idx": "train_geo_nat-73", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) ) )"}
{"nl": "how many people live in city0 dc ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.washington_dc"}, "can": "population of sacramento", "idx": "train_geo_nat-74", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "which state borders most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that borders the most number of state", "idx": "train_geo_nat-75", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "give me the lakes in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "lake that is contained by california", "idx": "train_geo_nat-76", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) state0 ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.rhode_island"}, "can": "place that is high point of california", "idx": "train_geo_nat-77", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the longest river in america ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {}, "can": "river that has the largest length", "idx": "train_geo_nat-78", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.georgia"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-79", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the smallest state by area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the smallest area", "idx": "train_geo_nat-80", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "how many states have major rivers ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) ) )", "variables": {}, "can": "number of state that river that is major traverses", "idx": "train_geo_nat-81", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) ) )"}
{"nl": "how many rivers are there in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.idaho"}, "can": "number of river that traverses california", "idx": "train_geo_nat-82", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what state that borders state0 has the highest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california and that has the largest population", "idx": "train_geo_nat-83", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "how many rivers are found in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "number of river that traverses california", "idx": "train_geo_nat-84", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "which states does not border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that not borders california", "idx": "train_geo_nat-85", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) state0 ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "population of california", "idx": "train_geo_nat-86", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what are the largest cities in the states that border the largest state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string max ) ( string population_state_count ) ) ) ) )", "variables": {}, "can": "city that is contained by state that borders state that has the largest area and that has the largest population", "idx": "train_geo_nat-87", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string max ) ( string population_state_count ) ) ) ) )"}
{"nl": "what river flows through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.kansas"}, "can": "river that traverses california", "idx": "train_geo_nat-88", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.baton_rouge"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-89", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what states border states which the river0 runs through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that borders state that colorado river traverses", "idx": "train_geo_nat-90", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.kansas"}, "can": "population of california", "idx": "train_geo_nat-91", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the area of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string area_city_length^2 ) ) )", "variables": {"city0": "fb:en.city.seattle_wa"}, "can": "area of sacramento", "idx": "train_geo_nat-92", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string area_city_length^2 ) ) )"}
{"nl": "which state has the most people ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the largest population", "idx": "train_geo_nat-93", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "how many major cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.arizona"}, "can": "number of city that is major and that is contained by california", "idx": "train_geo_nat-94", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the state that contains the highest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-95", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what rivers do not run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) state0 ) )", "variables": {"state0": "fb:en.state.tennessee"}, "can": "river that not traverses california", "idx": "train_geo_nat-96", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) state0 ) )"}
{"nl": "what is the state with the lowest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "train_geo_nat-97", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "how many states in the country0 does the shortest river run through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of state that river that has the smallest length traverses", "idx": "train_geo_nat-98", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) ) )"}
{"nl": "how big is state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "area of california", "idx": "train_geo_nat-99", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the longest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.mississippi"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-100", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "how many states border state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "number of state that borders california", "idx": "train_geo_nat-101", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.san_diego"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-102", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-103", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the total population of the states that border state0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string population_state_count ) ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "total population of state that borders california", "idx": "train_geo_nat-104", "canonical_lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string population_state_count ) ) ) )"}
{"nl": "how large is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "population of city that is contained by california and that has the largest population", "idx": "train_geo_nat-105", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) ( string population_city_count ) ) )"}
{"nl": "what is the largest city in state0 by population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.minnesota"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-106", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "state that borders california", "idx": "train_geo_nat-107", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what are the populations of states through which the river0 run ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-108", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "how many major cities are in states bordering state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.utah"}, "can": "number of city that is major and that is contained by state that borders california", "idx": "train_geo_nat-109", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "population of california", "idx": "train_geo_nat-110", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "whats the largest city ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that has the largest population", "idx": "train_geo_nat-111", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.denver_co"}, "can": "population of sacramento", "idx": "train_geo_nat-112", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.atlanta_ga"}, "can": "population of sacramento", "idx": "train_geo_nat-113", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.rhode_island"}, "can": "state that borders california", "idx": "train_geo_nat-114", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what are the populations of states through which the river0 river run ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-115", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "what state has the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "variables": {}, "can": "state that the most number of city is contained by", "idx": "train_geo_nat-116", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )"}
{"nl": "where is state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_hampshire"}, "can": "country that california is contained by", "idx": "train_geo_nat-117", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) state0 ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "state that borders california", "idx": "train_geo_nat-118", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.spokane_wa", "state0": "fb:en.state.washington"}, "can": "population of sacramento", "idx": "train_geo_nat-119", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the longest river in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the largest length", "idx": "train_geo_nat-120", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the highest point in the state with the capital city0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) )", "variables": {"city0": "fb:en.city.des_moines_ia"}, "can": "place that is high point of state whose capital is sacramento", "idx": "train_geo_nat-121", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) )"}
{"nl": "list the states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )", "variables": {}, "can": "state", "idx": "train_geo_nat-122", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )"}
{"nl": "what is the population of the capital of the smallest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string population_city_count ) ) )", "variables": {}, "can": "population of city that is capital of state that has the smallest area", "idx": "train_geo_nat-123", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string population_city_count ) ) )"}
{"nl": "name the rivers in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.arkansas"}, "can": "river that traverses california", "idx": "train_geo_nat-124", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the longest river in the state with the highest point ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) ( string max ) ( string len_river_length ) ) )", "variables": {}, "can": "river that traverses state that place that has the largest elevation is contained by and that has the largest length", "idx": "train_geo_nat-125", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the highest mountain in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "mountain that is contained by california and that has the largest elevation", "idx": "train_geo_nat-126", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) )"}
{"nl": "what is the combined population of all 50 states ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ) ) )", "variables": {}, "can": "total population of state", "idx": "train_geo_nat-127", "canonical_lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ) ) )"}
{"nl": "what is the highest point in the smallest state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) )", "variables": {}, "can": "place that is high point of state that has the smallest area", "idx": "train_geo_nat-128", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) )"}
{"nl": "how big is state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "area of california", "idx": "train_geo_nat-129", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california", "idx": "train_geo_nat-130", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how long is the shortest river in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "length of river that has the smallest length", "idx": "train_geo_nat-131", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ( string len_river_length ) ) )"}
{"nl": "what rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.louisiana"}, "can": "river that traverses california", "idx": "train_geo_nat-132", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the largest capital ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-133", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the longest river that passes the states that border the state that borders the most states ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) ) ( string max ) ( string len_river_length ) ) )", "variables": {}, "can": "river that traverses state that borders state that borders the most number of state and that has the largest length", "idx": "train_geo_nat-134", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-135", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "how many states does the river0 river run through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "number of state that colorado river traverses", "idx": "train_geo_nat-136", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "what rivers flow through the state with the largest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) )", "variables": {}, "can": "river that traverses state that has the largest population", "idx": "train_geo_nat-137", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) )"}
{"nl": "how many people are there in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "population of california", "idx": "train_geo_nat-138", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.san_jose"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-139", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california", "idx": "train_geo_nat-140", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "give me the longest river that passes through the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the largest length", "idx": "train_geo_nat-141", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.rhode_island"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-142", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "how long is river0 ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.rio_grande"}, "can": "length of colorado river", "idx": "train_geo_nat-143", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "what state which the river0 runs through has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses and that has the largest population", "idx": "train_geo_nat-144", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.wisconsin"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-145", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "give me the cities in country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city", "idx": "train_geo_nat-146", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) )"}
{"nl": "what is the largest state that borders the state with the highest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that borders state that has the largest population and that has the largest area", "idx": "train_geo_nat-147", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the highest point in each state whose lowest point is sea level ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string = ) ( number 0 length ) ) ) ( string high_point_state_place ) ) )", "variables": {}, "can": "high point of state whose low point is place whose elevation is 0", "idx": "train_geo_nat-148", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string = ) ( number 0 length ) ) ) ( string high_point_state_place ) ) )"}
{"nl": "how many people live in the capital of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.georgia"}, "can": "population of city that is capital of california", "idx": "train_geo_nat-149", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) ( string population_city_count ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.idaho"}, "can": "population of california", "idx": "train_geo_nat-150", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the smallest city in the largest state ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string min ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is contained by state that has the largest area and that has the smallest population", "idx": "train_geo_nat-151", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "what state borders most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that borders the most number of state", "idx": "train_geo_nat-152", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what is the biggest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.illinois"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-153", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "how many cities are there in the country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of city", "idx": "train_geo_nat-154", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )"}
{"nl": "what are the rivers in the state of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that traverses california", "idx": "train_geo_nat-155", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.washington"}, "can": "population of california", "idx": "train_geo_nat-156", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "state that borders california", "idx": "train_geo_nat-157", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "name all the rivers in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "river that traverses california", "idx": "train_geo_nat-158", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "which states does the longest river cross ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "variables": {}, "can": "state that river that has the largest length traverses", "idx": "train_geo_nat-159", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )"}
{"nl": "what state has the smallest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "train_geo_nat-160", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "what is the city with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) )", "variables": {}, "can": "city that has the smallest population", "idx": "train_geo_nat-161", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "how many states have cities or towns named name0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )", "variables": {"name0": "fb:en.name.springfield"}, "can": "number of state that city that is named sacramento is contained by", "idx": "train_geo_nat-162", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )"}
{"nl": "what river runs through the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "river that traverses the most number of state", "idx": "train_geo_nat-163", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "how many major cities are in states bordering state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.nebraska"}, "can": "number of city that is major and that is contained by state that borders california", "idx": "train_geo_nat-164", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )"}
{"nl": "how many rivers in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.washington"}, "can": "number of river that traverses california", "idx": "train_geo_nat-165", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what state has no rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that river not traverses", "idx": "train_geo_nat-166", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.minnesota"}, "can": "population of california", "idx": "train_geo_nat-167", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-168", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the state with the largest density in country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest density", "idx": "train_geo_nat-169", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "which is the lowest point of the states that the river0 runs through ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) ( string min ) ( string elevation_place_length ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "place that is contained by state that colorado river traverses and that has the smallest elevation", "idx": "train_geo_nat-170", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) ( string min ) ( string elevation_place_length ) ) )"}
{"nl": "what is the biggest state in continental country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest area", "idx": "train_geo_nat-171", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the average population per square km in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "density of california", "idx": "train_geo_nat-172", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )"}
{"nl": "which states border the longest river in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that river that has the largest length borders", "idx": "train_geo_nat-173", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )"}
{"nl": "what is the population in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boston_ma"}, "can": "population of sacramento", "idx": "train_geo_nat-174", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what states have no bordering state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that not borders state", "idx": "train_geo_nat-175", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what state has the city name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.flint"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-176", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what can you tell me about the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "population of california", "idx": "train_geo_nat-177", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "how many states have a city named name0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )", "variables": {"name0": "fb:en.name.springfield"}, "can": "number of state that city that is named sacramento is contained by", "idx": "train_geo_nat-178", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )"}
{"nl": "what is the most populated state bordering state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.oklahoma"}, "can": "state that borders california and that has the largest population", "idx": "train_geo_nat-179", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.austin_tx", "state0": "fb:en.state.texas"}, "can": "population of sacramento", "idx": "train_geo_nat-180", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the shortest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "river that traverses california and that has the smallest length", "idx": "train_geo_nat-181", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what rivers flow through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "river that traverses california", "idx": "train_geo_nat-182", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the smallest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.arkansas"}, "can": "city that is contained by california and that has the smallest population", "idx": "train_geo_nat-183", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "state that borders california", "idx": "train_geo_nat-184", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the capital of the state that borders the state that borders state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of state that borders state that borders california", "idx": "train_geo_nat-185", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )"}
{"nl": "how many rivers does state0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "number of river that traverses california", "idx": "train_geo_nat-186", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the capital of the state that borders the most states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) )", "variables": {}, "can": "city that is capital of state that borders the most number of state", "idx": "train_geo_nat-187", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) )"}
{"nl": "what is the lowest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "place that is low point of california", "idx": "train_geo_nat-188", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what rivers are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.nevada"}, "can": "river that traverses california", "idx": "train_geo_nat-189", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what state has the shortest river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) )", "variables": {}, "can": "state that river that has the smallest length traverses", "idx": "train_geo_nat-190", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) )"}
{"nl": "what rivers flow through states that state0 borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "river that traverses state that borders california", "idx": "train_geo_nat-191", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "which capitals are in the states that border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of state that borders california", "idx": "train_geo_nat-192", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.vermont"}, "can": "city that is capital of california", "idx": "train_geo_nat-193", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.washington"}, "can": "city that is capital of california", "idx": "train_geo_nat-194", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "place that is high point of california", "idx": "train_geo_nat-195", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "of the states washed by the river0 river which has the lowest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) ( string min ) ( string elevation_place_length ) ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that place that is contained by state that colorado river traverses and that has the smallest elevation is contained by", "idx": "train_geo_nat-196", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) ( string min ) ( string elevation_place_length ) ) ) )"}
{"nl": "where is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "place that is high point of california", "idx": "train_geo_nat-197", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "population of california", "idx": "train_geo_nat-198", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what states border states that border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "state that borders state that borders california", "idx": "train_geo_nat-199", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "through which states does the river0 run ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-200", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "how many states does the river0 river flow through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "number of state that colorado river traverses", "idx": "train_geo_nat-201", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "how many states border state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "number of state that borders california", "idx": "train_geo_nat-202", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "how many rivers do not traverse the state with the capital name0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) ) )", "variables": {"name0": "fb:en.name.albany"}, "can": "number of river that not traverses state whose capital is city that is named sacramento", "idx": "train_geo_nat-203", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) ) )"}
{"nl": "what state is name0 the capital of ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "state whose capital is city that is named sacramento", "idx": "train_geo_nat-204", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the lowest point of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string low_point_state_place ) ) )", "variables": {}, "can": "low point of state that has the largest area", "idx": "train_geo_nat-205", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string low_point_state_place ) ) )"}
{"nl": "what is the capital of the largest state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )", "variables": {}, "can": "city that is capital of state that has the largest area", "idx": "train_geo_nat-206", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what is the lowest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.louisiana"}, "can": "place that is low point of california", "idx": "train_geo_nat-207", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-208", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "state the state with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the largest area", "idx": "train_geo_nat-209", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what state has the city with the most population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )", "variables": {}, "can": "state that city that has the largest population is contained by", "idx": "train_geo_nat-210", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boston_ma", "state0": "fb:en.state.massachusetts"}, "can": "population of sacramento", "idx": "train_geo_nat-211", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.wisconsin"}, "can": "state that borders california", "idx": "train_geo_nat-212", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many states are there in country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of state", "idx": "train_geo_nat-213", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "place that is high point of california", "idx": "train_geo_nat-214", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "how many states border the river0 river ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "number of state that colorado river borders", "idx": "train_geo_nat-215", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "what state borders state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "state that borders california", "idx": "train_geo_nat-216", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the shortest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that traverses california and that has the smallest length", "idx": "train_geo_nat-217", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "how big is state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.north_dakota"}, "can": "area of california", "idx": "train_geo_nat-218", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what states are next to state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california", "idx": "train_geo_nat-219", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "state that borders california", "idx": "train_geo_nat-220", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-221", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what are the rivers in the state of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.indiana"}, "can": "river that traverses california", "idx": "train_geo_nat-222", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "city that is contained by california", "idx": "train_geo_nat-223", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "give me the cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.virginia"}, "can": "city that is contained by california", "idx": "train_geo_nat-224", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the lowest point of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "place that is low point of california", "idx": "train_geo_nat-225", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what state has the capital city0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.salem_or"}, "can": "state whose capital is sacramento", "idx": "train_geo_nat-226", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )"}
{"nl": "what is the shortest river ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "variables": {}, "can": "river that has the smallest length", "idx": "train_geo_nat-227", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "how long is the river0 river ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.rio_grande"}, "can": "length of colorado river", "idx": "train_geo_nat-228", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "name the longest river in country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the largest length", "idx": "train_geo_nat-229", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what river traverses the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "river that traverses the most number of state", "idx": "train_geo_nat-230", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.arizona"}, "can": "population of california", "idx": "train_geo_nat-231", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the highest elevation in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "place that is high point of california", "idx": "train_geo_nat-232", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-233", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the biggest state ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the largest area", "idx": "train_geo_nat-234", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.springfield_oh", "state0": "fb:en.state.ohio"}, "can": "population of sacramento", "idx": "train_geo_nat-235", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the smallest state that borders state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california and that has the smallest area", "idx": "train_geo_nat-236", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "give me all the states of country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state", "idx": "train_geo_nat-237", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )"}
{"nl": "which state is the city city0 located in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.denver_co"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-238", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what are the capital cities of the states which border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is a capital and that is contained by state that borders california", "idx": "train_geo_nat-239", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string capital_city ) ) )"}
{"nl": "what states does the river0 river go through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.ohio"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-240", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the area of the state with the capital name0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ( string area_state_length^2 ) ) )", "variables": {"name0": "fb:en.name.albany"}, "can": "area of state whose capital is city that is named sacramento", "idx": "train_geo_nat-241", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ( string area_state_length^2 ) ) )"}
{"nl": "which states border no other states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that not borders state", "idx": "train_geo_nat-242", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what rivers run through city0 state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.austin_tx", "state0": "fb:en.state.texas"}, "can": "river that traverses sacramento", "idx": "train_geo_nat-243", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) city0 ) )"}
{"nl": "how many rivers are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "number of river that traverses california", "idx": "train_geo_nat-244", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the biggest city in country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that has the largest population", "idx": "train_geo_nat-245", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "give me the cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california", "idx": "train_geo_nat-246", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what state is city0 in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.boston_ma"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-247", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what is the most populated capital in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-248", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what state has the smallest capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string population_city_count ) ) ) )", "variables": {}, "can": "state that city that is a capital and that has the smallest population is contained by", "idx": "train_geo_nat-249", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string population_city_count ) ) ) )"}
{"nl": "what city has the least population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) )", "variables": {}, "can": "city that has the smallest population", "idx": "train_geo_nat-250", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "which state has the least population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "train_geo_nat-251", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "how high is the highest point in the largest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string elevation_place_length ) ) )", "variables": {}, "can": "elevation of place that is high point of state that has the largest area", "idx": "train_geo_nat-252", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string elevation_place_length ) ) )"}
{"nl": "how many states border state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "number of state that borders california", "idx": "train_geo_nat-253", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-254", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the largest city of state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.kansas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-255", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "how many states does the river0 run through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "number of state that colorado river traverses", "idx": "train_geo_nat-256", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "how many cities does the country0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of city", "idx": "train_geo_nat-257", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )"}
{"nl": "in which state is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.rochester"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-258", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the capital of the state state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of california", "idx": "train_geo_nat-259", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what major rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.illinois"}, "can": "river that is major and that traverses california", "idx": "train_geo_nat-260", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string major_river ) ) )"}
{"nl": "what river runs through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.virginia"}, "can": "river that traverses california", "idx": "train_geo_nat-261", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "how many major cities are there ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ) )", "variables": {}, "can": "number of city that is major", "idx": "train_geo_nat-262", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ) )"}
{"nl": "how many states border the state that borders the most states ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) ) )", "variables": {}, "can": "number of state that borders state that borders the most number of state", "idx": "train_geo_nat-263", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) ) )"}
{"nl": "name the rivers in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.arkansas"}, "can": "river that traverses california", "idx": "train_geo_nat-264", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.maine"}, "can": "city that is capital of california", "idx": "train_geo_nat-265", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "which states have points that are higher than the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that place whose elevation is larger than elevation of place that is high point of california is contained by", "idx": "train_geo_nat-266", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what is the longest river flowing through state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "river that traverses california and that has the largest length", "idx": "train_geo_nat-267", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what state has the most rivers running through it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that the most number of river traverses", "idx": "train_geo_nat-268", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.south_dakota"}, "can": "state that borders california", "idx": "train_geo_nat-269", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "give me the cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.virginia"}, "can": "city that is contained by california", "idx": "train_geo_nat-270", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what are the lakes in states bordering state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "lake that is contained by state that borders california", "idx": "train_geo_nat-271", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the elevation of the highest point in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "elevation of place that has the largest elevation", "idx": "train_geo_nat-272", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )"}
{"nl": "how many cities does state0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "number of city that is contained by california", "idx": "train_geo_nat-273", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "what are the populations of the states through which the river0 run ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-274", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "what are the states that border the state with the greatest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) )", "variables": {}, "can": "state that borders state that has the largest population", "idx": "train_geo_nat-275", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) )"}
{"nl": "number of citizens in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boulder_co"}, "can": "population of sacramento", "idx": "train_geo_nat-276", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the size of the capital of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "population of city that is capital of california", "idx": "train_geo_nat-277", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) ( string population_city_count ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.idaho"}, "can": "area of california", "idx": "train_geo_nat-278", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the population of the largest state that borders state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "population of state that borders california and that has the largest area", "idx": "train_geo_nat-279", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )"}
{"nl": "which state border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.kentucky"}, "can": "state that borders california", "idx": "train_geo_nat-280", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.illinois"}, "can": "population of california", "idx": "train_geo_nat-281", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what states in the country0 have a city of name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"country0": "fb:en.country.usa", "name0": "fb:en.name.springfield"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-282", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the population of city0 dc ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.washington_dc"}, "can": "population of sacramento", "idx": "train_geo_nat-283", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "how long is the river0 ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "length of colorado river", "idx": "train_geo_nat-284", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "area of california", "idx": "train_geo_nat-285", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the shortest river in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the smallest length", "idx": "train_geo_nat-286", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what is the shortest river in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the smallest length", "idx": "train_geo_nat-287", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what states does the river0 river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-288", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the largest of the state that the river0 runs through ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"river0": "fb:en.river.rio_grande"}, "can": "state that colorado river traverses and that has the largest area", "idx": "train_geo_nat-289", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what state is name0 the capital of ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.columbus"}, "can": "state whose capital is city that is named sacramento", "idx": "train_geo_nat-290", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the adjacent state of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "state that borders california", "idx": "train_geo_nat-291", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.arizona"}, "can": "river that traverses california", "idx": "train_geo_nat-292", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "through which states does the river0 flow ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-293", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what state contains the highest point in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-294", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.delaware"}, "can": "state that borders california", "idx": "train_geo_nat-295", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "population of california", "idx": "train_geo_nat-296", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the average population of the country0 by state ?", "lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "density of usa", "idx": "train_geo_nat-297", "canonical_lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) )"}
{"nl": "what is the largest state traversed by the river0 river ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses and that has the largest area", "idx": "train_geo_nat-298", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the population density of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "density of california", "idx": "train_geo_nat-299", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )"}
{"nl": "what is the shortest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "river that traverses california and that has the smallest length", "idx": "train_geo_nat-300", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "how many major cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "number of city that is major and that is contained by california", "idx": "train_geo_nat-301", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "show me all the major lakes in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "lake that is major", "idx": "train_geo_nat-302", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) )"}
{"nl": "what is the area of the largest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "area of state that has the largest area", "idx": "train_geo_nat-303", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the smallest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.washington"}, "can": "city that is contained by california and that has the smallest population", "idx": "train_geo_nat-304", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "what is the population density in the state with capital city0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ( string density_state_count ) ) )", "variables": {"city0": "fb:en.city.austin_tx"}, "can": "density of state whose capital is sacramento", "idx": "train_geo_nat-305", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ( string density_state_count ) ) )"}
{"nl": "what state is the biggest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the largest area", "idx": "train_geo_nat-306", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the number of neighboring states for state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.kentucky"}, "can": "number of state that borders california", "idx": "train_geo_nat-307", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "which states do river0 river flow through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-308", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.dallas_tx"}, "can": "population of sacramento", "idx": "train_geo_nat-309", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the capital of the state with the highest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) )", "variables": {}, "can": "city that is capital of state that place that has the largest elevation is contained by", "idx": "train_geo_nat-310", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-311", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "which states border states through which the river0 traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that borders state that colorado river traverses", "idx": "train_geo_nat-312", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.nebraska"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-313", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the longest river ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {}, "can": "river that has the largest length", "idx": "train_geo_nat-314", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "how many cities are there in country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of city", "idx": "train_geo_nat-315", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )"}
{"nl": "what is the highest point in the state with the most rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) ) )", "variables": {}, "can": "place that is high point of state that the most number of river traverses", "idx": "train_geo_nat-316", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.new_hampshire"}, "can": "population of california", "idx": "train_geo_nat-317", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "how many people live in city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.austin_tx", "state0": "fb:en.state.texas"}, "can": "population of sacramento", "idx": "train_geo_nat-318", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the lowest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "place that is low point of california", "idx": "train_geo_nat-319", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the population density of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "density of california", "idx": "train_geo_nat-320", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )"}
{"nl": "where is the lowest point in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "place that has the smallest elevation", "idx": "train_geo_nat-321", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )"}
{"nl": "what city has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that has the largest population", "idx": "train_geo_nat-322", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the shortest river in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the smallest length", "idx": "train_geo_nat-323", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what are the highest points of states surrounding state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string elevation_place_length ) ) )", "variables": {"state0": "fb:en.state.mississippi"}, "can": "place that is contained by state that borders california and that has the largest elevation", "idx": "train_geo_nat-324", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string elevation_place_length ) ) )"}
{"nl": "which states have points higher than the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "state that place whose elevation is larger than elevation of place that is high point of california is contained by", "idx": "train_geo_nat-325", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what is the longest river that does not run through state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that not traverses california and that has the largest length", "idx": "train_geo_nat-326", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "which states adjoin state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "state that borders california", "idx": "train_geo_nat-327", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many major cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "number of city that is major and that is contained by california", "idx": "train_geo_nat-328", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "how many states border the largest state ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ) )", "variables": {}, "can": "number of state that borders state that has the largest area", "idx": "train_geo_nat-329", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ) )"}
{"nl": "what is the most populous city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-330", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what are the states that the river0 run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.potomac"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-331", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "could you tell me what is the highest point in the state of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "place that is high point of california", "idx": "train_geo_nat-332", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boulder_co"}, "can": "population of sacramento", "idx": "train_geo_nat-333", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.delaware"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-334", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the lowest point in the state of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "place that is low point of california", "idx": "train_geo_nat-335", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what state has the highest elevation ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-336", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what state has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the smallest population", "idx": "train_geo_nat-337", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) )"}
{"nl": "which rivers flow through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "river that traverses california", "idx": "train_geo_nat-338", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.austin_tx"}, "can": "population of sacramento", "idx": "train_geo_nat-339", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what are the major lakes in country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "lake that is major", "idx": "train_geo_nat-340", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) )"}
{"nl": "what is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-341", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "how many cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "number of city that is contained by california", "idx": "train_geo_nat-342", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "what are the major cities of the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is major", "idx": "train_geo_nat-343", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "population of california", "idx": "train_geo_nat-344", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what are the states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )", "variables": {}, "can": "state", "idx": "train_geo_nat-345", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )"}
{"nl": "what is the population of the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.wisconsin"}, "can": "population of city that is major and that is contained by california", "idx": "train_geo_nat-346", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ( string population_city_count ) ) )"}
{"nl": "how many big cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "number of city that is major and that is contained by california", "idx": "train_geo_nat-347", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "city0 is the capital of which state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.sacramento_ca"}, "can": "state whose capital is sacramento", "idx": "train_geo_nat-348", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.north_carolina"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-349", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.arizona"}, "can": "state that borders california", "idx": "train_geo_nat-350", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "place that is high point of california", "idx": "train_geo_nat-351", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the population density of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )", "variables": {"state0": "fb:en.state.south_dakota"}, "can": "density of california", "idx": "train_geo_nat-352", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string density_state_count ) ) )"}
{"nl": "what is the height of the highest point in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "elevation of place that has the largest elevation", "idx": "train_geo_nat-353", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.south_dakota"}, "can": "population of california", "idx": "train_geo_nat-354", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.kansas"}, "can": "place that is high point of california", "idx": "train_geo_nat-355", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what state has the city with the largest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )", "variables": {}, "can": "state that city that has the largest population is contained by", "idx": "train_geo_nat-356", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "population of california", "idx": "train_geo_nat-357", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "how big is state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "area of california", "idx": "train_geo_nat-358", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.portland_me", "state0": "fb:en.state.maine"}, "can": "population of sacramento", "idx": "train_geo_nat-359", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.seattle_wa"}, "can": "population of sacramento", "idx": "train_geo_nat-360", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "place that is high point of california", "idx": "train_geo_nat-361", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what states border the states with the most cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) ) )", "variables": {}, "can": "state that borders state that the most number of city is contained by", "idx": "train_geo_nat-362", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "population of california", "idx": "train_geo_nat-363", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "which state borders state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "state that borders california", "idx": "train_geo_nat-364", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "can you tell me the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of california", "idx": "train_geo_nat-365", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the state with the largest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "train_geo_nat-366", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "what is the lowest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.wisconsin"}, "can": "place that is low point of california", "idx": "train_geo_nat-367", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.rhode_island"}, "can": "population of california", "idx": "train_geo_nat-368", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the population of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "variables": {}, "can": "population of state that has the largest area", "idx": "train_geo_nat-369", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )"}
{"nl": "what state is city0 in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.pittsburgh_pa"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-370", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "state that borders california", "idx": "train_geo_nat-371", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what state is city0 located in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.des_moines_ia"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-372", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what are the states through which the longest river runs ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "variables": {}, "can": "state that river that has the largest length traverses", "idx": "train_geo_nat-373", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )"}
{"nl": "what is the largest state that borders state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "state that borders california and that has the largest area", "idx": "train_geo_nat-374", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "state that borders california", "idx": "train_geo_nat-375", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.scotts_valley"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-376", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "how many people stay in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.utah"}, "can": "population of california", "idx": "train_geo_nat-377", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "which state is the largest city in state0 in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "state that city that is contained by california and that has the largest population is contained by", "idx": "train_geo_nat-378", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) ) )"}
{"nl": "what state has the greatest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "train_geo_nat-379", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "how many states does state0 border ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "number of state that borders california", "idx": "train_geo_nat-380", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "how many cities named name0 are there in the country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )", "variables": {"name0": "fb:en.name.austin", "country0": "fb:en.country.usa"}, "can": "number of state that city that is named sacramento is contained by", "idx": "train_geo_nat-381", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )"}
{"nl": "which state has the smallest area that borders state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california and that has the smallest area", "idx": "train_geo_nat-382", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "how high are the highest points of all the states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )", "variables": {}, "can": "elevation of place that has the largest elevation", "idx": "train_geo_nat-383", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )"}
{"nl": "which is the shortest river ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "variables": {}, "can": "river that has the smallest length", "idx": "train_geo_nat-384", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )"}
{"nl": "what state has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the largest population", "idx": "train_geo_nat-385", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "place that is high point of california", "idx": "train_geo_nat-386", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "how many rivers are in the state with the largest population ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )", "variables": {}, "can": "number of river that traverses state that has the largest population", "idx": "train_geo_nat-387", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )"}
{"nl": "what is the largest state capital in population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-388", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what capital has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-389", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "name all the lakes of country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "lake", "idx": "train_geo_nat-390", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "population of california", "idx": "train_geo_nat-391", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what is the population of the capital of the largest state through which the river0 runs ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) ) ( string population_city_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of city that is a capital and that is contained by state that colorado river traverses and that has the largest area", "idx": "train_geo_nat-392", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string max ) ( string area_state_length^2 ) ) ) ( string capital_city ) ) ( string population_city_count ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.indianapolis"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-393", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what rivers flow through states that border the state with the largest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )", "variables": {}, "can": "river that traverses state that borders state that has the largest population", "idx": "train_geo_nat-394", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.georgia"}, "can": "state that borders california", "idx": "train_geo_nat-395", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "which state has the largest city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )", "variables": {}, "can": "state that city that has the largest population is contained by", "idx": "train_geo_nat-396", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )"}
{"nl": "what is the capital city of the largest state in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is capital of state that has the largest area", "idx": "train_geo_nat-397", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what are the major rivers in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that is major", "idx": "train_geo_nat-398", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) )"}
{"nl": "what are the cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.california"}, "can": "city that is contained by california", "idx": "train_geo_nat-399", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "city that is capital of california", "idx": "train_geo_nat-400", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "give me the largest state ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the largest area", "idx": "train_geo_nat-401", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what rivers are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.utah"}, "can": "river that traverses california", "idx": "train_geo_nat-402", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what rivers run through the states that border the state with the capital city0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) ) )", "variables": {"city0": "fb:en.city.atlanta_ga"}, "can": "river that traverses state that borders state whose capital is sacramento", "idx": "train_geo_nat-403", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) ) )"}
{"nl": "what is the area of the states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "area of state", "idx": "train_geo_nat-404", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) )"}
{"nl": "what cities in state0 have the highest number of citizens ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-405", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the population density of the state with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )", "variables": {}, "can": "density of state that has the smallest area", "idx": "train_geo_nat-406", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )"}
{"nl": "which state has the highest peak in the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) ) )", "variables": {}, "can": "state that mountain that has the largest elevation is contained by", "idx": "train_geo_nat-407", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) ) )"}
{"nl": "what is the largest state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest area", "idx": "train_geo_nat-408", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what are major rivers in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that is major and that traverses california", "idx": "train_geo_nat-409", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string major_river ) ) )"}
{"nl": "what is the population of the capital of the largest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string population_city_count ) ) )", "variables": {}, "can": "population of city that is capital of state that has the largest area", "idx": "train_geo_nat-410", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ) ( string population_city_count ) ) )"}
{"nl": "what states neighbor state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.maine"}, "can": "state that borders california", "idx": "train_geo_nat-411", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what states have cities named name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-412", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the largest state bordering state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california and that has the largest area", "idx": "train_geo_nat-413", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "how many citizens in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boulder_co"}, "can": "population of sacramento", "idx": "train_geo_nat-414", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "which state has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "train_geo_nat-415", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.springfield"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-416", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what rivers run through the state with the lowest point in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that traverses state that place that has the smallest elevation is contained by", "idx": "train_geo_nat-417", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "what are the major cities of the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is major", "idx": "train_geo_nat-418", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.maine"}, "can": "area of california", "idx": "train_geo_nat-419", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "which state contains most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that the most number of river traverses", "idx": "train_geo_nat-420", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "how many people in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boulder_co"}, "can": "population of sacramento", "idx": "train_geo_nat-421", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "population of california", "idx": "train_geo_nat-422", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "how many states are in the country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of state", "idx": "train_geo_nat-423", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what is the length of the longest river in the country0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "length of river that has the largest length", "idx": "train_geo_nat-424", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ( string len_river_length ) ) )"}
{"nl": "what is the state with the lowest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the smallest population", "idx": "train_geo_nat-425", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) )"}
{"nl": "what river flows through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that traverses california", "idx": "train_geo_nat-426", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what river runs through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.illinois"}, "can": "river that traverses california", "idx": "train_geo_nat-427", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the highest point of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string high_point_state_place ) ) )", "variables": {}, "can": "high point of state that has the largest area", "idx": "train_geo_nat-428", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string high_point_state_place ) ) )"}
{"nl": "how high is place0 ?", "lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )", "variables": {"place0": "fb:en.place.guadalupe_peak"}, "can": "elevation of death valley", "idx": "train_geo_nat-429", "canonical_lf": "( call SW.listValue ( call SW.getProperty place0 ( string elevation_place_length ) ) )"}
{"nl": "name the 50 capitals in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that is a capital", "idx": "train_geo_nat-430", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.missouri"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-431", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "which states lie on the largest river in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that river that has the largest length traverses", "idx": "train_geo_nat-432", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )"}
{"nl": "what states border states that the river0 runs through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that borders state that colorado river traverses", "idx": "train_geo_nat-433", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "state that borders california", "idx": "train_geo_nat-434", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how big is state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.massachusetts"}, "can": "area of california", "idx": "train_geo_nat-435", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the largest city in a state that borders state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by state that borders california and that has the largest population", "idx": "train_geo_nat-436", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "which state has the sparsest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "train_geo_nat-437", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.houston"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-438", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what is the biggest city in the smallest state ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is contained by state that has the smallest area and that has the largest population", "idx": "train_geo_nat-439", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the smallest state bordering state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "state that borders california and that has the smallest area", "idx": "train_geo_nat-440", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.springfield_mo", "state0": "fb:en.state.missouri"}, "can": "population of sacramento", "idx": "train_geo_nat-441", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is largest capital ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "variables": {}, "can": "city that is a capital and that has the largest population", "idx": "train_geo_nat-442", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what are the rivers of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "river that traverses california", "idx": "train_geo_nat-443", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the largest state in country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest area", "idx": "train_geo_nat-444", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is capital of california", "idx": "train_geo_nat-445", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the highest point in the state with capital city0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) )", "variables": {"city0": "fb:en.city.des_moines_ia"}, "can": "place that is high point of state whose capital is sacramento", "idx": "train_geo_nat-446", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) ) )"}
{"nl": "in which state does the highest point in country0 exist ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-447", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what is the smallest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "city that is contained by california and that has the smallest population", "idx": "train_geo_nat-448", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "what is the size of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "area of california", "idx": "train_geo_nat-449", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what state has the highest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the largest population", "idx": "train_geo_nat-450", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "how many states border state0 and border state1 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state1 ) ( string next_to_state_state ) ( string = ) state1 ) ) )", "variables": {"state0": "fb:en.state.new_mexico", "state1": "fb:en.state.new_mexico"}, "can": "number of state that borders california and that borders california", "idx": "train_geo_nat-451", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state1 ) ( string next_to_state_state ) ( string = ) state1 ) ) )"}
{"nl": "how many rivers are there in country0 ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "number of river", "idx": "train_geo_nat-452", "canonical_lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "how many citizens in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "population of california", "idx": "train_geo_nat-453", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "which states does the river0 river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-454", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "city that is capital of california", "idx": "train_geo_nat-455", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the longest river in the smallest state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that traverses state that has the smallest area and that has the largest length", "idx": "train_geo_nat-456", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what states have a capital that is the highest point in the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ) ) )", "variables": {}, "can": "state whose high point is place that is contained by city that is a capital", "idx": "train_geo_nat-457", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ) ) )"}
{"nl": "what is the state with the highest elevation in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that place that has the largest elevation is contained by", "idx": "train_geo_nat-458", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.kentucky"}, "can": "state that borders california", "idx": "train_geo_nat-459", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.arizona"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-460", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the most populous state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest population", "idx": "train_geo_nat-461", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what is the lowest point in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "place that is low point of california", "idx": "train_geo_nat-462", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "how long is the river0 river ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "length of colorado river", "idx": "train_geo_nat-463", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "state that borders california", "idx": "train_geo_nat-464", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how big is the city of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.new_york_ny"}, "can": "population of sacramento", "idx": "train_geo_nat-465", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what state has the most people ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "variables": {}, "can": "state that has the largest population", "idx": "train_geo_nat-466", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )"}
{"nl": "what is the largest city in states that border state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "city that is contained by state that borders california and that has the largest population", "idx": "train_geo_nat-467", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the biggest state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the largest area", "idx": "train_geo_nat-468", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what rivers are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_mexico"}, "can": "river that traverses california", "idx": "train_geo_nat-469", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what are the populations of the states through which the river0 river runs ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-470", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "what states have a city named name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-471", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "which river runs through the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "river that traverses the most number of state", "idx": "train_geo_nat-472", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "what state has the largest city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )", "variables": {}, "can": "state that city that has the largest population is contained by", "idx": "train_geo_nat-473", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )"}
{"nl": "how many major rivers cross state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "number of river that is major and that traverses california", "idx": "train_geo_nat-474", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string major_river ) ) ) )"}
{"nl": "what are the neighboring states for state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "state that borders california", "idx": "train_geo_nat-475", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many cities are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.louisiana"}, "can": "number of city that is contained by california", "idx": "train_geo_nat-476", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "where is place0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )", "variables": {"place0": "fb:en.place.mount_whitney"}, "can": "state that death valley is contained by", "idx": "train_geo_nat-477", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.sacramento_ca"}, "can": "population of sacramento", "idx": "train_geo_nat-478", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "where is the lowest spot in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "place that is low point of california", "idx": "train_geo_nat-479", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) state0 ) )"}
{"nl": "how many major cities are there in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "number of city that is major and that is contained by california", "idx": "train_geo_nat-480", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) ) )"}
{"nl": "where is state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.massachusetts"}, "can": "country that california is contained by", "idx": "train_geo_nat-481", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) state0 ) )"}
{"nl": "what state0 city has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-482", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what states does the river0 run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-483", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "how many rivers are in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.new_york"}, "can": "number of river that traverses california", "idx": "train_geo_nat-484", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the tallest mountain in america ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) )", "variables": {}, "can": "mountain that has the largest elevation", "idx": "train_geo_nat-485", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) )"}
{"nl": "how high is the highest point of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )", "variables": {"state0": "fb:en.state.louisiana"}, "can": "elevation of place that is high point of california", "idx": "train_geo_nat-486", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )"}
{"nl": "states bordering state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "state that borders california", "idx": "train_geo_nat-487", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many square kilometers in the country0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "total area of state", "idx": "train_geo_nat-488", "canonical_lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )"}
{"nl": "what is the lowest point of the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "place that has the smallest elevation", "idx": "train_geo_nat-489", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )"}
{"nl": "what is the highest mountain in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "mountain that is contained by california and that has the largest elevation", "idx": "train_geo_nat-490", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) )"}
{"nl": "what is the population of city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.austin_tx"}, "can": "population of sacramento", "idx": "train_geo_nat-491", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the highest point in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "place that has the largest elevation", "idx": "train_geo_nat-492", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )"}
{"nl": "what is the biggest city in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that has the largest population", "idx": "train_geo_nat-493", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what state has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "state that has the smallest area", "idx": "train_geo_nat-494", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "what state has the least population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "train_geo_nat-495", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "how many rivers are there in state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "number of river that traverses california", "idx": "train_geo_nat-496", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what are the populations of the states through which the river0 runs ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "population of state that colorado river traverses", "idx": "train_geo_nat-497", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ( string population_state_count ) ) )"}
{"nl": "what state has the largest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "train_geo_nat-498", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "how many rivers in state0 are longer than the river0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ( string > ) ( call SW.getProperty river0 ( string len_river_length ) ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas", "river0": "fb:en.river.red"}, "can": "number of river whose length is larger than length of colorado river and that traverses california", "idx": "train_geo_nat-499", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string len_river_length ) ( string > ) ( call SW.getProperty river0 ( string len_river_length ) ) ) ) )"}
{"nl": "what is the capital of the state0 state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "city that is capital of california", "idx": "train_geo_nat-500", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "in what state is place0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )", "variables": {"place0": "fb:en.place.mount_mckinley"}, "can": "state that death valley is contained by", "idx": "train_geo_nat-501", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )"}
{"nl": "what is the smallest state in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "state that has the smallest area", "idx": "train_geo_nat-502", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the area of the smallest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "area of state that has the smallest area", "idx": "train_geo_nat-503", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the capital of the state with the highest elevation ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) )", "variables": {}, "can": "city that is capital of state that place that has the largest elevation is contained by", "idx": "train_geo_nat-504", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) ) )"}
{"nl": "which state is city0 in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.kalamazoo_mi"}, "can": "state that sacramento is contained by", "idx": "train_geo_nat-505", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) city0 ) )"}
{"nl": "what rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.maine"}, "can": "river that traverses california", "idx": "train_geo_nat-506", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the name of the state with the lowest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) )", "variables": {}, "can": "state that place that has the smallest elevation is contained by", "idx": "train_geo_nat-507", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) )"}
{"nl": "what states does the river0 river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.missouri"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-508", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "how many inhabitants does city0 have ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.montgomery_al"}, "can": "population of sacramento", "idx": "train_geo_nat-509", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "show major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "city that is major and that is contained by california", "idx": "train_geo_nat-510", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what states capital is city0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )", "variables": {"city0": "fb:en.city.dover_de"}, "can": "state whose capital is sacramento", "idx": "train_geo_nat-511", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) city0 ) )"}
{"nl": "how high is the highest point in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "elevation of place that is high point of california", "idx": "train_geo_nat-512", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )"}
{"nl": "how many rivers run through state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "number of river that traverses california", "idx": "train_geo_nat-513", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the population density of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string density_state_count ) ) )", "variables": {}, "can": "density of state that has the smallest population", "idx": "train_geo_nat-514", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string density_state_count ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_hampshire"}, "can": "state that borders california", "idx": "train_geo_nat-515", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many states border at least one other state ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) )", "variables": {}, "can": "number of state that borders state", "idx": "train_geo_nat-516", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) ) )"}
{"nl": "what is the city in state0 with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-517", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.south_carolina"}, "can": "area of california", "idx": "train_geo_nat-518", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what cities are located in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "city that is contained by california", "idx": "train_geo_nat-519", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what is the biggest city in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "city that has the largest population", "idx": "train_geo_nat-520", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "area of california", "idx": "train_geo_nat-521", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the state with the lowest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) )", "variables": {}, "can": "state that place that has the smallest elevation is contained by", "idx": "train_geo_nat-522", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) )"}
{"nl": "what is the largest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.alabama"}, "can": "city that is contained by california and that has the largest population", "idx": "train_geo_nat-523", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.georgia"}, "can": "city that is capital of california", "idx": "train_geo_nat-524", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "which states does the river0 river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-525", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "which rivers are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "river that traverses california", "idx": "train_geo_nat-526", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.west_virginia"}, "can": "river that traverses california", "idx": "train_geo_nat-527", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what rivers run through state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "river that traverses california", "idx": "train_geo_nat-528", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what is the population of the largest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "variables": {}, "can": "population of state that has the largest area", "idx": "train_geo_nat-529", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )"}
{"nl": "what states have towns named name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.springfield"}, "can": "state that city that is named sacramento is contained by", "idx": "train_geo_nat-530", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "which states does the river0 river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.missouri"}, "can": "state that colorado river traverses", "idx": "train_geo_nat-531", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "how many people live in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.montana"}, "can": "population of california", "idx": "train_geo_nat-532", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "how many people live in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.chicago_il"}, "can": "population of sacramento", "idx": "train_geo_nat-533", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what states border states that border states that border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "state that borders state that borders state that borders california", "idx": "train_geo_nat-534", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )"}
{"nl": "what is the area of state0 in square kilometers ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.maryland"}, "can": "area of california", "idx": "train_geo_nat-535", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what are the major cities in the states through which the major river in state0 runs ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.virginia"}, "can": "city that is major and that is contained by state that river that is major and that traverses california traverses", "idx": "train_geo_nat-536", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string major_river ) ) ) ) )"}
{"nl": "what states border states that border the state with the largest population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )", "variables": {}, "can": "state that borders state that borders state that has the largest population", "idx": "dev_geo_nat-0", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) ) )"}
{"nl": "how long is the river0 river ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.missouri"}, "can": "length of colorado river", "idx": "dev_geo_nat-1", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "what is the size of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "area of california", "idx": "dev_geo_nat-2", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "which states have a major city named name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "state that city that is major and that is named sacramento is contained by", "idx": "dev_geo_nat-3", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "what state has the highest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the largest density", "idx": "dev_geo_nat-4", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.oklahoma"}, "can": "city that is major and that is contained by california", "idx": "dev_geo_nat-5", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what state borders the least states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "variables": {}, "can": "state that borders the least number of state", "idx": "dev_geo_nat-6", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )"}
{"nl": "how many people live in the smallest state bordering state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "population of state that borders california and that has the smallest area", "idx": "dev_geo_nat-7", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string min ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )"}
{"nl": "what is capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "city that is capital of california", "idx": "dev_geo_nat-8", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "which state has the longest river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "variables": {}, "can": "state that river that has the largest length traverses", "idx": "dev_geo_nat-9", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )"}
{"nl": "how many people are there in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.iowa"}, "can": "population of california", "idx": "dev_geo_nat-10", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.kansas"}, "can": "city that is major and that is contained by california", "idx": "dev_geo_nat-11", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "which state has the most rivers running through it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "variables": {}, "can": "state that the most number of river traverses", "idx": "dev_geo_nat-12", "canonical_lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )"}
{"nl": "what states border states that border states that border states that border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders state that borders state that borders state that borders california", "idx": "dev_geo_nat-13", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) ) )"}
{"nl": "what is the area of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.california"}, "can": "area of california", "idx": "dev_geo_nat-14", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string area_state_length^2 ) ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.utah"}, "can": "city that is capital of california", "idx": "dev_geo_nat-15", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what is the capital of state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.new_hampshire"}, "can": "city that is capital of california", "idx": "dev_geo_nat-16", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) state0 ) )"}
{"nl": "what mountains are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "mountain that is contained by california", "idx": "dev_geo_nat-17", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) )"}
{"nl": "what is the height of the highest mountain in state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "elevation of mountain that is contained by california and that has the largest elevation", "idx": "dev_geo_nat-18", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) state0 ) ( string max ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) )"}
{"nl": "where is place0 located ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )", "variables": {"place0": "fb:en.place.mount_whitney"}, "can": "state that death valley is contained by", "idx": "dev_geo_nat-19", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) place0 ) )"}
{"nl": "what are the high points of states surrounding state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.mississippi"}, "can": "place that is high point of state that borders california", "idx": "dev_geo_nat-20", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what is the population of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )", "variables": {"state0": "fb:en.state.maine"}, "can": "population of california", "idx": "dev_geo_nat-21", "canonical_lf": "( call SW.listValue ( call SW.getProperty state0 ( string population_state_count ) ) )"}
{"nl": "give me the cities which are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "city that is contained by california", "idx": "dev_geo_nat-22", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "how many states have a city called name0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )", "variables": {"name0": "fb:en.name.rochester"}, "can": "number of state that city that is named sacramento is contained by", "idx": "dev_geo_nat-23", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )"}
{"nl": "what is the longest river in the country0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that has the largest length", "idx": "dev_geo_nat-24", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the population of city0 state0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.seattle_wa", "state0": "fb:en.state.washington"}, "can": "population of sacramento", "idx": "dev_geo_nat-25", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "how many states border state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )", "variables": {"state0": "fb:en.state.tennessee"}, "can": "number of state that borders california", "idx": "dev_geo_nat-26", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) )"}
{"nl": "what states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "state that borders california", "idx": "dev_geo_nat-27", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in the state with the largest population density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string population_state_count ) ) )", "variables": {}, "can": "population of state that has the largest density", "idx": "dev_geo_nat-28", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string population_state_count ) ) )"}
{"nl": "what is the longest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "river that traverses california and that has the largest length", "idx": "dev_geo_nat-29", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what rivers are in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.oregon"}, "can": "river that traverses california", "idx": "dev_geo_nat-30", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "what are the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "city that is major and that is contained by california", "idx": "dev_geo_nat-31", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "what states border the river0 river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "state that colorado river borders", "idx": "dev_geo_nat-32", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the longest river in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )", "variables": {"state0": "fb:en.state.pennsylvania"}, "can": "river that traverses california and that has the largest length", "idx": "dev_geo_nat-33", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) ( string max ) ( string len_river_length ) ) )"}
{"nl": "what is the smallest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.hawaii"}, "can": "city that is contained by california and that has the smallest population", "idx": "dev_geo_nat-34", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string min ) ( string population_city_count ) ) )"}
{"nl": "name the major lakes in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string loc_lake_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.michigan"}, "can": "lake that is major and that is contained by california", "idx": "dev_geo_nat-35", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string loc_lake_state ) ( string = ) state0 ) )"}
{"nl": "how high is the highest point of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )", "variables": {"state0": "fb:en.state.delaware"}, "can": "elevation of place that is high point of california", "idx": "dev_geo_nat-36", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )"}
{"nl": "what state that borders state0 is the largest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )", "variables": {"state0": "fb:en.state.texas"}, "can": "state that borders california and that has the largest area", "idx": "dev_geo_nat-37", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ( string max ) ( string area_state_length^2 ) ) )"}
{"nl": "what is the biggest city in state0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )", "variables": {"state0": "fb:en.state.wyoming"}, "can": "city that is contained by california and that has the largest population", "idx": "dev_geo_nat-38", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) state0 ) ( string max ) ( string population_city_count ) ) )"}
{"nl": "what states are next to the state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.mississippi"}, "can": "state that borders california", "idx": "dev_geo_nat-39", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "what is the river that cross over state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.ohio"}, "can": "river that traverses california", "idx": "dev_geo_nat-40", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) state0 ) )"}
{"nl": "which state has the river0 river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )", "variables": {"river0": "fb:en.river.red"}, "can": "state that colorado river traverses", "idx": "dev_geo_nat-41", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) )"}
{"nl": "what is the area of the state with the smallest population density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string area_state_length^2 ) ) )", "variables": {}, "can": "area of state that has the smallest density", "idx": "dev_geo_nat-42", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string area_state_length^2 ) ) )"}
{"nl": "how high is the highest point of state0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )", "variables": {"state0": "fb:en.state.florida"}, "can": "elevation of place that is high point of california", "idx": "dev_geo_nat-43", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) state0 ) ( string elevation_place_length ) ) )"}
{"nl": "how many states does the river0 river run through ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )", "variables": {"river0": "fb:en.river.colorado"}, "can": "number of state that colorado river traverses", "idx": "dev_geo_nat-44", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) river0 ) ) )"}
{"nl": "what state has the sparsest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "variables": {}, "can": "state that has the smallest density", "idx": "dev_geo_nat-45", "canonical_lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )"}
{"nl": "what are the names of the major cities in state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.illinois"}, "can": "city that is major and that is contained by california", "idx": "dev_geo_nat-46", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) state0 ) )"}
{"nl": "how many rivers run through the states bordering state0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )", "variables": {"state0": "fb:en.state.colorado"}, "can": "number of river that traverses state that borders california", "idx": "dev_geo_nat-47", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) ) ) )"}
{"nl": "people in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.boulder_co"}, "can": "population of sacramento", "idx": "dev_geo_nat-48", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "which states border state0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )", "variables": {"state0": "fb:en.state.alaska"}, "can": "state that borders california", "idx": "dev_geo_nat-49", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) state0 ) )"}
{"nl": "how many people live in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.san_francisco_ca"}, "can": "population of sacramento", "idx": "dev_geo_nat-50", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
{"nl": "what is the highest point in the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string high_point_state_place ) ) )", "variables": {}, "can": "high point of state that has the smallest population", "idx": "dev_geo_nat-51", "canonical_lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string high_point_state_place ) ) )"}
{"nl": "what states does the shortest river run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) )", "variables": {}, "can": "state that river that has the smallest length traverses", "idx": "dev_geo_nat-52", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) )"}
{"nl": "which rivers run through the state with the largest city in the country0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "river that traverses state that city that has the largest population is contained by", "idx": "dev_geo_nat-53", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) ) )"}
{"nl": "how long is the river0 river in miles ?", "lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )", "variables": {"river0": "fb:en.river.mississippi"}, "can": "length of colorado river", "idx": "dev_geo_nat-54", "canonical_lf": "( call SW.listValue ( call SW.getProperty river0 ( string len_river_length ) ) )"}
{"nl": "what is the total area of the country0 ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )", "variables": {"country0": "fb:en.country.usa"}, "can": "total area of state", "idx": "dev_geo_nat-55", "canonical_lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )"}
{"nl": "where is name0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )", "variables": {"name0": "fb:en.name.new_orleans"}, "can": "state that city that is named sacramento is contained by", "idx": "dev_geo_nat-56", "canonical_lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) )"}
{"nl": "how many states have cities named name0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )", "variables": {"name0": "fb:en.name.austin"}, "can": "number of state that city that is named sacramento is contained by", "idx": "dev_geo_nat-57", "canonical_lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) name0 ) ) ) )"}
{"nl": "how many people live in city0 ?", "lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )", "variables": {"city0": "fb:en.city.kalamazoo_mi"}, "can": "population of sacramento", "idx": "dev_geo_nat-58", "canonical_lf": "( call SW.listValue ( call SW.getProperty city0 ( string population_city_count ) ) )"}
