{"nl": "papers written by authors authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.richard_ladner", "authorname1": "fb:en.author.linda_shapiro"}}
{"nl": "When did authorname0 and authorname1 collaborate ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.ras_bodik", "authorname1": "fb:en.author.ameet_soni"}}
{"nl": "what are the collaborations of authorname0 and authorname1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "can": "paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.bharath_hariharan", "authorname1": "fb:en.author.ross_girshick"}}
{"nl": "who has written the most papers on keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "who published the most papers in keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.syntactic_parsing"}}
{"nl": "number of citations of authorname0", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.michael_i--_jordan"}}
{"nl": "How many citations does authorname0 has ?", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "can": "citation count of noah smith", "variables": {"authorname0": "fb:en.author.yann_lecun"}}
{"nl": "what did authorname0 write ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.mark_guzdial"}}
{"nl": "papers where authorname0 is an author", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.ras_bodik"}}
{"nl": "show me papers by authorname0 .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.stephen_boyd"}}
{"nl": "authorname0 's papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.srinivasan_iyer"}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.james_fogarty"}}
{"nl": "Papers written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kurtis_heimerl"}}
{"nl": "papers by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.steve_seitz"}}
{"nl": "What papers has authorname0 written ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "can": "paper that noah smith writes", "variables": {"authorname0": "fb:en.author.sharon_goldwater"}}
{"nl": "What is authorname0 's latest paper ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.yejin_choi"}}
{"nl": "What is the latest paper by authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.emo_todorov"}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.jeff_dean"}}
{"nl": "How many paper does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.samia_razaq"}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.jennifer_widom"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.eric_brewer"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.huamin_qu"}}
{"nl": "How many papers does authorname0 have ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.srinivasan_iyer"}}
{"nl": "How many papers has authorname0 published ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.christopher_d--_manning"}}
{"nl": "keyphrases used by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.noah_smith"}}
{"nl": "What topic does authorname0 write about ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.noah_smith"}}
{"nl": "In which conferences does authorname0 typically publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kaiming_he"}}
{"nl": "in what conferences does authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kaiming_he"}}
{"nl": "What conferences does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.kurtis_heimerl"}}
{"nl": "What conference does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniela_witten"}}
{"nl": "What conferences does authorname0 publish in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniella_coelho"}}
{"nl": "Where did authorname0 publish in year0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.luke_clark", "year0": "2013"}}
{"nl": "what papers are mostly cited by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "variables": {"authorname0": "fb:en.author.tom_mitchell", "authorname1": "fb:en.author.oren_etzioni"}}
{"nl": "most cited by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "variables": {"authorname0": "fb:en.author.tom_mitchell", "authorname1": "fb:en.author.oren_etzioni"}}
{"nl": "Which paper should I read about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "What papers talk about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.reinforcement_learning"}}
{"nl": "keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.autoencoder"}}
{"nl": "List papers that has a keyword keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.depth_map"}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.program_slicing"}}
{"nl": "papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "citation count of authorname0 's papers", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ) ) )", "can": "total citation count of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.zachary_tatlock"}}
{"nl": "papers authorname0 wrote about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "authorname0 's papers on keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.kathryn_mckinley", "keyphrasename0": "fb:en.keyphrase.garbage_collection"}}
{"nl": "What papers has authorname0 written about keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.percy_liang", "keyphrasename0": "fb:en.keyphrase.semantic_parsing"}}
{"nl": "papers by authorname0 from year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.emina_torlak", "year0": "2010"}}
{"nl": "Papers written by authorname0 in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.james_fogarty", "year0": "2015"}}
{"nl": "Papers published in year0 by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.li_dong", "year0": "2016"}}
{"nl": "keyphrasename0 papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing", "venuename0": "fb:en.venue.acl"}}
{"nl": "keyphrasename0 papers in venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "variables": {"keyphrasename0": "fb:en.keyphrase.tail", "venuename0": "fb:en.venue.nips"}}
{"nl": "keyphrases authorname0 used in papers written last year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "variables": {"authorname0": "fb:en.author.emina_torlak", "year0": "2015"}}
{"nl": "papers using datasetname0 or datasetname1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat fb:en.dataset.wordnet fb:en.dataset.imagenet ) ) )", "can": "paper whose dataset is reviews or blogs", "variables": {"datasetname0": "fb:en.dataset.wordnet", "datasetname1": "fb:en.dataset.dbpedia"}}
{"nl": "author published venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2014", "venuename0": "fb:en.venue.acl"}}
{"nl": "keyphrasename0 datasets", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.textual_entailment"}}
{"nl": "datasets in papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "can": "dataset of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.natural_language_processing"}}
{"nl": "How many papers were at venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2000", "venuename0": "fb:en.venue.sigmod"}}
{"nl": "How many papers were accepted at venuename0 year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.sigmod"}}
{"nl": "How many papers were written on keyphrasename0 in year0 ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.question_answering", "year0": "2016"}}
{"nl": "What are some survey papers on keyphrasename0 problems in keyphrasename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.question_answering", "keyphrasename1": "fb:en.keyphrase.natural_language_processing"}}
{"nl": "keyphrasename1 for keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.natural_language_processing", "keyphrasename1": "fb:en.keyphrase.deep_learning"}}
{"nl": "newest keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning"}}
{"nl": "In what years did authorname0 publish a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.pedro_domingos"}}
{"nl": "In what years did authorname0 publish a paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.pedro_domingos"}}
{"nl": "Which papers cite authorname0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "paper that cites paper that noah smith writes", "variables": {"authorname0": "fb:en.author.daniel_jurafsky"}}
{"nl": "What is the paper about keyphrasename0 of the most citation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_image_segmentation"}}
{"nl": "Paper on keyphrasename0 with most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.reinforcement_learning"}}
{"nl": "keyphrasename0 papers with most citations", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.sentiment_analysis"}}
{"nl": "most cited keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.sentiment_analysis"}}
{"nl": "most cited keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing"}}
{"nl": "what is the most cited paper of authorname0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper that noah smith writes and that has the largest citation count", "variables": {"authorname0": "fb:en.author.ohad_shamir"}}
{"nl": "Who published the most papers in year0 at venuename0 ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2007", "venuename0": "fb:en.venue.cvpr"}}
{"nl": "papers from year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose publication year is 2012", "variables": {"year0": "2014"}}
{"nl": "papers by authorname0 published at venuename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.emina_torlak", "venuename0": "fb:en.venue.popl"}}
{"nl": "Does authorname0 publish in venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.ali_farhadi", "venuename0": "fb:en.venue.cvpr"}}
{"nl": "keywords shared by authorname0 and authorname1", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and that richard anderson writes", "variables": {"authorname0": "fb:en.author.dan_klein", "authorname1": "fb:en.author.noah_smith"}}
{"nl": "who is the most cited author at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) ) )", "can": "author that writes paper whose venue is nature and that has the largest citation count", "variables": {"venuename0": "fb:en.venue.cvpr"}}
{"nl": "keyphrasename0 papers not written by authorname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "variables": {"authorname0": "fb:en.author.chris_dyer", "keyphrasename0": "fb:en.keyphrase.syntactic_parsing"}}
{"nl": "who publishes in keyphrasename0 for keyphrasename1", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "variables": {"keyphrasename0": "fb:en.keyphrase.deep_learning", "keyphrasename1": "fb:en.keyphrase.question_answering"}}
{"nl": "When did authorname0 publish ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.ameet_soni"}}
{"nl": "Who cites authorname0 most ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "can": "author that writes the most number of paper that cites paper that noah smith writes", "variables": {"authorname0": "fb:en.author.neeraj_jain"}}
{"nl": "papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acl"}}
{"nl": "List of papers in venuename0 year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.vmcai"}}
{"nl": "venuename0 papers in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acl"}}
{"nl": "venuename0 year0 conference", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose venue is nature and whose publication year is 2012", "variables": {"year0": "2016", "venuename0": "fb:en.venue.acm_dev"}}
{"nl": "who publishes papers about keyphrasename0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "author that writes paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.sensor_fusion"}}
{"nl": "What conferences does authorname0 publish in the most ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "can": "venue that is venue of the most number of paper that noah smith writes", "variables": {"authorname0": "fb:en.author.noah_a--_smith"}}
{"nl": "keyphrasename0 year0 papers", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "variables": {"keyphrasename0": "fb:en.keyphrase.semantic_parsing", "year0": "2016"}}
{"nl": "who authored papers at venuename0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "can": "author that writes paper whose venue is nature", "variables": {"venuename0": "fb:en.venue.nips"}}
{"nl": "When was keyphrasename0 proposed ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "can": "publication year of paper whose keyphrase is semantic parsing and that has the smallest publication year", "variables": {"keyphrasename0": "fb:en.keyphrase.recurrent_neural_network"}}
{"nl": "papers moatly cited by keyphrasename0 papers", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "can": "paper that the most number of paper whose keyphrase is semantic parsing cites", "variables": {"keyphrasename0": "fb:en.keyphrase.parsing"}}
{"nl": "What was the conference name that approved keyphrasename0 ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "can": "venue of paper whose keyphrase is semantic parsing", "variables": {"keyphrasename0": "fb:en.keyphrase.trophic_cascade"}}
{"nl": "who wrote papers in year0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "can": "author that writes paper whose publication year is 2012", "variables": {"year0": "2015"}}
{"nl": "main topics of work by authorname0", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and that has the largest citation count", "variables": {"authorname0": "fb:en.author.brian_derenzi"}}
{"nl": "What is the most popular paper this year in venuename0 ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "variables": {"year0": "2016", "venuename0": "fb:en.venue.cvpr"}}
{"nl": "authors working on datasetname0", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "can": "author that writes paper whose dataset is reviews", "variables": {"datasetname0": "fb:en.dataset.imagenet"}}
{"nl": "What articles have been published since year0 about title0 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "can": "paper whose title is neural attention and whose publication year is larger than 2012", "variables": {"title0": "fb:en.title.neural_machine_translation_by_jointly_learning_to_align_and_translate", "year0": "2010"}}
{"nl": "authorname0 's keyphrasename0 venuename0 paper", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "can": "paper that noah smith writes and whose keyphrase is semantic parsing and whose venue is nature", "variables": {"authorname0": "fb:en.author.eric_c--_kerrigan", "keyphrasename0": "fb:en.keyphrase.liquid", "venuename0": "fb:en.venue.automatica"}}
{"nl": "Where did authorname0 publish his last paper ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string venue_paper_venue ) ) )", "can": "venue of paper that noah smith writes and that has the largest publication year", "variables": {"authorname0": "fb:en.author.sergey_levine"}}
{"nl": "Who has published both in venuename0 and venuename1 ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ) )", "can": "author that writes paper whose venue is nature and that writes paper whose venue is acl", "variables": {"venuename0": "fb:en.venue.icml", "venuename1": "fb:en.venue.acl"}}
{"nl": "keyphrases used by authorname0 in his venuename0 papers", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "can": "keyphrase of paper that noah smith writes and whose venue is nature", "variables": {"authorname0": "fb:en.author.dan_klein", "venuename0": "fb:en.venue.emnlp"}}
