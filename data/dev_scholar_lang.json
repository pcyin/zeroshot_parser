{"nl": "list the papers having authorname0 and authorname1 as co - authors .", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "what paper was written by authorname0 and authorname1 ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "which papers have authorname0 and authorname1 as co - authors ?", "can": "paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) )", "variables": {}}
{"nl": "who is the most prolific author in the area of keyphrasename0 ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "which author has written the highest number of keyphrasename0 papers ?", "can": "author that writes the most number of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "authorname0 citations number ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "what is the citation count of authorname0 ?", "can": "citation count of noah smith", "lf": "( call SW.listValue ( call SW.getProperty authorname0 ( string citation_count_author_number ) ) )", "variables": {}}
{"nl": "what are the papers published by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "which paper did authorname0 write ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "list all the papers authored by authorname0 .", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "papers by authorname0", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what paper did authorname0 write ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what papers authorname0 wrote ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what are papers by authorname0 ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "which papers did authorname0 write ?", "can": "paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) )", "variables": {}}
{"nl": "what is authorname0 's latest paper ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the latest paper published by authorname0 ?", "can": "paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "how many papers did authorname0 write", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what is the total number of papers written by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers has authorname0 authored ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 wrote ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what is the number of papers that were wrote by authorname0 ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "number of papers by authorname0", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "how many papers authorname0 wrote ?", "can": "number of paper that noah smith writes", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what topics did authorname0 write about ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "in what topics authorname0 papers deals ?", "can": "keyphrase of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "in which conferences did authorname0 publish papers ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "where did authorname0 published ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "what conference authorname0 paper was ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "what are the venues that authorname0 has written a paper at ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "in what venues did authorname0 publish ?", "can": "venue of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "where did authorname0 published on year0 ?", "can": "venue of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "what paper by authorname0 and authorname1 is cited the most ?", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what paper was written by authorname0 and authorname1 and have the largest number of citation ?", "can": "paper that noah smith writes and that richard anderson writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "list the papers written in keyphrasename0 .", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers discuss keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "keyphrasename0 papers", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what are some papers about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list all papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "list all papers about keyphrasename0", "can": "paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "how many citations does authorname0 has ?", "can": "total citation count of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string citation_count_paper_number ) ) ) )", "variables": {}}
{"nl": "what papers on keyphrasename0 did authorname0 publish ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers authorname0 wrote on keyphrasename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "keyphrasename0 paper by authorname0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "what papers by authorname0 were published in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers were written by authorname0 in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which papers authorname0 wrote in year0 ?", "can": "paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "keyphrasename0 papers published in venuename0", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what keyphrasename0 papers appeared in venuename0 ?", "can": "paper whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "what were the main research areas of papers written by authorname0 in the year year0 ?", "can": "keyphrase of paper that noah smith writes and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what papers use reviews or blogs as data", "can": "paper whose dataset is reviews or blogs", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) ( call SW.concat fb:en.dataset.wordnet fb:en.dataset.imagenet ) ) )", "variables": {}}
{"nl": "who are the authors who published a paper in venuename0 in the year year0 ?", "can": "author that writes paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what papers are about keyphrasename0 datasets ?", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "datasets of keyphrasename0 papers", "can": "dataset of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string dataset_paper_dataset ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 in year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers were published in venuename0 year0 ?", "can": "number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "how many papers on keyphrasename0 were published in year0 ?", "can": "number of paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what papers are about keyphrasename0 and keyphrasename1 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "which keyphrasename1 papers are on keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) )", "variables": {}}
{"nl": "what is the most recent paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest publication year", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "at what years did authorname0 published papers ?", "can": "publication year of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what are the years in which authorname0 published a paper ?", "can": "publication year of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "authorname0 papers are cited in which papers ?", "can": "paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "what is the most highly cited paper on keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "most cited keyphrasename0 paper", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what is the most cited paper on keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "what is the most cited paper about keyphrasename0 ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which keyphrasename0 paper has the most citations ?", "can": "paper whose keyphrase is semantic parsing and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "which authorname0 paper is the most cited one ?", "can": "paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "who wrote the largest number of papers in venuename0 in year0 ?", "can": "author that writes the most number of paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what papers were published in year0 ?", "can": "paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers by authorname0 were published on venuename0 ?", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "which papers authorname0 wrote were published in venuename0 ?", "can": "paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "about what topics authorname0 and authorname1 write ?", "can": "keyphrase of paper that noah smith writes and that richard anderson writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname1 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "who did write the most citated venuename0 paper ?", "can": "author that writes paper whose venue is nature and that has the largest citation count", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string max ) ( string citation_count_paper_number ) ) ) )", "variables": {}}
{"nl": "what are papers about keyphrasename0 not written by authorname0 ?", "can": "paper that noah smith not writes and whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string ! = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) )", "variables": {}}
{"nl": "which authoer writes papers about keyphrasename0 and keyphrasename1 ?", "can": "author that writes paper whose keyphrase is semantic parsing and whose keyphrase is deep learning", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename1 ) ) )", "variables": {}}
{"nl": "on what years did authorname0 published ?", "can": "publication year of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "who is the author that has the largest number of citations of authorname0 's papers ?", "can": "author that writes the most number of paper that cites paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string max ) ( string write_author_paper ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string cites_paper_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) ) )", "variables": {}}
{"nl": "what papers published on venuename0 at year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "which papers were published at venuename0 year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers were published in venuename0 in year0 ?", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "papers published in venuename0 year0", "can": "paper whose venue is nature and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "name the authors who have published a keyphrasename0 paper .", "can": "author that writes paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "in which venue authorname0 publishes the most ?", "can": "venue that is venue of the most number of paper that noah smith writes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue_paper_venue ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ) )", "variables": {}}
{"nl": "return keyphrasename0 papers published in year0", "can": "paper whose keyphrase is semantic parsing and whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) )", "variables": {}}
{"nl": "who published in venuename0 ?", "can": "author that writes paper whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) )", "variables": {}}
{"nl": "what year was the first keyphrasename0 paper published ?", "can": "publication year of paper whose keyphrase is semantic parsing and that has the smallest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string min ) ( string publication_year_paper_number ) ) ( string publication_year_paper_number ) ) )", "variables": {}}
{"nl": "what is the most cited paper by keyphrasename0 papers ?", "can": "paper that the most number of paper whose keyphrase is semantic parsing cites", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites_paper_paper ) ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ) )", "variables": {}}
{"nl": "keyphrasename0 conference ?", "can": "venue of paper whose keyphrase is semantic parsing", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "which authors wrote papers in year0 ?", "can": "author that writes paper whose publication year is 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ) )", "variables": {}}
{"nl": "what is the keyphrase of authorname0 paper with the most citations ?", "can": "keyphrase of paper that noah smith writes and that has the largest citation count", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string citation_count_paper_number ) ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
{"nl": "what venuename0 paper in year0 has the largest number of citation ?", "can": "paper whose venue is nature and whose publication year is 2012 and that has the largest citation count", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string publication_year_paper_number ) ( string = ) ( year0 ) ) ( string max ) ( string citation_count_paper_number ) ) )", "variables": {}}
{"nl": "how are the authors of papers that uses reviews as dataset ?", "can": "author that writes paper whose dataset is reviews", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string dataset_paper_dataset ) ( string = ) fb:en.dataset.wordnet ) ) )", "variables": {}}
{"nl": "what is the paper titled title0 that was published after year0 ?", "can": "paper whose title is neural attention and whose publication year is larger than 2012", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string title_paper_title ) ( string = ) title0 ) ( string publication_year_paper_number ) ( string > ) ( year0 ) ) )", "variables": {}}
{"nl": "what papers about keyphrasename0 were published by authorname0 in venuename0 ?", "can": "paper that noah smith writes and whose keyphrase is semantic parsing and whose venue is nature", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string keyphrase_paper_keyphrase ) ( string = ) keyphrasename0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) )", "variables": {}}
{"nl": "where did the most recently paper by authorname0 published ?", "can": "venue of paper that noah smith writes and that has the largest publication year", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string max ) ( string publication_year_paper_number ) ) ( string venue_paper_venue ) ) )", "variables": {}}
{"nl": "who are the authors of papers that appeared both in venuename1 and venuename0", "can": "author that writes paper whose venue is nature and that writes paper whose venue is acl", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.author ) ( string ! type ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename0 ) ) ( string write_author_paper ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( string venue_paper_venue ) ( string = ) venuename1 ) ) )", "variables": {}}
{"nl": "what are the areas of authorname0 papers that were published in venuename0 ?", "can": "keyphrase of paper that noah smith writes and whose venue is nature", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.paper ) ( string ! type ) ) ( call SW.reverse ( string write_author_paper ) ) ( string = ) authorname0 ) ( string venue_paper_venue ) ( string = ) venuename0 ) ( string keyphrase_paper_keyphrase ) ) )", "variables": {}}
