{"nl": "what state not containing _place_ has an area smaller than the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what is the state without a _state_ border that also has the fewest _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that death valley is contained by", "variables": {}}
{"nl": "which state 's lowest point is _place_ with a population not equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is death valley and whose population is not population of sacramento", "variables": {}}
{"nl": "what state with a capital of _city_ has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is smaller than area of usa", "variables": {}}
{"nl": "state that _lake_ is in but does not contain places", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that place not is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse and has the most rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of river traverses", "variables": {}}
{"nl": "which state does not include parts of both _mountain_ and _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that mount whitney not is contained by and that death valley not is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is larger than area of california", "variables": {}}
{"nl": "what river borders _state_ that does not traverse a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that borders california and that not traverses city", "variables": {}}
{"nl": "name the country with the smallest amount of states .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_state_country ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that the least number of state is contained by", "variables": {}}
{"nl": "what state is _city_ not in that also does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that place not is contained by", "variables": {}}
{"nl": "what is the total elevation of a place contained by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that is contained by california", "variables": {}}
{"nl": "what state 's population is equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose population is population of california", "variables": {}}
{"nl": "what state is not the location of _mountain_ and has no rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that river not traverses", "variables": {}}
{"nl": "what major city has a large area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is major and whose area is larger than area of california", "variables": {}}
{"nl": "which state contains _mountain_ and its capital is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what is the area of a lake that is within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ) )", "can": "area of lake that is contained by california", "variables": {}}
{"nl": "what state does the _river_ border that contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of lake is contained by", "variables": {}}
{"nl": "what is the elevation of the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ) )", "can": "elevation of place that is low point of california", "variables": {}}
{"nl": "what state contains _mountain_ that has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state traversed by the _river_ is found in the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that is contained by the most number of country", "variables": {}}
{"nl": "what is the area of a lake that is not contained by _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ) )", "can": "area of lake that not is contained by california", "variables": {}}
{"nl": "which state is _mountain_ not in with te smalelst population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that mount whitney not is contained by and that has the smallest population", "variables": {}}
{"nl": "what is the population of a city within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ) )", "can": "population of city that is contained by california", "variables": {}}
{"nl": "what state with a capital of _city_ is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that not is contained by country", "variables": {}}
{"nl": "which state that is not bordered by the _river_ and has an area larger than the area of _lake_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state that is not within the usa has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not is contained by usa and whose population is population of usa", "variables": {}}
{"nl": "which state lacking a _state_ border does not have _place_ as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that not borders california and whose low point is not death valley", "variables": {}}
{"nl": "name the state with more area than _state_ and a _city_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is larger than area of california", "variables": {}}
{"nl": "what state contains _city_ but does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that sacramento is contained by and that death valley not is contained by", "variables": {}}
{"nl": "what country state contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that is contained by country", "variables": {}}
{"nl": "what state is _mountain_ not in that has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what is the state with _place_ as a low point and the most _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders the most number of state", "variables": {}}
{"nl": "which state does the _river_ border with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river borders and whose high point is not death valley", "variables": {}}
{"nl": "what state borders _state_ that conains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state containing _mountain_ also borders rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that river borders", "variables": {}}
{"nl": "which state has a capital of _city_ and a lower population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is sacramento and whose population is smaller than population of california", "variables": {}}
{"nl": "what state with a low point of _place_ is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that not is contained by country", "variables": {}}
{"nl": "what state borders _state_ with an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that borders california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ not traverse but has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and that capital of california is contained by", "variables": {}}
{"nl": "what state not contianing _lake_ contains a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that mountain is contained by", "variables": {}}
{"nl": "what state bordered by _state_ does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that california borders and that sacramento not is contained by", "variables": {}}
{"nl": "what state with a low point other than _place_ has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is larger than area of california", "variables": {}}
{"nl": "which state 's population is equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose population is population of usa", "variables": {}}
{"nl": "which river does n't border the state or go through _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that not borders state", "variables": {}}
{"nl": "which state has a capital of _city_ and whose area is not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is not area of california", "variables": {}}
{"nl": "what state does _lake_ not contain with a hiigh point not being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is not place", "variables": {}}
{"nl": "what lake is not within _state_ and contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that not is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "what state does the _river_ border that the fewest states border ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of state borders", "variables": {}}
{"nl": "which state that does n't border _state_ has the least number of high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what country containing _state_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string min ) ( string population_country_count ) ) )", "can": "country that california is contained by and that has the smallest population", "variables": {}}
{"nl": "what state has a low point of _place_ and contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of place is contained by", "variables": {}}
{"nl": "which state without a city named _city_ contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento not is contained by and that capital of california is contained by", "variables": {}}
{"nl": "which state has a larger population that _state_ , and also contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what state does the _river_ border that a state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that state borders", "variables": {}}
{"nl": "what state sharing a border with _state_ contains a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and that low point of california is contained by", "variables": {}}
{"nl": "what city is not named _city_ that is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that the most number of river traverses", "variables": {}}
{"nl": "what city not named _city_ has a population equal to that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is named sacramento and whose population is population of california", "variables": {}}
{"nl": "what state does the _river_ border with a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river borders and whose population is not population of sacramento", "variables": {}}
{"nl": "what state does not border _state_ and does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and that high point of california not is contained by", "variables": {}}
{"nl": "which state has _lake_ in it and its highest point is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose high point is not place", "variables": {}}
{"nl": "what state in the usa has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that is contained by usa and whose capital is sacramento", "variables": {}}
{"nl": "how many states have a capital of _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ) )", "can": "number of state whose capital is sacramento", "variables": {}}
{"nl": "what capital city of _state_ has a population equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is capital of california and whose population is population of usa", "variables": {}}
{"nl": "how many states have the largest density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ) )", "can": "number of state that has the largest density", "variables": {}}
{"nl": "what city is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of the most number of state", "variables": {}}
{"nl": "name the state with less area than the us that also has a _place_ high point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is smaller than area of usa", "variables": {}}
{"nl": "what river that traverses _state_ also traverses _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string = ) _city_ ) )", "can": "river that traverses california and that traverses sacramento", "variables": {}}
{"nl": "which state with borders created by the _river_ has the population count of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river borders and whose population is population of sacramento", "variables": {}}
{"nl": "what palce is the low point of _state_ that is within the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is low point of california and that is contained by the most number of capital of california", "variables": {}}
{"nl": "which state contains _place_ and has a population unequal to that of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what major city does not have the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is major and whose area is not area of california", "variables": {}}
{"nl": "what state with a smaller area than the usa also contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state is outside of the usa , and has the same high point as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose high point is high point of california", "variables": {}}
{"nl": "what is the total population of a state that borders the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ) ) )", "can": "total population of state that colorado river borders", "variables": {}}
{"nl": "which state does not include _city_ and is the same size as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what lake that is not within _state_ has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the mountain that is contained by _state_ and whose elevation is equal to the elevation of _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "this state does n't include _place_ or touch the state .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that state not borders", "variables": {}}
{"nl": "what is the elevation of a place ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ) )", "can": "elevation of place", "variables": {}}
{"nl": "what state not containing _place_ has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and whose low point is not place", "variables": {}}
{"nl": "what river does not traverse _state_ and traverses the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses the least number of city", "variables": {}}
{"nl": "what country is _state_ contained by that contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_state_country ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california is contained by and that the most number of state is contained by", "variables": {}}
{"nl": "what is the length of the river that traverses _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ) )", "can": "length of river that traverses california", "variables": {}}
{"nl": "for a state without a _place_ low point , what is the state density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string density_state_count ) ) )", "can": "density of state whose low point is not death valley", "variables": {}}
{"nl": "what country containing _state_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california is contained by and whose area is not area of california", "variables": {}}
{"nl": "what state containing _mountain_ has a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that mount whitney is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what state does not contain _lake_ and does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that lake tahoe not is contained by and that california not borders", "variables": {}}
{"nl": "what state bordering _state_ contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and that capital of california is contained by", "variables": {}}
{"nl": "what city traversed by the _river_ is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is contained by the most number of state", "variables": {}}
{"nl": "what _state_ high point location is found in the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by the least number of state", "variables": {}}
{"nl": "what city is a capital and contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is a capital and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state contained by _lake_ that is not contained by the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what _state_ low point is located within the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is low point of california and that is contained by capital of california", "variables": {}}
{"nl": "what is the capital city of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that is contained by california and that is capital of california", "variables": {}}
{"nl": "what place that is not within _city_ is the low point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is low point of the least number of state", "variables": {}}
{"nl": "what major city has an area that is not in the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is major and whose area is not area of usa", "variables": {}}
{"nl": "what state has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state whose high point is death valley", "variables": {}}
{"nl": "what state contains _place_ with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that death valley is contained by and whose low point is not death valley", "variables": {}}
{"nl": "what state outside of where _city_ is located has the fewest number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what river that borders _state_ does not traverse a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that not traverses state", "variables": {}}
{"nl": "how many countries ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "number of country", "variables": {}}
{"nl": "name the country with a population less than _city_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what is the high point of a state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ) )", "can": "high point of state that colorado river not borders", "variables": {}}
{"nl": "what country contains _state_ that has the population of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california is contained by and whose population is population of usa", "variables": {}}
{"nl": "name the state containing a _place_ high point that is not a city capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and whose capital is not city", "variables": {}}
{"nl": "which country has the most density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the largest density", "variables": {}}
{"nl": "what is the low point of a state not containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ) )", "can": "low point of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state that is traversed by the _river_ has a capital that 's not the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and whose capital is not capital of california", "variables": {}}
{"nl": "what state not containing _mountain_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "which state does the _river_ traverese and it borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that state borders", "variables": {}}
{"nl": "which state without _river_ borders has the most state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of state borders", "variables": {}}
{"nl": "which state has a high point of _place_ and borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that river borders", "variables": {}}
{"nl": "name the city with the fewest residents that the _river_ traverses .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that colorado river traverses and that has the smallest population", "variables": {}}
{"nl": "which state with the capital of _city_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( string population_state_count ) ) )", "can": "state whose capital is sacramento and that has the smallest population", "variables": {}}
{"nl": "what state is _place_ not in and is bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that state borders", "variables": {}}
{"nl": "what is the area of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the largest area", "variables": {}}
{"nl": "what state is _mountain_ is with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what is a city that is not _city_ and is not called name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that not is named name", "variables": {}}
{"nl": "what state that does n't contain _mountain_ has an area larger than the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "name the country that contains _state_ that has a population that 's the same as _state_ 's .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california is contained by and whose population is population of california", "variables": {}}
{"nl": "what state is not in the usa and does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and that high point of california not is contained by", "variables": {}}
{"nl": "which state has _city_ in it , and also a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state containing _lake_ has _state_ 's low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what 's the state with a _place_ low point and the fewest places within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of place is contained by", "variables": {}}
{"nl": "what major river traverses the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that is major and that traverses the least number of capital of california", "variables": {}}
{"nl": "what is the elevation of a place that is within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ) )", "can": "elevation of place that is contained by california", "variables": {}}
{"nl": "what us state is bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that is contained by usa and that california borders", "variables": {}}
{"nl": "what river traverses the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses the least number of city", "variables": {}}
{"nl": "what state containing _mountain_ has a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that mount whitney is contained by and whose low point is not death valley", "variables": {}}
{"nl": "which city is the capital of _state_ and named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is named name", "variables": {}}
{"nl": "where is the lowest point in the states that border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ) )", "can": "low point of state that california borders", "variables": {}}
{"nl": "what river does not traverse _state_ but borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string next_to_river_state ) ( string ! = ) _state_ ) )", "can": "river that not traverses california and that not borders california", "variables": {}}
{"nl": "what major city has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( string density_city_count ) ) )", "can": "city that is major and that has the smallest density", "variables": {}}
{"nl": "what state does the _river_ border but does not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that river not traverses", "variables": {}}
{"nl": "how many places are within _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ) )", "can": "number of place that is contained by california", "variables": {}}
{"nl": "what state with a capital of _city_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is sacramento and whose population is larger than population of usa", "variables": {}}
{"nl": "what state is not bordered by _state_ and does not contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california not borders and that mountain not is contained by", "variables": {}}
{"nl": "what country with the smallest density contains _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string min ) ( string density_country_count ) ) )", "can": "country that california is contained by and that has the smallest density", "variables": {}}
{"nl": "what state does not contain _lake_ that has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that lake tahoe not is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what are the _state_ - bordering states which do n't contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and that capital of california not is contained by", "variables": {}}
{"nl": "what state does _state_ not border that is bordered by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of river borders", "variables": {}}
{"nl": "what place outside of _state_ has a higher elevation than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by california and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "how many lakes have the smallest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string min ) ( string area_lake_length^2 ) ) ) )", "can": "number of lake that has the smallest area", "variables": {}}
{"nl": "what state not containing _place_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that lake not is contained by", "variables": {}}
{"nl": "what place within _state_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by the most number of city", "variables": {}}
{"nl": "which state without a _river_ border has the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of lake is contained by", "variables": {}}
{"nl": "what city is not within _state_ that has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is contained by california and whose population is not population of sacramento", "variables": {}}
{"nl": "what place that is _state_ 's low point is the low point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is low point of the least number of state", "variables": {}}
{"nl": "what majro lake has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string max ) ( string area_lake_length^2 ) ) )", "can": "lake that is major and that has the largest area", "variables": {}}
{"nl": "name the state which does n't contain _place_ and does n't have a low point of a high point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what state contains _place_ and is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that death valley is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what place has a higher elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what state has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose high point is not death valley", "variables": {}}
{"nl": "what state not bordering _state_ has a population smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not borders california and whose population is smaller than population of california", "variables": {}}
{"nl": "what city that is not within _state_ has the smallest are ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that not is contained by california and that has the smallest area", "variables": {}}
{"nl": "what state does the _river_ not border that is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that is contained by the most number of country", "variables": {}}
{"nl": "what river does not border _state_ and runs through the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses the most number of city", "variables": {}}
{"nl": "which state 's capital is _city_ with its low point not being that of _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose low point is not low point of california", "variables": {}}
{"nl": "what state is _city_ not in that does not contain lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that lake not is contained by", "variables": {}}
{"nl": "what city is the capital of _state_ with a population less than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is capital of california and whose population is smaller than population of usa", "variables": {}}
{"nl": "which states does the _river_ run through that have a smaller area than _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is smaller than area of california", "variables": {}}
{"nl": "which state with a _place_ high point has a population exceeding the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is death valley and whose population is larger than population of usa", "variables": {}}
{"nl": "what state does not border _state_ and has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and whose high point is place", "variables": {}}
{"nl": "what state with a capital of _city_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state with the lowest point that is not in _place_ has the lowest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string density_state_count ) ) )", "can": "state whose low point is not death valley and that has the smallest density", "variables": {}}
{"nl": "what state contains _place_ and also has _place_ as its low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that death valley is contained by and whose low point is death valley", "variables": {}}
{"nl": "name all countries .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) )", "can": "country", "variables": {}}
{"nl": "what state with a high poitn of _place_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is larger than area of usa", "variables": {}}
{"nl": "what city is a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) )", "can": "city that is a capital", "variables": {}}
{"nl": "what city named _city_ has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is named the most number of name", "variables": {}}
{"nl": "what state is _place_ in with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is area of california", "variables": {}}
{"nl": "how many mountains are in _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ) )", "can": "number of mountain that is contained by california", "variables": {}}
{"nl": "what state that has no _state_ borders has the highest amount of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of state borders", "variables": {}}
{"nl": "what state without a _city_ capital has a high point location ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose high point is place", "variables": {}}
{"nl": "which state is the location of _place_ and the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that death valley is contained by and that colorado river traverses", "variables": {}}
{"nl": "what river hat does not traverse _city_ traverses another city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses city", "variables": {}}
{"nl": "what state does the _river_ not traverse and its high point is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose high point is not place", "variables": {}}
{"nl": "what city is not _city_ that is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that not is named sacramento and that is capital of california", "variables": {}}
{"nl": "what place is in _state_ and is the lowest point of the state ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is low point of the least number of state", "variables": {}}
{"nl": "what state not within the usa has a high point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose high point is not high point of california", "variables": {}}
{"nl": "which states do not have a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state whose capital is not sacramento", "variables": {}}
{"nl": "which state borders the most other states , including _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that borders the most number of state", "variables": {}}
{"nl": "what state outside of the usa has a population not equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not is contained by usa and whose population is not population of sacramento", "variables": {}}
{"nl": "what state that does n't contain _mountain_ is not in the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what major river traverses the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that is major and that traverses capital of california", "variables": {}}
{"nl": "what is the low point of a state with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ) )", "can": "low point of state whose capital is not sacramento", "variables": {}}
{"nl": "which states share borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that state borders", "variables": {}}
{"nl": "what state does the _river_ border with a high point other than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and whose high point is high point of california", "variables": {}}
{"nl": "what is the area of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ) )", "can": "area of state that california borders", "variables": {}}
{"nl": "what river that traverses _state_ traverses the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses the most number of city", "variables": {}}
{"nl": "which state that does not have the _river_ flowing through it has the lowest amount of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of lake is contained by", "variables": {}}
{"nl": "what lake within _state_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is area of california", "variables": {}}
{"nl": "what state with a high point other than _place_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string population_state_count ) ) )", "can": "state whose high point is not death valley and that has the smallest population", "variables": {}}
{"nl": "what is the river that does not cross _state_ that borders the least number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that borders the least number of state", "variables": {}}
{"nl": "what is the total population fo the capital of a state ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ) ( string population_city_count ) ) ) )", "can": "total population of capital of state", "variables": {}}
{"nl": "what state containing _place_ also contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that city not is contained by", "variables": {}}
{"nl": "which state that _city_ is not contained by has a low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and has a bigger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "which state 's high point is not _place_ and contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that low point of california is contained by", "variables": {}}
{"nl": "what state within the usa has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state outside of the us has an area not equal to _lake_ 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what city is larger in area than _lake_ and not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what city is not named _city_ and has the fewest low points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is named sacramento and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which city is _place_ not in and has the fewest places within in ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what state with a high point of _place_ has an area not equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the populaton of a country ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ) )", "can": "population of country", "variables": {}}
{"nl": "what is a state that _place_ is not in that is bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that river borders", "variables": {}}
{"nl": "what state has a low point of _place_ with an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what place is thte low point of _state_ and is the lowest point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is low point of the most number of state", "variables": {}}
{"nl": "what city within _state_ has a population that is smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is contained by california and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state is _lake_ not in with a population equal to that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is not population of california", "variables": {}}
{"nl": "which city that the _river_ transverses is not in the area of the usa .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is not area of usa", "variables": {}}
{"nl": "what state that is not within the usa has an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is area of usa", "variables": {}}
{"nl": "what place has a lower elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what is the total area of a state that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that lake tahoe not is contained by", "variables": {}}
{"nl": "which state does n't contain _place_ but does contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what city has the most low points in _state_ .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that the most number of low point of california is contained by", "variables": {}}
{"nl": "what is a city not within _state_ that does not contian _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is contained by california and that low point of california not is contained by", "variables": {}}
{"nl": "what state with a low point other than _place_ contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of lake is contained by", "variables": {}}
{"nl": "what is _lake_ ?", "lf": "( call SW.listValue _lake_ )", "can": "lake tahoe", "variables": {}}
{"nl": "what state that does not border _state_ has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not borders california and whose population is not population of california", "variables": {}}
{"nl": "what state bordering _state_ has a different area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california borders and whose area is not area of california", "variables": {}}
{"nl": "what city named _city_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state bordering _state_ shares a capital with _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and whose capital is capital of california", "variables": {}}
{"nl": "what state does not contain _place_ that has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state not containing _city_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what state in the usa has _place_ as its low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that is contained by usa and whose low point is death valley", "variables": {}}
{"nl": "_state_ 's low point can be found in which state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that low point of california is contained by", "variables": {}}
{"nl": "which state 's capital is _city_ with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "how many cities have the largest density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string density_city_count ) ) ) )", "can": "number of city that has the largest density", "variables": {}}
{"nl": "what state traversed by the _river_ has a high point the is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose high point is low point of california", "variables": {}}
{"nl": "what state is _lake_ in and contains the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what is the low point of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ) )", "can": "low point of state that borders california", "variables": {}}
{"nl": "which sate 's capital is _city_ but does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that lake not is contained by", "variables": {}}
{"nl": "what _state_ city contains the fewest number of places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is contained by california and that the least number of place is contained by", "variables": {}}
{"nl": "what state is _place_ in with an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what 's the state traversed by the _river_ with the least amount of _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and that the least number of capital of california is contained by", "variables": {}}
{"nl": "which state with a low point in _place_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of city is contained by", "variables": {}}
{"nl": "what is the total population count of states not containing _lake_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ) ) )", "can": "total population of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what state outside of the us has less area than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is smaller than area of usa", "variables": {}}
{"nl": "what lake that is not within _state_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string max ) ( string area_lake_length^2 ) ) )", "can": "lake that not is contained by california and that has the largest area", "variables": {}}
{"nl": "what state does the _river_ neither border nor traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that river not traverses", "variables": {}}
{"nl": "what city traversed by the _river_ is the least density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that colorado river traverses and that has the smallest density", "variables": {}}
{"nl": "what state does not border _state_ and has a low point different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and whose low point is not low point of california", "variables": {}}
{"nl": "what states not bordered by the _river_ have a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and that low point of california is contained by", "variables": {}}
{"nl": "what is the elevation of the lowest point in _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty _state_ ( string low_point_state_place ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of low point of california", "variables": {}}
{"nl": "what is the total population of a major city ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ) ) )", "can": "total population of city that is major", "variables": {}}
{"nl": "what city is a capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is capital of the least number of state", "variables": {}}
{"nl": "what state does the _river_ not traverse with a population equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not traverses and whose population is population of usa", "variables": {}}
{"nl": "what state bordering _state_ has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california borders and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what lake within _state_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string min ) ( string area_lake_length^2 ) ) )", "can": "lake that is contained by california and that has the smallest area", "variables": {}}
{"nl": "what city outside of _state_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that river traverses", "variables": {}}
{"nl": "what state does the _river_ traverse that has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of river borders", "variables": {}}
{"nl": "what is the high point of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ) )", "can": "high point of state that not borders california", "variables": {}}
{"nl": "what state does not contain _city_ and has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is area of california", "variables": {}}
{"nl": "what is the state containing the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state contains _lake_ and the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state not traversed by the _river_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that place is contained by", "variables": {}}
{"nl": "what is the low point of a state not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ) )", "can": "low point of state that colorado river not traverses", "variables": {}}
{"nl": "what city within _state_ does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is contained by california and that high point of california not is contained by", "variables": {}}
{"nl": "what state has no traversing rivers and contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that river not traverses", "variables": {}}
{"nl": "what lake within _state_ has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is larger than area of california", "variables": {}}
{"nl": "what state that does not border _state_ contains a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not borders california and that mountain is contained by", "variables": {}}
{"nl": "what city is _place_ in that contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that place is contained by", "variables": {}}
{"nl": "which river bordering _state_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that borders the least number of state", "variables": {}}
{"nl": "what major city has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is major and whose population is larger than population of california", "variables": {}}
{"nl": "which state , not traversed by the _river_ , has the least number of bordering states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that borders the least number of state", "variables": {}}
{"nl": "what _state_ capital city has the same population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is capital of california and whose population is population of california", "variables": {}}
{"nl": "what state not bordering _state_ has a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that california not borders and whose capital is not sacramento", "variables": {}}
{"nl": "which states with _state_ borders do not have river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that river not borders", "variables": {}}
{"nl": "what state with a capital that is not _city_ does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that low point of california not is contained by", "variables": {}}
{"nl": "what state with a non - _place_ low point has an area that 's not the us area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is not area of usa", "variables": {}}
{"nl": "what state within the usa has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose low point is place", "variables": {}}
{"nl": "what state with no _state_ borders has an area that 's not equal to the usa area .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california not borders and whose area is not area of usa", "variables": {}}
{"nl": "what state is not within the usa that _lake_ is in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that not is contained by usa and that lake tahoe is contained by", "variables": {}}
{"nl": "how many states are not found in the united states ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ) )", "can": "number of state that not is contained by usa", "variables": {}}
{"nl": "what city that is n't _city_ contains the most number of _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is named sacramento and that the most number of low point of california is contained by", "variables": {}}
{"nl": "which country has a smaller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country whose area is smaller than area of california", "variables": {}}
{"nl": "which state does _river_ not border but another river does ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that river borders", "variables": {}}
{"nl": "what is the total area of a city that is not named _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ) ) )", "can": "total area of city that not is named sacramento", "variables": {}}
{"nl": "what city does the _river_ traverse but does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that place is contained by", "variables": {}}
{"nl": "what state not containing _mountain_ has a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that high point of california is contained by", "variables": {}}
{"nl": "which state has a low point other than _place_ and does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that city is contained by", "variables": {}}
{"nl": "what state that has a high point that is n't _place_ and whose population is smaller than the population of usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is not death valley and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city is _place_ not in with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what state containing a low point location does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and whose low point is place", "variables": {}}
{"nl": "what is a state that is not contained in the usa , and whose high point is not the low point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose high point is not low point of california", "variables": {}}
{"nl": "what place is in _state_ with an elevation not equal to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what city within _state_ has an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is contained by california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what city does the _river_ traverse that contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river traverses and that low point of california is contained by", "variables": {}}
{"nl": "what state does not border _state_ but is bordered by another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that state borders", "variables": {}}
{"nl": "what state does not border _state_ that has an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not borders california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state borders _state_ with the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that borders california and that has the smallest area", "variables": {}}
{"nl": "what state bordering _state_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that borders the most number of state", "variables": {}}
{"nl": "what is the city with a larger population than _state_ which also does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley not is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what state with a _city_ capital is not the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and whose capital is not capital of california", "variables": {}}
{"nl": "what state is within the usa that does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that mountain not is contained by", "variables": {}}
{"nl": "what city has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named the most number of name", "variables": {}}
{"nl": "what state contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that the most number of mountain is contained by", "variables": {}}
{"nl": "what is the physical size of the lake in _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake that is contained by california", "variables": {}}
{"nl": "what state with _city_ as the capital contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that the most number of low point of california is contained by", "variables": {}}
{"nl": "which state 's lowest point is _place_ with a population different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is death valley and whose population is not population of california", "variables": {}}
{"nl": "which state has the highest points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that the most number of high point of california is contained by", "variables": {}}
{"nl": "what is the state with the smallest population count ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string population_state_count ) ) )", "can": "population of state that has the smallest population", "variables": {}}
{"nl": "what 's a major city with a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is major and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state with a high point other than _place_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that river traverses", "variables": {}}
{"nl": "what state does _state_ border and does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and that capital of california not is contained by", "variables": {}}
{"nl": "what river that traverses _state_ has the same length as the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses california and whose length is length of colorado river", "variables": {}}
{"nl": "what mountain is not within _state_ with an elevation not equal to _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what is the total length of a river that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ) ) )", "can": "total length of river that not borders california", "variables": {}}
{"nl": "what state does _state_ border that contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of lake is contained by", "variables": {}}
{"nl": "which state has a high point and also contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and whose high point is place", "variables": {}}
{"nl": "what river traverses _state_ and borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that borders the most number of state", "variables": {}}
{"nl": "what state containing _lake_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that lake tahoe is contained by and that has the smallest area", "variables": {}}
{"nl": "what is the area of the states contained in the united states ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ) )", "can": "area of state that is contained by usa", "variables": {}}
{"nl": "which state features _place_ as it 's lowest point and _city_ as a captial ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state whose capital is sacramento and whose low point is death valley", "variables": {}}
{"nl": "what country contains _state_ and has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string max ) ( string density_country_count ) ) )", "can": "country that california is contained by and that has the largest density", "variables": {}}
{"nl": "what is the state that shares a border with _state_ and contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of city is contained by", "variables": {}}
{"nl": "what river bordering _state_ has a length that is not equal to the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that borders california and whose length is not length of colorado river", "variables": {}}
{"nl": "what is the location with the lowest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that has the smallest elevation", "variables": {}}
{"nl": "which river touches the border of the highest number of states , but not _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that borders the most number of state", "variables": {}}
{"nl": "what state that 's not traversed by the _river_ is contained in the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that is contained by the most number of country", "variables": {}}
{"nl": "what state that the _river_ borders has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river borders and whose low point is death valley", "variables": {}}
{"nl": "what city that is the capital of _state_ is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is contained by the most number of state", "variables": {}}
{"nl": "which state 's low point is not _place_ and is bordered by rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that river borders", "variables": {}}
{"nl": "what state does not contain _lake_ and has a low point that is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what city not named _city_ has a smaller area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what city does the _river_ not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that colorado river not traverses", "variables": {}}
{"nl": "which sate with a high point other than _place_ has the fewest state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of state borders", "variables": {}}
{"nl": "what state has the fewest _state_ capitals and is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river borders and that the least number of capital of california is contained by", "variables": {}}
{"nl": "name the state with the most river borders and a low point that 's not _place_ .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of river borders", "variables": {}}
{"nl": "what state lacking a _place_ low point has the least river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of river borders", "variables": {}}
{"nl": "what is the area of the state not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ) )", "can": "area of state that colorado river not traverses", "variables": {}}
{"nl": "what state has a low point besides _place_ and a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose high point is place", "variables": {}}
{"nl": "what city that is not named _city_ is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is contained by the most number of state", "variables": {}}
{"nl": "what city does the _river_ cross that does not contain the highest elevation in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river traverses and that high point of california not is contained by", "variables": {}}
{"nl": "what state with a low point of _place_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is larger than area of usa", "variables": {}}
{"nl": "what state bordered by the _river_ has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is larger than area of california", "variables": {}}
{"nl": "what state that is not within the usa has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ not border and contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of city is contained by", "variables": {}}
{"nl": "how many cities have the largest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string area_city_length^2 ) ) ) )", "can": "number of city that has the largest area", "variables": {}}
{"nl": "which state has _place_ as a high point and also the most number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of lake is contained by", "variables": {}}
{"nl": "what state with _place_ in it is in the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what place is the low point of _state_ and the high point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is high point of the least number of state", "variables": {}}
{"nl": "which city named _city_ is the capital of the most number of state ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is capital of the most number of state", "variables": {}}
{"nl": "state the length of all rivers .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ) )", "can": "length of river", "variables": {}}
{"nl": "what city is _place_ in with a larger area than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "this state bordering _state_ has fewer people than _state_ has .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california borders and whose population is smaller than population of california", "variables": {}}
{"nl": "what state that does not border _state_ has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not borders california and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state not traversed by the _river_ has the fewest _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what is the population of a state whose high point is not _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ) )", "can": "population of state whose high point is not death valley", "variables": {}}
{"nl": "what is the total elevation of a place that is not within _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that not is contained by sacramento", "variables": {}}
{"nl": "what state bordered by _state_ contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and that city is contained by", "variables": {}}
{"nl": "what city is named _city_ and has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is named sacramento and whose population is not population of usa", "variables": {}}
{"nl": "what state is _lake_ not in that has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of river borders", "variables": {}}
{"nl": "what state does the _river_ not traverse that is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that is contained by country", "variables": {}}
{"nl": "what state has a highest point that is not _place_ and has the most capitals in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what country without _state_ in it has less area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state has a high point other than _place_ with a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose capital is city", "variables": {}}
{"nl": "which state has a _place_ high point but not a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state whose high point is death valley and whose capital is not sacramento", "variables": {}}
{"nl": "what city within _state_ does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that is contained by california and that death valley not is contained by", "variables": {}}
{"nl": "what state is _lake_ not in with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is area of california", "variables": {}}
{"nl": "what state not containing _place_ is contained within the highest number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what state does not contain _city_ but contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and whose low point is not place", "variables": {}}
{"nl": "what is the total population of _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "total population of sacramento", "variables": {}}
{"nl": "which of the places with the highest point in _state_ have the lowest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that is high point of california and that has the smallest elevation", "variables": {}}
{"nl": "what city named _city_ has a bigger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is named sacramento and whose population is larger than population of usa", "variables": {}}
{"nl": "what states do not border other states", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders state", "variables": {}}
{"nl": "what state containing _place_ has the same population as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley is contained by and whose population is population of usa", "variables": {}}
{"nl": "which state containing _place_ is the most dense ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that death valley is contained by and that has the largest density", "variables": {}}
{"nl": "which state with the same population as _state_ is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river traverses and whose population is population of california", "variables": {}}
{"nl": "what state that does not contain _place_ has a low point which is the high point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what city within _state_ contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is contained by california and that low point of california is contained by", "variables": {}}
{"nl": "what state does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that low point of california not is contained by", "variables": {}}
{"nl": "what city contains _place_ but does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that place not is contained by", "variables": {}}
{"nl": "what place that is not within _city_ has the high point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is high point of the least number of state", "variables": {}}
{"nl": "which state that 's not a _place_ low point has the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of river traverses", "variables": {}}
{"nl": "what state has a high point other than _place_ and is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of river traverses", "variables": {}}
{"nl": "what is the density of the state that has _lake_ as a bady of water ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string density_state_count ) ) )", "can": "density of state that lake tahoe is contained by", "variables": {}}
{"nl": "what place containing a _state_ low point has the same elevation as _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is low point of california and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what city is _place_ in with an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state containing _mountain_ has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what state without a _state_ border has the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of lake is contained by", "variables": {}}
{"nl": "what state has a low point of _place_ and the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( string density_state_count ) ) )", "can": "state whose low point is death valley and that has the smallest density", "variables": {}}
{"nl": "what is the population of _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty _state_ ( string capital_state_city ) ) ( string population_city_count ) ) ) )", "can": "total population of capital of california", "variables": {}}
{"nl": "what city does the _river_ traverse that is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that the least number of river traverses", "variables": {}}
{"nl": "what 's the state with the greatest area that also contains _city_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that sacramento is contained by and that has the largest area", "variables": {}}
{"nl": "which city , that is not _city_ , is in the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state not bordering _state_ has a low point of _state_ located within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and that low point of california is contained by", "variables": {}}
{"nl": "name the state with the smallest area that 's also bordered by the _river_ .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that colorado river borders and that has the smallest area", "variables": {}}
{"nl": "what capital city of _state_ has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is capital of california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the total area of the usa ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "total area of usa", "variables": {}}
{"nl": "what is the total population of a state with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ) ) )", "can": "total population of state whose high point is not death valley", "variables": {}}
{"nl": "what city not named _city_ is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is capital of the least number of state", "variables": {}}
{"nl": "what state does no contain _lake_ and has a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that lake tahoe not is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what state not containing _mountain_ has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose low point is not place", "variables": {}}
{"nl": "what state containing _lake_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that borders state", "variables": {}}
{"nl": "what river traverses _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) )", "can": "river that traverses california", "variables": {}}
{"nl": "what state with a low point of _place_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that borders state", "variables": {}}
{"nl": "which city from _state_ is equal to _city_ in population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is contained by california and whose population is population of sacramento", "variables": {}}
{"nl": "what city that is named _city_ is not contained by a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that place not is contained by", "variables": {}}
{"nl": "what is the population of the country containing _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ) )", "can": "population of country that california is contained by", "variables": {}}
{"nl": "what is the low point of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string low_point_state_place ) ) )", "can": "low point of state that has the smallest density", "variables": {}}
{"nl": "what state not containing _city_ also does not contain _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse with a high point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose high point is not high point of california", "variables": {}}
{"nl": "which state bordering the smallest number of other states also contains _place_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that borders the least number of state", "variables": {}}
{"nl": "what is the city named _city_ that is the capital of some state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is capital of state", "variables": {}}
{"nl": "this state is on the _state_ border .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) )", "can": "state that borders california", "variables": {}}
{"nl": "what state outside of the usa has a _state_ capital as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not is contained by usa and whose capital is capital of california", "variables": {}}
{"nl": "what city not containing _place_ has a population equal to that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley not is contained by and whose population is population of california", "variables": {}}
{"nl": "what is the total density of a country with the largest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the largest population", "variables": {}}
{"nl": "which state does the _river_ traverse with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river traverses and whose population is larger than population of california", "variables": {}}
{"nl": "what state with a high point other than _place_ has its high point as _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose high point is low point of california", "variables": {}}
{"nl": "which state contains _place_ and has a smaller area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what country is _state_ in and contains states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california is contained by and that state is contained by", "variables": {}}
{"nl": "which state outside of the _state_ area does not have a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is not area of california", "variables": {}}
{"nl": "what state borders _state_ with the most high points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that low point of california is contained by", "variables": {}}
{"nl": "what country is _state_ in with a population that is not _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what is a city that the _river_ traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) )", "can": "city that colorado river traverses", "variables": {}}
{"nl": "which state does not have the capital of _city_ but has the most places within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of place is contained by", "variables": {}}
{"nl": "what state not containing _lake_ contains the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what state not containing _place_ has the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what city does the _river_ traverse that is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that not is contained by state", "variables": {}}
{"nl": "which state has the same population as _city_ and does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california not borders and whose population is population of sacramento", "variables": {}}
{"nl": "name a state not containing _lake_ which also does n't contain _state_ 's high point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what state does not border _state_ and has the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not borders california and whose area is area of california", "variables": {}}
{"nl": "which state does the _river_ not traverse with an area different from the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is not area of usa", "variables": {}}
{"nl": "name the state containing _place_ with a low point that 's not a _state_ high point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what state does _state_ not border with a population lower than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california not borders and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state contains _mountain_ and the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state that is within the usa has a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that is contained by usa and whose population is smaller than population of california", "variables": {}}
{"nl": "what city is the capital of _state_ and has the most number of names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is named the most number of name", "variables": {}}
{"nl": "what city is _place_ in with an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is area of usa", "variables": {}}
{"nl": "what is the total area of a state with a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state whose high point is not death valley", "variables": {}}
{"nl": "what 's this city with an area exceeding _state_ that has no _river_ traversals ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is larger than area of california", "variables": {}}
{"nl": "what state bordered by _state_ has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california borders and whose population is population of sacramento", "variables": {}}
{"nl": "what state is _place_ not in that has an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what state with a capital that is not _city_ has the fewest low points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ border that has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river borders and whose capital is capital of california", "variables": {}}
{"nl": "what state which does n't have a _place_ low point has an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state borders _state_ , which has _city_ as its capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that borders california and whose capital is sacramento", "variables": {}}
{"nl": "which state with a high point other than _place_ does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that mountain not is contained by", "variables": {}}
{"nl": "how many states include _lake_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ) )", "can": "number of state that lake tahoe is contained by", "variables": {}}
{"nl": "which state 's capital is _city_ with the most high points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what city is a capital and contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is a capital and that low point of california is contained by", "variables": {}}
{"nl": "what is the capital of a state that is within the usa ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ) )", "can": "capital of state that is contained by usa", "variables": {}}
{"nl": "how many states have _place_ as a high point ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ) )", "can": "number of state whose high point is death valley", "variables": {}}
{"nl": "what is the size of a state the does n't have the lowest point of _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state whose low point is not death valley", "variables": {}}
{"nl": "what state is within the usa with a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and whose capital is not capital of california", "variables": {}}
{"nl": "what cities are have a population not of the usa that are not names _city_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is named sacramento and whose population is not population of usa", "variables": {}}
{"nl": "which state has _lake_ in it with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "which city is _place_ not in with an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what 's a major river that borders the state of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string major_river ) ) )", "can": "river that borders california and that is major", "variables": {}}
{"nl": "what place that is the high point of _state_ is within the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is high point of california and that is contained by the least number of capital of california", "variables": {}}
{"nl": "what city that is not named _city_ has a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is named sacramento and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ not border that contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not borders and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what place that is not within _state_ has an elevation smaller than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "which place is within _state_ but not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by city", "variables": {}}
{"nl": "what city not in _state_ has the most rivers running through it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that the most number of river traverses", "variables": {}}
{"nl": "what state with a low point other than _place_ does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that city not is contained by", "variables": {}}
{"nl": "what state contains _mountain_ and has a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what city does the _river_ traverse with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river traverses and whose population is larger than population of usa", "variables": {}}
{"nl": "what state has a high point of _place_ and a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose high point is death valley and whose low point is not death valley", "variables": {}}
{"nl": "what is the capital of the state with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the smallest area", "variables": {}}
{"nl": "what river does not border _state_ and does not traverse a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not borders california and that not traverses city", "variables": {}}
{"nl": "what state is _mountain_ not in but contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what _state_ city has the least density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that is contained by california and that has the smallest density", "variables": {}}
{"nl": "what state with a low point other than _place_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that borders state", "variables": {}}
{"nl": "what state does the _river_ traverse that is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that is contained by the least number of country", "variables": {}}
{"nl": "what state does n't contain _mountain_ and has a lower population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what state with a capital that is not _city_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that state borders", "variables": {}}
{"nl": "what state does the _river_ border with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river borders and whose population is larger than population of usa", "variables": {}}
{"nl": "what mountain with an elevation larger than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what is a city within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) )", "can": "city that is contained by california", "variables": {}}
{"nl": "what capital city has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is a capital and whose population is population of california", "variables": {}}
{"nl": "what major city has a population that is not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is major and whose population is not population of sacramento", "variables": {}}
{"nl": "which state borders _state_ with its low point being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and whose low point is place", "variables": {}}
{"nl": "what state bordering _state_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that river traverses", "variables": {}}
{"nl": "what is the area of a city that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ) )", "can": "area of city that not is contained by california", "variables": {}}
{"nl": "what city named _city_ contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that the least number of place is contained by", "variables": {}}
{"nl": "which state does n't have _place_ at its peak and is not the size of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what _state_ low point is in the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is contained by the least number of state", "variables": {}}
{"nl": "what state has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not city", "variables": {}}
{"nl": "which state 's capital is not _city_ that has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state whose capital is not sacramento and that has the largest area", "variables": {}}
{"nl": "what capital city of _state_ has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is capital of california and whose population is larger than population of california", "variables": {}}
{"nl": "what state not bordering _state_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that not borders california and that has the largest density", "variables": {}}
{"nl": "what state has alow point other than _place_ and does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and that capital of california not is contained by", "variables": {}}
{"nl": "what state has an area equal to the usa 's and has no _river_ traversal .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is area of usa", "variables": {}}
{"nl": "what state shares a border with _state_ and has it 's low point in _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that california borders and whose low point is death valley", "variables": {}}
{"nl": "name the state with a _place_ low point that contains the capital of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and that capital of california is contained by", "variables": {}}
{"nl": "which state is not in _place_ , and does not have _place_ as it 's lowest point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that death valley not is contained by and whose low point is not death valley", "variables": {}}
{"nl": "what state does not contain _city_ that has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of river borders", "variables": {}}
{"nl": "what state does not contain _city_ but does contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that low point of california is contained by", "variables": {}}
{"nl": "which state has _place_ as a high point and does not have _state_ as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and that low point of california not is contained by", "variables": {}}
{"nl": "which city is _place_ in with a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state contains _mountain_ and has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state outside of the usa contains no places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that place not is contained by", "variables": {}}
{"nl": "what city is the _place_ not in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that death valley not is contained by", "variables": {}}
{"nl": "what state with a high point other than _place_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is not death valley and whose population is larger than population of usa", "variables": {}}
{"nl": "what state does not contain _mountain_ and has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that mount whitney not is contained by and whose high point is death valley", "variables": {}}
{"nl": "what state has an area larger than that of the usa and is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is larger than area of usa", "variables": {}}
{"nl": "what city that is named _city_ has an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is smaller than area of usa", "variables": {}}
{"nl": "what city not named _city_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that river traverses", "variables": {}}
{"nl": "what city has an area different than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state does not contain _city_ but is within a countr ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that is contained by country", "variables": {}}
{"nl": "what state is _place_ in and contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what is the capital of a state not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ) )", "can": "capital of state that california not borders", "variables": {}}
{"nl": "which state not containing _mountain_ contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that lake is contained by", "variables": {}}
{"nl": "what states that do not border _state_ do not have any lakes", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california not borders and that lake not is contained by", "variables": {}}
{"nl": "what state with less area than the usa is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is smaller than area of usa", "variables": {}}
{"nl": "what place is the high point of _state_ and the low point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is low point of state", "variables": {}}
{"nl": "what is the total density of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the largest area", "variables": {}}
{"nl": "what state borders _state_ and is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of river traverses", "variables": {}}
{"nl": "which city that is a capital has the most number of low points that _state_ is contained by ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is a capital and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what major city has the fewest names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is major and that is named the least number of name", "variables": {}}
{"nl": "what city does the _river_ traverse with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river traverses and whose population is population of sacramento", "variables": {}}
{"nl": "what place has an elevation larger than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what is the total density of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the smallest population", "variables": {}}
{"nl": "what state not containing _mountain_ has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what city has the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does _state_ not border that has the lowest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that california not borders and that has the smallest density", "variables": {}}
{"nl": "what capital city of _state_ is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is contained by state", "variables": {}}
{"nl": "what city that the _river_ does not traverse has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river not traverses and whose population is population of california", "variables": {}}
{"nl": "what state does not contain _place_ that contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that lake is contained by", "variables": {}}
{"nl": "what state does the _river_ border with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that colorado river borders and whose capital is sacramento", "variables": {}}
{"nl": "what is the state with borders on the _river_ that has a low point outside of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and whose low point is not low point of california", "variables": {}}
{"nl": "which state does _state_ not border but contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and that city is contained by", "variables": {}}
{"nl": "what state does the _river_ border wtih a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river borders and whose high point is death valley", "variables": {}}
{"nl": "what state has a high point of _place_ and is also the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose high point is high point of california", "variables": {}}
{"nl": "what state 's low point is not _place_ and has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose capital is city", "variables": {}}
{"nl": "what is the total population of a state next to _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ) ) )", "can": "total population of state that california borders", "variables": {}}
{"nl": "what state borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that borders california and that california borders", "variables": {}}
{"nl": "what state 's capital is not _city_ and area is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is not area of usa", "variables": {}}
{"nl": "which state with a capital of _city_ has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state whose capital is sacramento and whose high point is death valley", "variables": {}}
{"nl": "what is the elevation of a mountain found outside of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ) )", "can": "elevation of mountain that not is contained by california", "variables": {}}
{"nl": "what lakes are not located in _state_ and larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is larger than area of usa", "variables": {}}
{"nl": "what major river traverses a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that is major and that traverses city", "variables": {}}
{"nl": "what state 's high point is the high point of_state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is high point of california", "variables": {}}
{"nl": "what state not bordering _state_ is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and that city not is contained by", "variables": {}}
{"nl": "what is the state high point where _lake_ is contained ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ) )", "can": "high point of state that lake tahoe is contained by", "variables": {}}
{"nl": "what state has a smaller population than _state_ and does not have the _river_ go through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not traverses and whose population is smaller than population of california", "variables": {}}
{"nl": "what state bordering _state_ has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that california borders and whose high point is death valley", "variables": {}}
{"nl": "which state with a capital other than _city_ has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is population of usa", "variables": {}}
{"nl": "what state with a high point of _place_ has a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is death valley and whose population is smaller than population of usa", "variables": {}}
{"nl": "name a state that borders _state_ and has the same area as _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california borders and whose area is area of california", "variables": {}}
{"nl": "what is the state traversed by the _river_ that does n't border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that not borders california and that colorado river traverses", "variables": {}}
{"nl": "what capital city has a larger area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is a capital and whose area is larger than area of usa", "variables": {}}
{"nl": "what state bordered by the _river_ has the least number of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of river borders", "variables": {}}
{"nl": "what 's the place with the lowest elevation ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )", "can": "elevation of place that has the smallest elevation", "variables": {}}
{"nl": "what pace that is the high point of _state_ is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by the most number of state", "variables": {}}
{"nl": "what state contains _place_ and a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that city is contained by", "variables": {}}
{"nl": "which place is the high point of _state_ with an elevation lower than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is high point of california and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "which states do not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that death valley not is contained by", "variables": {}}
{"nl": "what state not containing _city_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that high point of california is contained by", "variables": {}}
{"nl": "name the city outside of _state_ that is the capital of the highest number of states .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is capital of the most number of state", "variables": {}}
{"nl": "what city is the capital of _state_ that has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is capital of california and whose area is larger than area of usa", "variables": {}}
{"nl": "what place within _state_ is within the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by california and that is contained by the least number of capital of california", "variables": {}}
{"nl": "which state is _city_ in with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that sacramento is contained by and that has the smallest density", "variables": {}}
{"nl": "what city is in the most states but not in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what state borders _state_ with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that borders california and whose low point is death valley", "variables": {}}
{"nl": "what river that does not traverse _city_ does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string next_to_river_state ) ( string ! = ) _state_ ) )", "can": "river that not traverses sacramento and that not borders california", "variables": {}}
{"nl": "which state is contained by the least of the country and its capital is _city_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that is contained by the least number of country", "variables": {}}
{"nl": "how many states do not share a border with _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ) )", "can": "number of state that not borders california", "variables": {}}
{"nl": "which mountain has the highest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) )", "can": "mountain that has the largest elevation", "variables": {}}
{"nl": "name the state which does not have a _city_ capital and has a larger population than _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is larger than population of california", "variables": {}}
{"nl": "what state with a capital of _city_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that river not traverses", "variables": {}}
{"nl": "which city is _place_ in with an area different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is not area of california", "variables": {}}
{"nl": "what river not traversing _state_ traverses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses the least number of state", "variables": {}}
{"nl": "that place contained by _state_ also contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) _city_ ) )", "can": "place that is contained by california and that is contained by sacramento", "variables": {}}
{"nl": "what place is a state low point that 's not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is low point of state", "variables": {}}
{"nl": "what place with a lower elevation than _place_ has a _state_ low point , too ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is low point of california and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "what state does _state_ border with the fewest rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of river traverses", "variables": {}}
{"nl": "what state with a low point that is not _place_ is not contained by a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that place not is contained by", "variables": {}}
{"nl": "which state contains _lake_ while maintaining a population less than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what major city has an area equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is major and whose area is area of california", "variables": {}}
{"nl": "which city is a capital having the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is a capital and whose area is area of lake tahoe", "variables": {}}
{"nl": "what river traverses _state_ with a length larger than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses california and whose length is larger than length of colorado river", "variables": {}}
{"nl": "what is the total population of the state with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ) ) )", "can": "total population of state whose low point is death valley", "variables": {}}
{"nl": "what state that is within the usa is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of state borders", "variables": {}}
{"nl": "what capital city of _state_ is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is capital of the least number of state", "variables": {}}
{"nl": "which state high point is _place_ and does not share the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose high point is not high point of california", "variables": {}}
{"nl": "which state capitol surrounds _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ) )", "can": "capital of state that mount whitney is contained by", "variables": {}}
{"nl": "what state with a _city_ capital has the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state is _place_ not in that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of state borders", "variables": {}}
{"nl": "what major city has a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is major and whose population is larger than population of usa", "variables": {}}
{"nl": "name the city not containing _place_ and no other places .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that place not is contained by", "variables": {}}
{"nl": "name a lake that is smaller then _lake_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ not traverse with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river not traverses and whose low point is death valley", "variables": {}}
{"nl": "what city not containing _place_ is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state is _place_ in that does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that state not borders", "variables": {}}
{"nl": "what state containing _mountain_ has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is area of usa", "variables": {}}
{"nl": "what state contains _lake_ and the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "what capital city of _state_ is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is contained by the least number of state", "variables": {}}
{"nl": "what country has the lowest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) )", "can": "country that has the smallest density", "variables": {}}
{"nl": "what state does not border _state_ but borders another sate ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that state borders", "variables": {}}
{"nl": "what state borders _state_ and its high point is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and whose high point is low point of california", "variables": {}}
{"nl": "what state does the _river_ traverse with a high point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose high point is not high point of california", "variables": {}}
{"nl": "what state is _lake_ in that _mountain_ is not ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that lake tahoe is contained by and that mount whitney not is contained by", "variables": {}}
{"nl": "what state within the usa has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that is contained by usa and that has the smallest area", "variables": {}}
{"nl": "what state does not contain _city_ nor _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that sacramento not is contained by and that death valley not is contained by", "variables": {}}
{"nl": "what lake has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake whose area is smaller than area of usa", "variables": {}}
{"nl": "which country contains _state_ that has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what is the capital of the state that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ) )", "can": "capital of state that death valley not is contained by", "variables": {}}
{"nl": "what city contains _place_ and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that not is contained by state", "variables": {}}
{"nl": "what is the low point of the state containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ) )", "can": "low point of state that sacramento is contained by", "variables": {}}
{"nl": "which state that is not in the us has a low point that is n't _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that not is contained by usa and whose low point is not death valley", "variables": {}}
{"nl": "which state has an area that is not the same as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state is _place_ in that contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has a population lower than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is not death valley and whose population is smaller than population of california", "variables": {}}
{"nl": "what mountain is found in the highest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that is contained by the most number of state", "variables": {}}
{"nl": "what river that borders _state_ traverses the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that traverses the most number of state", "variables": {}}
{"nl": "what state contains _mountain_ and has a population equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is population of california", "variables": {}}
{"nl": "which city that does n't contain _place_ also has no _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what city that is not named _city_ has a lower population than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is named sacramento and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state does not border _state_ and has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and whose capital is capital of california", "variables": {}}
{"nl": "what location not found in _state_ is contained by the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by california and that is contained by capital of california", "variables": {}}
{"nl": "what state 's lowest point is in _place_ and has the highest number of low points in _state_", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what is the state not traversed by the _river_ with a capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and whose capital is capital of california", "variables": {}}
{"nl": "what state not containing _lake_ has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of river borders", "variables": {}}
{"nl": "what places are in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) )", "can": "place that is contained by california", "variables": {}}
{"nl": "what city within _state_ has the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is contained by california and whose area is area of usa", "variables": {}}
{"nl": "what state not containing _place_ has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what city that is not in _state_ has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is contained by california and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what 's the state capital bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ) )", "can": "capital of state that colorado river borders", "variables": {}}
{"nl": "what state that is not within the usa contains the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that is contained by the least number of country", "variables": {}}
{"nl": "which state within the usa has the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state does the _river_ border that does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that city not is contained by", "variables": {}}
{"nl": "what state within the usa has an area that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is not area of california", "variables": {}}
{"nl": "what state is _place_ not in with an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the total population of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ) ) )", "can": "total population of state that sacramento not is contained by", "variables": {}}
{"nl": "what state borders _state_ that has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that borders california and whose population is not population of california", "variables": {}}
{"nl": "which state is within the usa having the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state bordering _state_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that california borders and that has the smallest population", "variables": {}}
{"nl": "what state that _mountain_ is not contained by has the most number of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of state borders", "variables": {}}
{"nl": "what is _state_ 's population figure ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string population_state_count ) ) )", "can": "population of california", "variables": {}}
{"nl": "what states , that do nt have _place_ as a high point , also do not have rivers through them ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that river not traverses", "variables": {}}
{"nl": "what state is traversed by the _river_ and does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that city not is contained by", "variables": {}}
{"nl": "what state that does not border _state_ has the most rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of river traverses", "variables": {}}
{"nl": "what city named _city_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that river not traverses", "variables": {}}
{"nl": "what state that does not contain _lake_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _lake_ and has a population less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what is the largest density state that 's traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that colorado river traverses and that has the largest density", "variables": {}}
{"nl": "what state within the usa contains _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that is contained by usa and that lake tahoe is contained by", "variables": {}}
{"nl": "what state 's capital is _city_ that has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is area of usa", "variables": {}}
{"nl": "what state does not contain _mountain_ and has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "how many places are not contained by _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ) )", "can": "number of place that not is contained by sacramento", "variables": {}}
{"nl": "which state that contains _mountain_ and does not have a bordering river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that river not borders", "variables": {}}
{"nl": "what city has the _river_ run through it , but also has no river run through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that river not traverses", "variables": {}}
{"nl": "which place contained by a city is not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is contained by city", "variables": {}}
{"nl": "what state is in the usa that does not have _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that is contained by usa and whose capital is not sacramento", "variables": {}}
{"nl": "what state not traversed by the _river_ contains no lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that lake not is contained by", "variables": {}}
{"nl": "which state contains _mountain_ but not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that mount whitney is contained by and that death valley not is contained by", "variables": {}}
{"nl": "what state is _place_ not in and a city is within .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that city is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse that does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that not borders state", "variables": {}}
{"nl": "which state has the most people and contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that mount whitney is contained by and that has the largest population", "variables": {}}
{"nl": "what state 's low point is not _place_ and contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and that capital of california is contained by", "variables": {}}
{"nl": "what state not bordering _state_ has a _state_ population number ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not borders california and whose population is population of california", "variables": {}}
{"nl": "what major river traverses the state of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string major_river ) ) )", "can": "river that traverses california and that is major", "variables": {}}
{"nl": "what state does the _river_ not border that contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what city has a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city whose population is larger than population of california", "variables": {}}
{"nl": "what is the population of the _state_ capital city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ) )", "can": "population of city that is capital of california", "variables": {}}
{"nl": "what state containing _place_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that death valley is contained by and that has the smallest area", "variables": {}}
{"nl": "what sate does not border _state_ or the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that california not borders and that colorado river not borders", "variables": {}}
{"nl": "what state does not border _state_ and has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of river borders", "variables": {}}
{"nl": "what location outside of _state_ has the fewest state low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is low point of the least number of state", "variables": {}}
{"nl": "which state 's popluation is smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose population is smaller than population of california", "variables": {}}
{"nl": "what state not containing _city_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that state borders", "variables": {}}
{"nl": "what state that is not within the usa has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose low point is place", "variables": {}}
{"nl": "what city not called _city_ has the least number of names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is named the least number of name", "variables": {}}
{"nl": "what state borders _state_ with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that borders california and whose low point is not death valley", "variables": {}}
{"nl": "what state does the _river_ traverse with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state does not border _state_ and contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of place is contained by", "variables": {}}
{"nl": "what state does not contain _mountain_ but does contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what city equals the us in population and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley not is contained by and whose population is population of usa", "variables": {}}
{"nl": "which state has a low point that is not _place_ and an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is area of california", "variables": {}}
{"nl": "what city not traversed by the _river_ has the most _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what is the density of a country ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string density_country_count ) ) )", "can": "density of country", "variables": {}}
{"nl": "what country shares the same population as _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country whose population is population of sacramento", "variables": {}}
{"nl": "what state not containing _mountain_ also does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what place is within _state_ with an elevation lower than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what city _state_ has the least number of low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state has a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose low point is not death valley", "variables": {}}
{"nl": "what place is contained by the fewest states and does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the least number of state", "variables": {}}
{"nl": "how many major lakes are there ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ) )", "can": "number of lake that is major", "variables": {}}
{"nl": "what state with a high point of _place_ is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that is contained by country", "variables": {}}
{"nl": "what are the names of the cities not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is named name", "variables": {}}
{"nl": "what river that traverses _city_ has a longer length than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses sacramento and whose length is larger than length of colorado river", "variables": {}}
{"nl": "what is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string high_point_state_place ) ) )", "can": "high point of california", "variables": {}}
{"nl": "which state has borders with _state_ and no high point locations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and whose high point is not place", "variables": {}}
{"nl": "what state that lacks a _river_ traversal has a population greater than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not traverses and whose population is larger than population of california", "variables": {}}
{"nl": "what country has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state location of _lake_ also contains the most _state_ high points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what place within _city_ has an elevation that is less than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what is the total elevation of a place ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place", "variables": {}}
{"nl": "what state contains _mountain_ and _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that mount whitney is contained by and that death valley is contained by", "variables": {}}
{"nl": "what city is not within _state_ and has the least number of _state_ 's low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is contained by california and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state has the high point of _place_ and a different area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is not area of usa", "variables": {}}
{"nl": "what state does not have _place_ and has the fewest _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what is the high point of a state with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ) )", "can": "high point of state whose low point is not death valley", "variables": {}}
{"nl": "what city that is not a capital has a populaton smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is a capital and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what is a river that does n't border _state_ and is a different length than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not borders california and whose length is not length of colorado river", "variables": {}}
{"nl": "what capital city of _state_ contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is capital of california and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which city is named _city_ that contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is named sacramento and that the most number of low point of california is contained by", "variables": {}}
{"nl": "which state has the high point of _place_ and contains _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and that high point of california is contained by", "variables": {}}
{"nl": "what 's a state with a population not equal to that of the usa nor whose high point is _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is not death valley and whose population is not population of usa", "variables": {}}
{"nl": "what state is _lake_ in with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is area of california", "variables": {}}
{"nl": "how long are the rivers not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ) )", "can": "length of river that not borders california", "variables": {}}
{"nl": "what state does the _river_ border with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river borders and whose low point is not death valley", "variables": {}}
{"nl": "what state 's capital is _city_ and contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of place is contained by", "variables": {}}
{"nl": "what state that is not within the usa is not borderd by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that not is contained by usa and that colorado river not borders", "variables": {}}
{"nl": "what state within the usa contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that mountain is contained by", "variables": {}}
{"nl": "what is the total population of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the largest area", "variables": {}}
{"nl": "how many rivers have the largest length ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ) )", "can": "number of river that has the largest length", "variables": {}}
{"nl": "what city is the capital of _state_ and has the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is capital of california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what lake is not located within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that not is contained by state", "variables": {}}
{"nl": "what state has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that has the largest area", "variables": {}}
{"nl": "what city that 's not _city_ has an area that 's not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state without a _river_ traversal borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that borders the most number of state", "variables": {}}
{"nl": "what state is _place_ not in with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what mountain within _state_ has an elevation high er than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "which state is bordered by _state_ with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that california borders and that has the largest area", "variables": {}}
{"nl": "what is a state that is not within the usa does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string next_to_state_state ) ( string ! = ) _state_ ) )", "can": "state that not is contained by usa and that not borders california", "variables": {}}
{"nl": "what major city has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is major and whose area is larger than area of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse and does not contain _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that high point of california not is contained by", "variables": {}}
{"nl": "what state does not border _state_ that is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not borders california and that is contained by the most number of country", "variables": {}}
{"nl": "what state borders _state_ with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that borders california and whose high point is not death valley", "variables": {}}
{"nl": "what state is _mountain_ not in that has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that mount whitney not is contained by and whose low point is death valley", "variables": {}}
{"nl": "what state contains _place_ and has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose low point is not place", "variables": {}}
{"nl": "what 's the total population of the most populated city ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the largest population", "variables": {}}
{"nl": "what state borders _state_ and contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that borders california and that death valley is contained by", "variables": {}}
{"nl": "what state has a high point other than _place_ and is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that not is contained by country", "variables": {}}
{"nl": "what major city does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string major_city ) ) )", "can": "city that death valley not is contained by and that is major", "variables": {}}
{"nl": "what state does not contain _lake_ and has _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what is the total population of a city contained by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ) ) )", "can": "total population of city that is contained by california", "variables": {}}
{"nl": "what us state has a smaller population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that is contained by usa and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what city is not _city_ and is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that river not traverses", "variables": {}}
{"nl": "what is the location of the state high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of state", "variables": {}}
{"nl": "what is the total density of the country ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string density_country_count ) ) ) )", "can": "total density of country", "variables": {}}
{"nl": "what state has a low point other than _place_ and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that lake not is contained by", "variables": {}}
{"nl": "what major city is smaller in size than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is major and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state not containing _mountain_ does not contain a low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what place is the high point of _state_ with an elevation different than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is high point of california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state containing _mountain_ has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that mount whitney is contained by and whose high point is not death valley", "variables": {}}
{"nl": "what is the population of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string population_state_count ) ) )", "can": "population of state that has the largest population", "variables": {}}
{"nl": "what state is _city_ not in and has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento not is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what state borders _state_ but does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that not borders state", "variables": {}}
{"nl": "what city has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which river traverses _state_ and borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string = ) _state_ ) )", "can": "river that traverses california and that borders california", "variables": {}}
{"nl": "what is the total length of the shortest river ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ( string len_river_length ) ) ) )", "can": "total length of river that has the smallest length", "variables": {}}
{"nl": "how many cities are the capital of _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ) )", "can": "number of city that is capital of california", "variables": {}}
{"nl": "which city is not named _city_ having the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that not is named sacramento and that has the smallest population", "variables": {}}
{"nl": "what state does the _river_ border and traverses it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that river traverses", "variables": {}}
{"nl": "what state 's low point is _place_ and has an area that is not the same as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is not area of usa", "variables": {}}
{"nl": "what capital city has the fewest names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is a capital and that is named the least number of name", "variables": {}}
{"nl": "what state contains _place_ with an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state borders _state_ with the capital that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and whose capital is capital of california", "variables": {}}
{"nl": "what capital city of _state_ has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is capital of california and whose area is larger than area of california", "variables": {}}
{"nl": "what mountain that is not within _state_ has the largest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string max ) ( string elevation_mountain_length ) ) )", "can": "mountain that not is contained by california and that has the largest elevation", "variables": {}}
{"nl": "what state within the usa does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that is contained by usa and that california not borders", "variables": {}}
{"nl": "what city differs from _lake_ in area and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which city other than _city_ has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state with a _place_ low point has less area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which country has a smaller population than the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country whose population is smaller than population of california", "variables": {}}
{"nl": "what state does the _river_ traverse and contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of city is contained by", "variables": {}}
{"nl": "how many states contain _place_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ) )", "can": "number of state that death valley is contained by", "variables": {}}
{"nl": "what state not containing _mountain_ has a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what state with a capital other than _city_ does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that mountain not is contained by", "variables": {}}
{"nl": "what state does _state_ border that has a high point different from _state_ 's low poitn ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and whose high point is not low point of california", "variables": {}}
{"nl": "what lake is not within _state_ and not in a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string loc_lake_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that not is contained by california and that not is contained by state", "variables": {}}
{"nl": "how many countries have the largest density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ) )", "can": "number of country that has the largest density", "variables": {}}
{"nl": "what state contains _lake_ with a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what state that is traversed by the _river_ is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of river traverses", "variables": {}}
{"nl": "what state lacks river borders and has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that river not borders", "variables": {}}
{"nl": "what state not within the usa has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of river borders", "variables": {}}
{"nl": "what country containing _state_ exceeds the us in area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what state is _mountain_ not in with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what is the capital of the state that has a _city_ capital ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string capital_state_city ) ) )", "can": "capital of state whose capital is sacramento", "variables": {}}
{"nl": "what is the high point of the state that _state_ borders ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ) )", "can": "high point of state that california borders", "variables": {}}
{"nl": "what state with a capital other than _city_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of city is contained by", "variables": {}}
{"nl": "which cities have the smallest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) ) )", "can": "number of city that has the smallest population", "variables": {}}
{"nl": "what state does _state_ not border with its low point being _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and whose low point is low point of california", "variables": {}}
{"nl": "what state within the usa is bordered by the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of state borders", "variables": {}}
{"nl": "which state that does not contain _place_ and has a low point of _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that death valley not is contained by and whose low point is death valley", "variables": {}}
{"nl": "which major city has the least number of high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is major and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state that 's home to _lake_ has a population unequal to the united states figure ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string low_point_state_place ) ) )", "can": "low point of california", "variables": {}}
{"nl": "what state are monutains not in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mountain not is contained by", "variables": {}}
{"nl": "what state is _mountain_ in with the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse with a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river traverses and whose population is smaller than population of california", "variables": {}}
{"nl": "what is a major city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) )", "can": "city that is major", "variables": {}}
{"nl": "which state 's capital is not _city_ and has the most of _state_ 's low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that the most number of low point of california is contained by", "variables": {}}
{"nl": "name the state with a _place_ high point that has the low point of a _state_ high point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose low point is high point of california", "variables": {}}
{"nl": "what state borders _state_ and has more area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california borders and whose area is larger than area of california", "variables": {}}
{"nl": "which city does n't have _place_ and has a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that river traverses", "variables": {}}
{"nl": "which cities have an area not equal to the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city whose area is not area of california", "variables": {}}
{"nl": "what state capital is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ) )", "can": "capital of state that colorado river not traverses", "variables": {}}
{"nl": "what state is not in the usa and does not have a river traversing it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that river not traverses", "variables": {}}
{"nl": "which state that does n't contain _place_ has the fewest number of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state does _state_ not border with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and whose capital is not city", "variables": {}}
{"nl": "what state has the same area as _state_ and is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is area of california", "variables": {}}
{"nl": "what state which does n't have _city_ as a capital does not have a city capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose capital is not city", "variables": {}}
{"nl": "what state does not contain _lake_ and has the fewest low poitns of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ within that has the fewest river traverse ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of river traverses", "variables": {}}
{"nl": "which state is bordered by the _river_ and other river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that river borders", "variables": {}}
{"nl": "how long is the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty _river_ ( string len_river_length ) ) )", "can": "length of colorado river", "variables": {}}
{"nl": "what state not containing _mountain_ has a high point that 's a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what city is the capital of _state_ that contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is capital of california and that low point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ not in that does not have _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what city is a capital that does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is a capital and that low point of california not is contained by", "variables": {}}
{"nl": "which state does not contain _lake_ and has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that lake tahoe not is contained by and that has the largest area", "variables": {}}
{"nl": "what state not bordering _state_ has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that california not borders and whose low point is death valley", "variables": {}}
{"nl": "what state contained by the usa has a low point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and whose low point is high point of california", "variables": {}}
{"nl": "what state not containing _lake_ has the most capitals of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state with a low point of _place_ has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose low point is death valley and whose high point is not death valley", "variables": {}}
{"nl": "what city is _place_ not in that has a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what state borders _state_ and also contains the least number of high point of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what major lake has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is major and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state not within the usa has a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that not is contained by usa and whose capital is not sacramento", "variables": {}}
{"nl": "what state with the same population as _state_ does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is population of california", "variables": {}}
{"nl": "what state 's capital is _city_ and has the fewest rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of river traverses", "variables": {}}
{"nl": "how many countries have the smallest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ) )", "can": "number of country that has the smallest population", "variables": {}}
{"nl": "what city is not within _state_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is contained by california and whose population is population of usa", "variables": {}}
{"nl": "what state not containing _mountain_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what state does not contain _city_ but does contain the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state bordering _state_ has a _state_ high point that is their low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and whose low point is high point of california", "variables": {}}
{"nl": "what is the total area of the state with the smallest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that has the smallest area", "variables": {}}
{"nl": "what state is _city_ in with its high point not being _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that sacramento is contained by and whose high point is not death valley", "variables": {}}
{"nl": "what 's a city with an area larger than the usa , where the _river_ does n't run through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is larger than area of usa", "variables": {}}
{"nl": "what state does not border _state_ and has no low points ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and whose low point is not place", "variables": {}}
{"nl": "what city within _state_ has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is named the most number of name", "variables": {}}
{"nl": "what river goes through _city_ outside the city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that not traverses city", "variables": {}}
{"nl": "this state is not bounded by any river .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that river not borders", "variables": {}}
{"nl": "what city is not named _city_ and has a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is named sacramento and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state does the _river_ not traverse and is not in a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that place not is contained by", "variables": {}}
{"nl": "what city not named _city_ has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is smaller than area of california", "variables": {}}
{"nl": "what place outside of _city_ has a smaller elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "which state is _city_ not in but contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that place is contained by", "variables": {}}
{"nl": "state that includes _place_ and touches the state .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that borders state", "variables": {}}
{"nl": "what country not containing _state_ has a population equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california not is contained by and whose population is population of usa", "variables": {}}
{"nl": "what state has _city_ within and also has the highest city count ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "how many places are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "number of place", "variables": {}}
{"nl": "what state not having a _place_ low point has a greater population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is not death valley and whose population is larger than population of usa", "variables": {}}
{"nl": "what state does not contain _place_ and has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that death valley not is contained by and that has the smallest density", "variables": {}}
{"nl": "what state borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that river borders", "variables": {}}
{"nl": "what place is the low point of _state_ with an elevation that is not equal to _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is low point of california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "which state has a capital other than _city_ and is not within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that place is contained by", "variables": {}}
{"nl": "what city is a capital and does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is a capital and that place not is contained by", "variables": {}}
{"nl": "what is a place with a lower elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "which state that is not capitaled by _city_ has the most state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of state borders", "variables": {}}
{"nl": "which state is n't traversed by the _river_ and has a _state_ low point as a high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose high point is low point of california", "variables": {}}
{"nl": "how many mountains are not in _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ) )", "can": "number of mountain that not is contained by california", "variables": {}}
{"nl": "what state with a low point other than _place_ contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that lake is contained by", "variables": {}}
{"nl": "what state has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that has the smallest area", "variables": {}}
{"nl": "what state contianing _lake_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what is the population of a city not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ) )", "can": "population of city that colorado river not traverses", "variables": {}}
{"nl": "what river that traverses _city_ has a length that is not equal to the _river_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses sacramento and whose length is not length of colorado river", "variables": {}}
{"nl": "how many states do not contain _lake_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ) )", "can": "number of state that lake tahoe not is contained by", "variables": {}}
{"nl": "how many lakes are not in _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ) )", "can": "number of lake that not is contained by california", "variables": {}}
{"nl": "what state does the _river_ traverse with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that colorado river traverses and that has the smallest population", "variables": {}}
{"nl": "what states outside of the usa do not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that not is contained by usa and that sacramento not is contained by", "variables": {}}
{"nl": "what city is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by state", "variables": {}}
{"nl": "what is the area of a state with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ) )", "can": "area of state whose capital is not sacramento", "variables": {}}
{"nl": "what state does not contain _mountain_ and has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that mount whitney not is contained by and that has the largest population", "variables": {}}
{"nl": "what capital city of _state_ contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is capital of california and that the least number of place is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that state not borders", "variables": {}}
{"nl": "what major river traverses the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that is major and that traverses the most number of city", "variables": {}}
{"nl": "what city that is not in _state_ has the most high points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is contained by california and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which state 's lowest point is not _place_ but is within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that place is contained by", "variables": {}}
{"nl": "what state is _lake_ in that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that lake tahoe is contained by and that california not borders", "variables": {}}
{"nl": "which state 's capital is _city_ with a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is sacramento and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what is the total area of the state that the _river_ borders ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that colorado river borders", "variables": {}}
{"nl": "what state that does not border _state_ does not have an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not borders california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what is a place not within _city_ that is within the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by sacramento and that is contained by capital of california", "variables": {}}
{"nl": "what state with a low point other than _place_ is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that is contained by the least number of country", "variables": {}}
{"nl": "which state borders _state_ with the most lakes in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of lake is contained by", "variables": {}}
{"nl": "name the state in which _place_ is n't the low point and also does n't contain a mountain .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that mountain not is contained by", "variables": {}}
{"nl": "which state with a low point location does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose low point is place", "variables": {}}
{"nl": "what state is _place_ not in with a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city with the name _city_ does not have any _state_ low points ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is named sacramento and that low point of california not is contained by", "variables": {}}
{"nl": "how many states do not have _city_ within them ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ) )", "can": "number of state that sacramento not is contained by", "variables": {}}
{"nl": "what state with a low point other than _place_ contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that low point of california is contained by", "variables": {}}
{"nl": "what state has a low point other than _place_ with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state whose low point is not death valley and that has the largest area", "variables": {}}
{"nl": "what state that is not within the usa has a population that is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not is contained by usa and whose population is not population of usa", "variables": {}}
{"nl": "name the major river that 's longer than the _river_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that is major and whose length is larger than length of colorado river", "variables": {}}
{"nl": "what is a place not within _city_ hat contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the most number of capital of california", "variables": {}}
{"nl": "what state bordering the _river_ does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that colorado river borders and that sacramento not is contained by", "variables": {}}
{"nl": "what state with a high point of _place_ contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is death valley and that capital of california is contained by", "variables": {}}
{"nl": "what state has the capital of _city_ with a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is sacramento and whose population is not population of california", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of city is contained by", "variables": {}}
{"nl": "what state in the usa has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( string density_state_count ) ) )", "can": "state that is contained by usa and that has the smallest density", "variables": {}}
{"nl": "what city does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that high point of california not is contained by", "variables": {}}
{"nl": "what state not contaiing _place_ has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley not is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what mountain is within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) )", "can": "mountain that is contained by california", "variables": {}}
{"nl": "which states in the usa have areas larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is larger than area of california", "variables": {}}
{"nl": "name the state not containing _lake_ which has the highest number of _state_ high points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what city within _state_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is contained by california and whose population is larger than population of usa", "variables": {}}
{"nl": "which lake is not in _state_ with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state outside of the us has a high point place .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose high point is place", "variables": {}}
{"nl": "which river is the shortest ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ( string len_river_length ) ) )", "can": "length of river that has the smallest length", "variables": {}}
{"nl": "which states low point is not _place_ and has the least number of border states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of state borders", "variables": {}}
{"nl": "which _state_ city is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is contained by california and that river traverses", "variables": {}}
{"nl": "which major city has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is major and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "how manys states border _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ) )", "can": "number of state that borders california", "variables": {}}
{"nl": "which _state_ low point is not contained within the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that not is contained by state", "variables": {}}
{"nl": "what state does _state_ border and is contained by the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california borders and that is contained by country", "variables": {}}
{"nl": "what state not bordering _state_ does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that not borders california and that death valley not is contained by", "variables": {}}
{"nl": "what city does the _river_ not traverse with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that colorado river not traverses and that has the smallest density", "variables": {}}
{"nl": "what city is named _city_ and is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is contained by the least number of state", "variables": {}}
{"nl": "which state is not bordered by the _river_ and has it 's lowest point equal to _state_ 's highest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose low point is high point of california", "variables": {}}
{"nl": "which states with no _river_ borders also have borders in the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that borders the least number of state", "variables": {}}
{"nl": "what state not contanining _city_ has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose high point is place", "variables": {}}
{"nl": "what state does not have _city_ as its capitals and has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose capital is not sacramento and whose high point is not death valley", "variables": {}}
{"nl": "what state does the _river_ traverse that borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that colorado river traverses and that california borders", "variables": {}}
{"nl": "what lake contained by _state_ is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string min ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "how many rivers do n't traverse _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ) )", "can": "number of river that not traverses california", "variables": {}}
{"nl": "what state contains _lake_ and has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that lake tahoe is contained by and that has the largest density", "variables": {}}
{"nl": "which city has a lower population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) )", "can": "state that has the largest density", "variables": {}}
{"nl": "the state with the greatest density has a total area of what amount ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that has the largest density", "variables": {}}
{"nl": "what place is not within _city_ with an elevation equal to _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what state contained by a country contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that is contained by country", "variables": {}}
{"nl": "which state does the _river_ not border with its low point being _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river not borders and whose low point is death valley", "variables": {}}
{"nl": "which state is _city_ not in that a river traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that river traverses", "variables": {}}
{"nl": "what state contains _city_ with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what state with _river_ borders contains the greatest amount of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of city is contained by", "variables": {}}
{"nl": "which state within the united states has the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of place is contained by", "variables": {}}
{"nl": "what state with no _state_ border has _place_ as a high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that not borders california and whose high point is death valley", "variables": {}}
{"nl": "which city that is capital of _state_ and has the largest population", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that is capital of california and that has the largest population", "variables": {}}
{"nl": "what place within _city_ as well as a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that is contained by state", "variables": {}}
{"nl": "what place is contained by _city_ that is the high point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that is high point of state", "variables": {}}
{"nl": "what state containing _city_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what city is _place_ in with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley is contained by and whose population is population of california", "variables": {}}
{"nl": "what city is _place_ not in that the _river_ does not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that death valley not is contained by and that colorado river not traverses", "variables": {}}
{"nl": "which city is a capital with a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is a capital and whose population is larger than population of usa", "variables": {}}
{"nl": "what state bordering _state_ has a capital that is a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and whose capital is city", "variables": {}}
{"nl": "what is the total population of the country that _state_ is within ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ) ) )", "can": "total population of country that california is contained by", "variables": {}}
{"nl": "which capital city of _state_ is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is capital of the most number of state", "variables": {}}
{"nl": "what city not named _city_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that not is named sacramento and that has the smallest area", "variables": {}}
{"nl": "what is the density of a state not containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string density_state_count ) ) )", "can": "density of state that mount whitney not is contained by", "variables": {}}
{"nl": "what city that 's not in _state_ has a population different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is contained by california and whose population is not population of california", "variables": {}}
{"nl": "name the city not in _state_ with a larger area than the us .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is larger than area of usa", "variables": {}}
{"nl": "what state does the _river_ not border that has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose high point is place", "variables": {}}
{"nl": "what states do not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) )", "can": "state that not borders california", "variables": {}}
{"nl": "which place is the highest point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is high point of california", "variables": {}}
{"nl": "what state borders the _river_ and another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that borders state", "variables": {}}
{"nl": "what river does not traverse _city_ but traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses state", "variables": {}}
{"nl": "what state does not contain _lake_ and is bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that river borders", "variables": {}}
{"nl": "what state is _city_ in that does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that place not is contained by", "variables": {}}
{"nl": "what state within the usa contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what major river 's length is equal to the _river_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that is major and whose length is length of colorado river", "variables": {}}
{"nl": "which state does the _river_ not border and has a different area from _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what river bordesrs _state_ and traverses a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that borders california and that traverses city", "variables": {}}
{"nl": "which state 's high point is not _place_ and has a population higher than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is not death valley and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what is the capital of the state containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ) )", "can": "capital of state that death valley is contained by", "variables": {}}
{"nl": "which state does n't have _city_ as the capital and is larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is larger than area of usa", "variables": {}}
{"nl": "what 's the state that does n't border _state_ but has river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that river borders", "variables": {}}
{"nl": "what state that does not contain the _river_ has the largest area", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that colorado river not traverses and that has the largest area", "variables": {}}
{"nl": "what 's the state with a population different than the usa 's that does n't contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what state has a capital of _city_ and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that not borders state", "variables": {}}
{"nl": "what states are n't contained in the united states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) )", "can": "state that not is contained by usa", "variables": {}}
{"nl": "which state does not   contain _lake_ nor border the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that lake tahoe not is contained by and that colorado river not borders", "variables": {}}
{"nl": "what river borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders the most number of state", "variables": {}}
{"nl": "what city named _city_ has a larger area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is larger than area of usa", "variables": {}}
{"nl": "which state with a capital other than _city_ contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of lake is contained by", "variables": {}}
{"nl": "what state is within the usa and has a population different from _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that is contained by usa and whose population is not population of sacramento", "variables": {}}
{"nl": "what city does the _river_ not travesre and has the fewest names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is named the least number of name", "variables": {}}
{"nl": "which states have a population smaller than _city_ and do n't contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what is the low point of the state containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ) )", "can": "low point of state that death valley is contained by", "variables": {}}
{"nl": "which state in the us is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that is contained by usa and that colorado river borders", "variables": {}}
{"nl": "what state not containing _mountain_ has an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what is the total density of a state not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string density_state_count ) ) ) )", "can": "total density of state that california not borders", "variables": {}}
{"nl": "what capital city has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is a capital and whose population is not population of california", "variables": {}}
{"nl": "for a state with no _place_ high point , what is the total density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string density_state_count ) ) ) )", "can": "total density of state whose high point is not death valley", "variables": {}}
{"nl": "what is a city with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state whose high point is _place_   has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state does the _river_ border with its high point not being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and whose high point is not place", "variables": {}}
{"nl": "what is the total density of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string density_state_count ) ) ) )", "can": "total density of state that not borders california", "variables": {}}
{"nl": "which state 's low point is _place_ and is borderd by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that river borders", "variables": {}}
{"nl": "what city that is not _city_ has a population that is not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is named sacramento and whose population is not population of sacramento", "variables": {}}
{"nl": "what is the length of a major river ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ) )", "can": "length of river that is major", "variables": {}}
{"nl": "what city does the _river_ not traverse that contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is contained by the least number of state", "variables": {}}
{"nl": "what _state_ cities are less populous than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is contained by california and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what major city does the _river_ traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string major_city ) ) )", "can": "city that colorado river traverses and that is major", "variables": {}}
{"nl": "what state is _city_ in that contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "which capital city has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is a capital and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state not traversed by the _river_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose capital is not city", "variables": {}}
{"nl": "what state has a low point of _place_ and has a high point which is _state_ 's lowest point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose high point is low point of california", "variables": {}}
{"nl": "which us state has the population of the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that is contained by usa and whose population is population of usa", "variables": {}}
{"nl": "what capital city has the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is a capital and whose area is area of usa", "variables": {}}
{"nl": "what lake has an area different from _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake whose area is not area of lake tahoe", "variables": {}}
{"nl": "what place is within _state_ that has the smallest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that is contained by california and that has the smallest elevation", "variables": {}}
{"nl": "what state within the usa has a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that is contained by usa and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what major city has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is major and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what is the total density of a city ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string density_city_count ) ) ) )", "can": "total density of city", "variables": {}}
{"nl": "what state does _state_ border with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california borders and whose population is larger than population of california", "variables": {}}
{"nl": "name a state that contains _mountain_ and does not have the same high point as _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what state is _mountain_ in that has the most river borders", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of river borders", "variables": {}}
{"nl": "name the state that has the largest density that the _river_ does not go through .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that colorado river not traverses and that has the largest density", "variables": {}}
{"nl": "what state has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose population is larger than population of california", "variables": {}}
{"nl": "what state is within the usa and has the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of river traverses", "variables": {}}
{"nl": "what river with the fewest state borders does not border _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that borders the least number of state", "variables": {}}
{"nl": "what state does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that mount whitney not is contained by", "variables": {}}
{"nl": "what state is _place_ not in with a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley not is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which state contains river borders and is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that river borders", "variables": {}}
{"nl": "what state is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that the most number of state borders", "variables": {}}
{"nl": "what 's is elevation of the tallest mountain ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) )", "can": "elevation of mountain that has the largest elevation", "variables": {}}
{"nl": "what state containing _lake_ has the fewest amount of contained places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what state is _mountain_ in with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and whose capital is not city", "variables": {}}
{"nl": "which state 's low point is _place_ and is traversed by rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that river traverses", "variables": {}}
{"nl": "how many lakes have the largest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string max ) ( string area_lake_length^2 ) ) ) )", "can": "number of lake that has the largest area", "variables": {}}
{"nl": "what state containing _place_ has an area that is not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which city is the capital of _state_ and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that not is contained by state", "variables": {}}
{"nl": "name the river traversing _city_ that has the fewest city traversals overall .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses the least number of city", "variables": {}}
{"nl": "what state containing _city_ has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose capital is city", "variables": {}}
{"nl": "what state without a _state_ border has the greatest amount of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of river borders", "variables": {}}
{"nl": "what state does not contain _city_ but its low point is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what state does _state_ border that contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state borders _state_ but does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that not borders state", "variables": {}}
{"nl": "which river borders _state_ as well as another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that borders state", "variables": {}}
{"nl": "what city 's population is equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city whose population is population of sacramento", "variables": {}}
{"nl": "what state that does not border _state_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and whose low point is not high point of california", "variables": {}}
{"nl": "what city does not contain _place_ that has the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that not borders state", "variables": {}}
{"nl": "what elevation is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty _state_ ( string low_point_state_place ) ) ( string elevation_place_length ) ) )", "can": "elevation of low point of california", "variables": {}}
{"nl": "what state is _lake_ not in with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is population of usa", "variables": {}}
{"nl": "what state with a high point of _place_ is contained by a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that place is contained by", "variables": {}}
{"nl": "what city is the capital of _state_ and area is the size of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is capital of california and whose area is area of usa", "variables": {}}
{"nl": "which river does not traverses _state_ with the shortest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string min ) ( string len_river_length ) ) )", "can": "river that not traverses california and that has the smallest length", "variables": {}}
{"nl": "what city is the capital of _state_ with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is capital of california and whose area is smaller than area of california", "variables": {}}
{"nl": "what state with the least density contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that mount whitney is contained by and that has the smallest density", "variables": {}}
{"nl": "which river traverses _state_ but not the capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses california and that not traverses capital of california", "variables": {}}
{"nl": "what place is not within _city_ with an elevation equal to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what state without a _place_ low point has the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of place is contained by", "variables": {}}
{"nl": "what states border _state_ and are located in a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that borders california and that is contained by country", "variables": {}}
{"nl": "which city is _place_ in that is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that death valley is contained by and that is capital of california", "variables": {}}
{"nl": "what state has a high point other than _place_ with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is not death valley and whose population is larger than population of california", "variables": {}}
{"nl": "what is a city that is not within _place_ and has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that death valley not is contained by and that has the smallest density", "variables": {}}
{"nl": "what state 's low point is _place_ and has the low point of place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose low point is place", "variables": {}}
{"nl": "what state is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by the most number of country", "variables": {}}
{"nl": "what is the total population of a city named _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ) ) )", "can": "total population of city that is named sacramento", "variables": {}}
{"nl": "what state bordering the _river_ contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of place is contained by", "variables": {}}
{"nl": "what state does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that capital of california not is contained by", "variables": {}}
{"nl": "which _state_ city is smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is contained by california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which city is _place_ not in and does not have the lowest point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what state is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that the most number of river traverses", "variables": {}}
{"nl": "what state containing _mountain_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that borders state", "variables": {}}
{"nl": "what state does _state_ not border with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california not borders and whose population is larger than population of california", "variables": {}}
{"nl": "what state contains _place_ and the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "which state has a capital other than _city_ and contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that lake is contained by", "variables": {}}
{"nl": "what state with a low point other than _place_ is bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that state borders", "variables": {}}
{"nl": "what is a place that is not _city_ and has the fewest number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the least number of city", "variables": {}}
{"nl": "what state with a high point other than _place_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state does the _river_ run through with the fewest number of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state 's low point is not _place_ and capital is _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and whose capital is capital of california", "variables": {}}
{"nl": "what state not containing _lake_ has the fewest state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of state borders", "variables": {}}
{"nl": "what city is _city_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is named sacramento and whose population is population of usa", "variables": {}}
{"nl": "what place within _city_ has a different elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what city named _city_ is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that is named sacramento and that is capital of california", "variables": {}}
{"nl": "what state within the usa is not traversed by a rvier ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that river not traverses", "variables": {}}
{"nl": "what is a mountain with an elevation larger than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what _state_ location has an elevation other than that of _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state not containing _place_ has a bigger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what major city has a population that 's not equal to the us population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is major and whose population is not population of usa", "variables": {}}
{"nl": "which city not called _city_ has an area unequal to the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is not area of usa", "variables": {}}
{"nl": "how many states are in the us ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ) )", "can": "number of state that is contained by usa", "variables": {}}
{"nl": "which state 's high point is _place_ bordering another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that borders state", "variables": {}}
{"nl": "what state with a _river_ border contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of city is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that has the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what city not containing _place_ has the least numbered name ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is named the least number of name", "variables": {}}
{"nl": "what state is _lake_ not in and does not contain lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that lake not is contained by", "variables": {}}
{"nl": "what state does _state_ border but _mountain_ is not in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that california borders and that mount whitney not is contained by", "variables": {}}
{"nl": "what is the total elevation of the place with the smallest elevation ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that has the smallest elevation", "variables": {}}
{"nl": "what state does the _river_ border and has a high point of _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and whose high point is low point of california", "variables": {}}
{"nl": "which states have high point locations ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is place", "variables": {}}
{"nl": "what river not traversing _city_ does not traverse a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that not traverses city", "variables": {}}
{"nl": "what country that does n't contain _state_ has an area the same as _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is area of california", "variables": {}}
{"nl": "which state has a smaller population than the city of _city_ and contains a part of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state containing _city_ contains the fewest of _state_ 's low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state has an area different than _lake_ 's and is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state without _state_ borders has state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that borders state", "variables": {}}
{"nl": "what state - located city does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is contained by state", "variables": {}}
{"nl": "which state has a high point equal to _place_ 's , not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that california not borders and whose high point is death valley", "variables": {}}
{"nl": "what 's the name of a city with an area different than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city whose area is not area of usa", "variables": {}}
{"nl": "what state outside of the us has a low point that 's a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose low point is low point of california", "variables": {}}
{"nl": "what state that is not within the usa is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that not is contained by usa and that colorado river borders", "variables": {}}
{"nl": "what is the physical size of the state that includes _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ) )", "can": "area of state that mount whitney is contained by", "variables": {}}
{"nl": "what state does not border _state_ with a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california not borders and whose population is not population of usa", "variables": {}}
{"nl": "what state not containing _mountain_ has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of river borders", "variables": {}}
{"nl": "which state has a high point that is not _place_ and does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that high point of california not is contained by", "variables": {}}
{"nl": "what state is _lake_ in that contains the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what state not traversed by the _river_ has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not traverses and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what river that does not border _state_ traverses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses the least number of state", "variables": {}}
{"nl": "which state with _city_ as its capital is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that river traverses", "variables": {}}
{"nl": "which city is the capital of _state_ with a river traversing it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is capital of california and that river traverses", "variables": {}}
{"nl": "which state is _lake_ in withthe lowest point being _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that lake tahoe is contained by and whose low point is death valley", "variables": {}}
{"nl": "what state with a capital of _city_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that borders the most number of state", "variables": {}}
{"nl": "what state that is not within the usa has a population smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not is contained by usa and whose population is smaller than population of california", "variables": {}}
{"nl": "what is the total population of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the smallest density", "variables": {}}
{"nl": "which state has an area different from the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose area is not area of usa", "variables": {}}
{"nl": "what city traversesd by the _river_ has a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river traverses and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what 's the total area of _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "total area of california", "variables": {}}
{"nl": "what mountain within _state_ has an elevation higher than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what is _state_ 's total density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _state_ ( string density_state_count ) ) ) )", "can": "total density of california", "variables": {}}
{"nl": "what state 's low point is not _place_ that has the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state within the usa has a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose capital is city", "variables": {}}
{"nl": "which state that does not contain _lake_ and whose population is smaller than population of usa", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city named _city_ has the fewest rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that the least number of river traverses", "variables": {}}
{"nl": "what state does the _river_ traverse that contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that mountain is contained by", "variables": {}}
{"nl": "what state contains _lake_ with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what is the capital of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ) )", "can": "capital of state that not borders california", "variables": {}}
{"nl": "how many places are the high point of _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ) )", "can": "number of place that is high point of california", "variables": {}}
{"nl": "what state does not contain _city_ and contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what is _city_ ?", "lf": "( call SW.listValue _city_ )", "can": "sacramento", "variables": {}}
{"nl": "what city contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that the most number of place is contained by", "variables": {}}
{"nl": "what state does the _river_ border that does not border a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that river not borders", "variables": {}}
{"nl": "name the state where _mountain_ is located and has the fewest state borders .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of state borders", "variables": {}}
{"nl": "what city not named _city_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that is named sacramento and that has the largest population", "variables": {}}
{"nl": "what city named _city_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that river traverses", "variables": {}}
{"nl": "what state has a high point of _place_ and does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that city not is contained by", "variables": {}}
{"nl": "which state not containing _city_ also does n't contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that mountain not is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state whose high point is not death valley and that has the largest area", "variables": {}}
{"nl": "this state is bounded by the _river_ and boasts the biggest number of residents .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that colorado river borders and that has the largest population", "variables": {}}
{"nl": "what state has an area equal to that of the usa and does n't have a capital named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is area of usa", "variables": {}}
{"nl": "what is the name of the mountain that is n't contained by _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) )", "can": "mountain that not is contained by california", "variables": {}}
{"nl": "what city has the lowest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string density_city_count ) ) )", "can": "city that has the smallest density", "variables": {}}
{"nl": "how many cities are in _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ) )", "can": "number of city that is contained by california", "variables": {}}
{"nl": "what states that do n't border the _river_ contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that lake is contained by", "variables": {}}
{"nl": "how many major cities are there ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ) )", "can": "number of city that is major", "variables": {}}
{"nl": "what is the high point of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the largest area", "variables": {}}
{"nl": "what is the state with no _place_ low point that also has the fewest cities within its location ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of city is contained by", "variables": {}}
{"nl": "what state borders _state_ but does not have a high point that 's the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and whose high point is not low point of california", "variables": {}}
{"nl": "what city is named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) )", "can": "city that is named sacramento", "variables": {}}
{"nl": "how many cities are capitals ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ) )", "can": "number of city that is a capital", "variables": {}}
{"nl": "what state has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not place", "variables": {}}
{"nl": "what mountain is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string min ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that is contained by the least number of state", "variables": {}}
{"nl": "what state does _state_ not border that does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and that low point of california not is contained by", "variables": {}}
{"nl": "what state does the _river_ border with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river borders and whose population is not population of usa", "variables": {}}
{"nl": "what is the area of a city not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ) )", "can": "area of city that colorado river not traverses", "variables": {}}
{"nl": "what state is _city_ in and borders the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that borders the most number of state", "variables": {}}
{"nl": "what place is not contained by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by state", "variables": {}}
{"nl": "which major lake has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is major and whose area is larger than area of california", "variables": {}}
{"nl": "what state with _place_ located within has the population of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what is the smallest country by density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string density_country_count ) ) )", "can": "density of country that has the smallest density", "variables": {}}
{"nl": "what state not traversed by the _river_ has _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that colorado river not traverses and whose capital is sacramento", "variables": {}}
{"nl": "what place within _city_ is whithin the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by sacramento and that is contained by capital of california", "variables": {}}
{"nl": "which major city has no _state_ low points ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is major and that low point of california not is contained by", "variables": {}}
{"nl": "what state is _place_ in which contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what capital city of _state_ has a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is capital of california and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city that is not within _state_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is contained by california and that high point of california is contained by", "variables": {}}
{"nl": "what is the largest city by area not containing _place_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that death valley not is contained by and that has the largest area", "variables": {}}
{"nl": "which state has _city_ in it with the least number of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state with a low point that is not _place_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that borders the least number of state", "variables": {}}
{"nl": "what is a city within _state_ containing the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what 's the most sparsely populated state that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that death valley not is contained by and that has the smallest population", "variables": {}}
{"nl": "what is the high point of a state containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ) )", "can": "high point of state that death valley is contained by", "variables": {}}
{"nl": "which is the shortest river that also is on the _state_ border ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string min ) ( string len_river_length ) ) )", "can": "river that borders california and that has the smallest length", "variables": {}}
{"nl": "how many rivers ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "number of river", "variables": {}}
{"nl": "what state does the _river_ not border that contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of mountain is contained by", "variables": {}}
{"nl": "which states border the state that contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that state borders", "variables": {}}
{"nl": "what state 's high point is no _place_ and has an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is area of lake tahoe", "variables": {}}
{"nl": "what city does not contain _place_ and is not named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that not is named name", "variables": {}}
{"nl": "which major city has a population that is the same as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is major and whose population is population of california", "variables": {}}
{"nl": "what state does _state_ not border that has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california not borders and whose population is not population of california", "variables": {}}
{"nl": "what country containing _state_ has a population that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california is contained by and whose population is not population of california", "variables": {}}
{"nl": "what state with the population of _city_ is n't traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not traverses and whose population is population of sacramento", "variables": {}}
{"nl": "what state is _city_ in and is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what city not traversed by the _river_ has the population of the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river not traverses and whose population is population of usa", "variables": {}}
{"nl": "what state not bordering _state_ is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california not borders and that is contained by the most number of country", "variables": {}}
{"nl": "what state is n't in a country and borders on the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that not is contained by country", "variables": {}}
{"nl": "which state is within the usa and has the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and that low point of california is contained by", "variables": {}}
{"nl": "which state not containing _mountain_ has no state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that state not borders", "variables": {}}
{"nl": "what is the total state population of states not containing _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ) ) )", "can": "total population of state that death valley not is contained by", "variables": {}}
{"nl": "what state that does not contain _mountain_ also does n't border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that not borders state", "variables": {}}
{"nl": "what state contains _place_ with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that death valley is contained by and that has the largest area", "variables": {}}
{"nl": "what state bordering _state_ has a high point location ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and whose high point is place", "variables": {}}
{"nl": "which state does not border _state_ and has _mountain_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that not borders california and that mount whitney is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what is the total population of the country with the largest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the largest density", "variables": {}}
{"nl": "what capital city is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is capital of state", "variables": {}}
{"nl": "what city is _city_ is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is contained by state", "variables": {}}
{"nl": "what country has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) )", "can": "country that has the largest density", "variables": {}}
{"nl": "state that has the most places but does not have _mountain_ as one of them .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what is the density of states that do not include _lake_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string density_state_count ) ) ) )", "can": "total density of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ has a place that 's a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose low point is place", "variables": {}}
{"nl": "which state has the smallest area without _place_ being it 's low point ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state whose low point is not death valley and that has the smallest area", "variables": {}}
{"nl": "what state with a capital other than _city_ has the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose high point is high point of california", "variables": {}}
{"nl": "which state that does not border _state_ and has the smallest population", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that california not borders and that has the smallest population", "variables": {}}
{"nl": "what low point of the state is _city_ not contained in ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ) )", "can": "low point of state that sacramento not is contained by", "variables": {}}
{"nl": "what state contains _lake_ and has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what state with a high point other than _place_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that borders state", "variables": {}}
{"nl": "which state contains _place_ and has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what country contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_state_country ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that the most number of state is contained by", "variables": {}}
{"nl": "what state 's capital that is not _city_ is not contained by it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that lake not is contained by", "variables": {}}
{"nl": "what state is _place_ in that has the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what sate 's capital is _city_ that has the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose high point is high point of california", "variables": {}}
{"nl": "which state is in the usa and the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that is contained by country", "variables": {}}
{"nl": "what state that does n't contain _mountain_ and has a capital that 's a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose capital is city", "variables": {}}
{"nl": "what state with a low point other than _place_ is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that not borders state", "variables": {}}
{"nl": "what capital city of _state_ has a smaller area than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is capital of california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state is _city_ in and its low point is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "which state is not in the usa and does not have _mountain_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that not is contained by usa and that mount whitney not is contained by", "variables": {}}
{"nl": "what state containing _mountain_ does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that mountain not is contained by", "variables": {}}
{"nl": "what country is _state_ not in that has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california not is contained by and whose population is not population of california", "variables": {}}
{"nl": "what state is not home to _mountain_ and are not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that river not borders", "variables": {}}
{"nl": "what state bordering the _river_ has a low point that 's not a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and whose low point is not high point of california", "variables": {}}
{"nl": "what is a major river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) )", "can": "river that is major", "variables": {}}
{"nl": "which state 's capital is _city_ that contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that lake is contained by", "variables": {}}
{"nl": "what state within the usa contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that city is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse and does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and that low point of california is contained by", "variables": {}}
{"nl": "what city not traversed by the _river_ is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that colorado river not traverses and that is capital of california", "variables": {}}
{"nl": "which city is _place_ not in and the _river_ traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) )", "can": "city that death valley is contained by and that colorado river traverses", "variables": {}}
{"nl": "what city has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that has the smallest area", "variables": {}}
{"nl": "what city is within _state_ and is its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is capital of california and that place is contained by", "variables": {}}
{"nl": "what city within _state_ is named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string city_name ) ( string = ) _name_ ) )", "can": "city that is contained by california and that is named sacramento", "variables": {}}
{"nl": "what _state_ city does not have the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is contained by california and whose area is not area of usa", "variables": {}}
{"nl": "what state does _state_ border and has a larger area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california borders and whose area is larger than area of usa", "variables": {}}
{"nl": "what state is _lake_ not in with an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is area of usa", "variables": {}}
{"nl": "what river borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders state", "variables": {}}
{"nl": "what state does the _river_ not border with a population less than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not borders and whose population is smaller than population of california", "variables": {}}
{"nl": "what city contains _place_ that is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that is named name", "variables": {}}
{"nl": "what state does not contain _lake_ nor is it in a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that place not is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse that has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that colorado river not traverses and that has the smallest density", "variables": {}}
{"nl": "what city is _place_ not within and has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is not area of california", "variables": {}}
{"nl": "which state that _place_ is not contained by that has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that death valley not is contained by and that has the largest area", "variables": {}}
{"nl": "what is the total area of a state not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that california not borders", "variables": {}}
{"nl": "what state is within the usa with a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose low point is not place", "variables": {}}
{"nl": "what cities traverse rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that river traverses", "variables": {}}
{"nl": "what city is _place_ not in that has an area not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what city that is not within _state_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that not is contained by california and that has the largest density", "variables": {}}
{"nl": "what state 's capital is not _city_ and has an area equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is area of california", "variables": {}}
{"nl": "what city not within _state_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is area of california", "variables": {}}
{"nl": "what city not containing _place_ has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is named the most number of name", "variables": {}}
{"nl": "what state has _city_ in it , but not as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that sacramento is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what state is _city_ in with an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state borders _state_ and also does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that borders california and that california not borders", "variables": {}}
{"nl": "what is the highest point in the state with the capital of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ) )", "can": "high point of state whose capital is sacramento", "variables": {}}
{"nl": "what state within the usa has a high point that is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and whose high point is low point of california", "variables": {}}
{"nl": "what capital city does the _river_ not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string capital_city ) ) )", "can": "city that colorado river not traverses and that is a capital", "variables": {}}
{"nl": "what is a river with a length different from the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river whose length is not length of colorado river", "variables": {}}
{"nl": "which state is not the location of _lake_ and also has the fewest number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what 's a major city that is also the capital of its state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that is capital of state", "variables": {}}
{"nl": "what city has a larger area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city whose area is larger than area of usa", "variables": {}}
{"nl": "which state containing _place_ has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the least number of river borders", "variables": {}}
{"nl": "what state wihth a capital other than _city_ has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose high point is not low point of california", "variables": {}}
{"nl": "what state does the _river_ not border with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not borders and whose population is population of california", "variables": {}}
{"nl": "what are the states bordering _state_ that contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that borders california and that mount whitney is contained by", "variables": {}}
{"nl": "what state contains _lake_ and is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state that 's outside of the us is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that not is contained by usa and that colorado river not traverses", "variables": {}}
{"nl": "what state is _place_ in containing the least number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "which state 's highest point is not _place_ , and has the least number of _state_ 's high points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state borders _state_ with a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that borders california and whose population is not population of sacramento", "variables": {}}
{"nl": "what is a major city that does n't have the name _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string major_city ) ) )", "can": "city that not is named sacramento and that is major", "variables": {}}
{"nl": "what state is _mountain_ in with the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that mount whitney is contained by and that has the smallest area", "variables": {}}
{"nl": "which state borders _state_ with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that borders california and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state has a low point of _place_ and borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that borders the most number of state", "variables": {}}
{"nl": "what state containing _city_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento is contained by and whose population is population of california", "variables": {}}
{"nl": "what state not bordering _state_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of state borders", "variables": {}}
{"nl": "what state containing _city_ has a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that sacramento is contained by and whose low point is not death valley", "variables": {}}
{"nl": "what state has a low point that is not _place_ and the high point of _state_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that high point of california is contained by", "variables": {}}
{"nl": "what is the high point of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the smallest population", "variables": {}}
{"nl": "what state contains _city_ and is bordered by another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that state borders", "variables": {}}
{"nl": "what state contains _place_ but does not contain lake tahoe ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that lake not is contained by", "variables": {}}
{"nl": "what city that is not _city_ does the _river_ traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) )", "can": "city that not is named sacramento and that colorado river traverses", "variables": {}}
{"nl": "what is the total population of a city not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ) ) )", "can": "total population of city that colorado river not traverses", "variables": {}}
{"nl": "which state bordering _state_ has the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of mountain is contained by", "variables": {}}
{"nl": "what is the population of a city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ) )", "can": "population of city", "variables": {}}
{"nl": "what city not named _city_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that not is named sacramento and that has the largest population", "variables": {}}
{"nl": "which state exceeds _state_ 's area and has no _state_ borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california not borders and whose area is larger than area of california", "variables": {}}
{"nl": "what is a lake ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) )", "can": "lake", "variables": {}}
{"nl": "what state borders _state_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that state borders", "variables": {}}
{"nl": "which state 's capital is not _city_ and its high point is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose high point is not place", "variables": {}}
{"nl": "what state with a high point of _place_ has a high point that is a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and whose high point is place", "variables": {}}
{"nl": "what is the area of a major lake ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ) )", "can": "area of lake that is major", "variables": {}}
{"nl": "what state that bordes _state_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that california borders and that has the largest population", "variables": {}}
{"nl": "what city within _state_ is not within a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is contained by california and that place is contained by", "variables": {}}
{"nl": "name the state not bordered by the _river_ that does n't contain _mountain_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that mount whitney not is contained by and that colorado river not borders", "variables": {}}
{"nl": "which city is _place_ not in and its area is smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what state contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that the least number of capital of california is contained by", "variables": {}}
{"nl": "which lake outside of _state_ has an area not equal to the united states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is not area of usa", "variables": {}}
{"nl": "what state is _mountain_ in as well as a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that place is contained by", "variables": {}}
{"nl": "what state does the _river_ not border that contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of mountain is contained by", "variables": {}}
{"nl": "which city has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city whose area is area of usa", "variables": {}}
{"nl": "what major city is within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string major_city ) ) )", "can": "city that is contained by california and that is major", "variables": {}}
{"nl": "what is the area of the state that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ) )", "can": "area of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what lake within _state_ has an area that is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is area of usa", "variables": {}}
{"nl": "what city is not _city_ and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that not is named sacramento and that death valley not is contained by", "variables": {}}
{"nl": "what place has an elevation not equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state with a minimum elevation of _place_ has the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of lake is contained by", "variables": {}}
{"nl": "what is the elevation of the place outside of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ) )", "can": "elevation of place that not is contained by sacramento", "variables": {}}
{"nl": "what major city has the most high points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is major and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which state does the _river_ not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that river not borders", "variables": {}}
{"nl": "what state containing _lake_ has an area smaller than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "name the state without any _river_ borders whose population does not equal that of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not borders and whose population is not population of california", "variables": {}}
{"nl": "name the city not traversed by the _river_ with a population less than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river not traverses and whose population is smaller than population of california", "variables": {}}
{"nl": "what state bordering the _river_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is area of lake tahoe", "variables": {}}
{"nl": "which state that borders _state_ does the _river_   not transverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that borders california and that colorado river not traverses", "variables": {}}
{"nl": "which state contains _city_ and is bordered by a river .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that river borders", "variables": {}}
{"nl": "what state contains _city_ and a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that place is contained by", "variables": {}}
{"nl": "what city traversed by the _river_ does not have the same population as the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river traverses and whose population is not population of usa", "variables": {}}
{"nl": "what city does the _river_ not travers and is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is capital of the least number of state", "variables": {}}
{"nl": "what state not containing _mountain_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what city not named _city_ has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is larger than area of california", "variables": {}}
{"nl": "what place has an elevation not equal to _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state does not contain _mountain_ and borders the least amount of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of state borders", "variables": {}}
{"nl": "what state that does n't border _state_ has an area not in the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not borders california and whose area is not area of usa", "variables": {}}
{"nl": "what major river borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that borders the least number of state", "variables": {}}
{"nl": "what is the population of the country with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string population_country_count ) ) )", "can": "population of country that has the smallest density", "variables": {}}
{"nl": "name the state with _state_ borders that does not contain _city_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that borders california and that sacramento not is contained by", "variables": {}}
{"nl": "how many river traverse _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ) )", "can": "number of river that traverses sacramento", "variables": {}}
{"nl": "what is the name of the city that 's not named ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is named name", "variables": {}}
{"nl": "which state is in the usa and has the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of mountain is contained by", "variables": {}}
{"nl": "what major lake shares the same area as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is major and whose area is area of california", "variables": {}}
{"nl": "what is the state 's low point elevation ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ) ( string elevation_place_length ) ) )", "can": "elevation of low point of state", "variables": {}}
{"nl": "what state does not contain _city_ and has a smaller area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state not containing _place_ contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what is the high point of the state that is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ) )", "can": "high point of state that colorado river borders", "variables": {}}
{"nl": "what is the total area of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that has the largest population", "variables": {}}
{"nl": "which state does not have a _place_ high point and does n't border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that not borders california and whose high point is not death valley", "variables": {}}
{"nl": "what state is _lake_ in with a population not the same as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is not population of california", "variables": {}}
{"nl": "which city does the _river_ cross that is not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is not area of california", "variables": {}}
{"nl": "what state not bordering _state_ is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not borders california and that is contained by country", "variables": {}}
{"nl": "what is the total area of a state that the _river_ does not traverse ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that colorado river not traverses", "variables": {}}
{"nl": "what is the total density of a city that is not named _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string density_city_count ) ) ) )", "can": "total density of city that not is named sacramento", "variables": {}}
{"nl": "what is the density of the state that the _river_ borders ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string density_state_count ) ) )", "can": "density of state that colorado river borders", "variables": {}}
{"nl": "what place within _state_ contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by california and that is contained by the most number of capital of california", "variables": {}}
{"nl": "what city is _place_ not in that is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that death valley not is contained by and that is capital of california", "variables": {}}
{"nl": "which state contains _mountain_ and whose area is area of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is area of california", "variables": {}}
{"nl": "what states are bordered by a river and do not contain _mountain_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that river borders", "variables": {}}
{"nl": "what state has a high point that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not high point of california", "variables": {}}
{"nl": "what state travesed by the _river_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that colorado river traverses and that has the smallest area", "variables": {}}
{"nl": "in which state that has the largets density is _mountain_ in ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that mount whitney is contained by and that has the largest density", "variables": {}}
{"nl": "what 's the most populous city not containing _place_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that death valley not is contained by and that has the largest population", "variables": {}}
{"nl": "which cities outside of _state_ have an area equal to the area of the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is area of usa", "variables": {}}
{"nl": "which state bordering the _river_ does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that colorado river borders and that death valley not is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that is contained by the most number of country", "variables": {}}
{"nl": "what state does the _river_ border that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that borders the most number of state", "variables": {}}
{"nl": "what state not bordered by the _river_ has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not borders and whose capital is capital of california", "variables": {}}
{"nl": "what major river has a length smaller than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that is major and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "what mountain not contained by _state_ has the lowest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string min ) ( string elevation_mountain_length ) ) )", "can": "mountain that not is contained by california and that has the smallest elevation", "variables": {}}
{"nl": "what state borders _state_ with an area not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that borders california and whose area is not area of usa", "variables": {}}
{"nl": "what state not bordering _state_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what city not traversed by the _river_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that high point of california is contained by", "variables": {}}
{"nl": "name the state containing _lake_ that is not traversed by the _river_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that lake tahoe is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what _state_ high point location has the least state low point locations ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is low point of the least number of state", "variables": {}}
{"nl": "name the city that 's home to _place_ but without a _state_ low point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what state contains _lake_ and the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what 's the population of the state with the least amount of area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "can": "population of state that has the smallest area", "variables": {}}
{"nl": "what city has a population not equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city whose population is not population of sacramento", "variables": {}}
{"nl": "what city that is not in _state_ has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is named the most number of name", "variables": {}}
{"nl": "what state does not contain _lake_ and contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what city that is not within _state_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is contained by california and whose population is larger than population of usa", "variables": {}}
{"nl": "what river that borders _state_ also traverses the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that borders california and that traverses capital of california", "variables": {}}
{"nl": "which city outside of _state_ contains the greatest amount of _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is contained by california and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state with a low point of _place_ has a population equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is death valley and whose population is population of california", "variables": {}}
{"nl": "what state with a high point other than _place_ has the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose low point is low point of california", "variables": {}}
{"nl": "what city is a capital but not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that not is contained by state", "variables": {}}
{"nl": "which state with a high point that is not _place_ has the least area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state whose high point is not death valley and that has the smallest area", "variables": {}}
{"nl": "name a country that contains _state_ and has a population larger than the usa .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what state does _state_ not border with a high point equal to _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and whose high point is low point of california", "variables": {}}
{"nl": "which state has a high point of _place_ and a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is death valley and whose capital is not capital of california", "variables": {}}
{"nl": "what state with a capital of _city_ is within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that city is contained by", "variables": {}}
{"nl": "what state contains _place_ with a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose high point is not place", "variables": {}}
{"nl": "what state does n't contain _lake_ and contains no mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that mountain not is contained by", "variables": {}}
{"nl": "what place that is _state_ 's low point is within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is contained by city", "variables": {}}
{"nl": "what state that _city_ is not in contains the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what state that contains _city_ has a high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what state has a low point that 's not _place_ and also does n't contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that sacramento not is contained by and whose low point is not death valley", "variables": {}}
{"nl": "name the state bordering _state_ which has a smaller area than _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california borders and whose area is smaller than area of california", "variables": {}}
{"nl": "the state not traversed by the _river_ has what total density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string density_state_count ) ) ) )", "can": "total density of state that colorado river not traverses", "variables": {}}
{"nl": "what city within _state_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is contained by california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _city_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is population of usa", "variables": {}}
{"nl": "what place is the high point of _state_ and contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is high point of the least number of state", "variables": {}}
{"nl": "what city does the _river_ not traverse that has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that colorado river not traverses and that has the smallest population", "variables": {}}
{"nl": "what state does the _river_ not border with an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is larger than area of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse and does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that low point of california not is contained by", "variables": {}}
{"nl": "what state contains _mountain_ and has borders with _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that mount whitney is contained by and that california borders", "variables": {}}
{"nl": "which city can be found in the greatest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by the most number of state", "variables": {}}
{"nl": "what state not bordered by the _river_ has the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of river traverses", "variables": {}}
{"nl": "what state within the usa contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of lake is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ has a smaller area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state with a high point other than _place_ with an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is smaller than area of usa", "variables": {}}
{"nl": "what river borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) )", "can": "river that borders california", "variables": {}}
{"nl": "what capital city of _state_ has the population of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is capital of california and whose population is population of sacramento", "variables": {}}
{"nl": "what state is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that the least number of river traverses", "variables": {}}
{"nl": "what river does not border _state_ but runs through the most capital cities in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not borders california and that traverses the most number of capital of california", "variables": {}}
{"nl": "what is the population of the state bordered by the _river_", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ) )", "can": "population of state that colorado river borders", "variables": {}}
{"nl": "what state does the _river_ not border that has a high point equal to _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose high point is high point of california", "variables": {}}
{"nl": "what state traversed by the _river_ has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river traverses and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city does the _river_ traverse with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what mountain not contained by _state_ has an elevation equal to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what state by _state_ is bordered by the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of state borders", "variables": {}}
{"nl": "what state not contained by the us has the population of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not is contained by usa and whose population is population of sacramento", "variables": {}}
{"nl": "what state borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders state", "variables": {}}
{"nl": "how many countries are not the location of _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ) )", "can": "number of country that california not is contained by", "variables": {}}
{"nl": "what city does the _river_ traverse with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river traverses and whose population is population of usa", "variables": {}}
{"nl": "what moutain not in _state_ has an elevation smaller than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what is the popluation of the city with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ( string population_city_count ) ) )", "can": "population of city that has the largest population", "variables": {}}
{"nl": "how long is a river not traversing _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ) )", "can": "length of river that not traverses california", "variables": {}}
{"nl": "which state does the _river_ not border within the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of place is contained by", "variables": {}}
{"nl": "what is the total density of the state bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string density_state_count ) ) ) )", "can": "total density of state that colorado river borders", "variables": {}}
{"nl": "what state contains both _place_ and the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state is not in the usa with a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not is contained by usa and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ not border with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not borders and whose population is population of usa", "variables": {}}
{"nl": "what state that is within the usa contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state 's high point is noth _place_ and borders the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that borders the most number of state", "variables": {}}
{"nl": "what state borders _state_ with the most river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of river traverses", "variables": {}}
{"nl": "which state with a non - usa population is _place_ in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what state contains _lake_ and mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that mountain is contained by", "variables": {}}
{"nl": "name the state not containing _place_ which also has the smallest amount of _state_ low points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state contains _place_ and borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that river borders", "variables": {}}
{"nl": "what state is _mountain_ in with a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and whose capital is city", "variables": {}}
{"nl": "which state is the location of _mountain_ and a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that lake is contained by", "variables": {}}
{"nl": "what state with a capital that 's not _city_ has river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that river borders", "variables": {}}
{"nl": "what state traversed by the _river_ has a high point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose high point is high point of california", "variables": {}}
{"nl": "which state containing _mountain_ has the most lakes in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what is the area of the state _city_ is in ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that sacramento is contained by", "variables": {}}
{"nl": "what is the area of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the smallest density", "variables": {}}
{"nl": "what state does the _river_ not border with a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose low point is place", "variables": {}}
{"nl": "what is a lake not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) )", "can": "lake that not is contained by california", "variables": {}}
{"nl": "what state with a high point of _place_ has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is death valley and whose population is not population of california", "variables": {}}
{"nl": "what is the density of a state that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string density_state_count ) ) )", "can": "density of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what _state_ capital city has no name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is capital of california and that not is named name", "variables": {}}
{"nl": "what is the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) )", "can": "state that has the smallest population", "variables": {}}
{"nl": "which lake is not in _state_ and does not have the same area as _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is not area of california", "variables": {}}
{"nl": "what state that the _river_ traverses contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of city is contained by", "variables": {}}
{"nl": "what is the low point of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string low_point_state_place ) ) )", "can": "low point of state that has the smallest population", "variables": {}}
{"nl": "what state does not have _mountain_ but has a high point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what city is within _state_ and has a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is contained by california and whose population is smaller than population of california", "variables": {}}
{"nl": "what city not containing _place_ is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is capital of state", "variables": {}}
{"nl": "what mountain outside of _state_ has an elevation different than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state is not the location of _lake_ and the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "how many state are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "number of state", "variables": {}}
{"nl": "what state not containing _city_ has _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that sacramento not is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what river does not traverse _city_ and traverses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses the least number of state", "variables": {}}
{"nl": "what city is named _city_ with a population smalelr than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is named sacramento and whose population is smaller than population of california", "variables": {}}
{"nl": "what state borders _state_ and has an area equal to that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california borders and whose area is area of lake tahoe", "variables": {}}
{"nl": "what is the name of the state that in not contained by _lake_ and whose low point is _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that lake tahoe not is contained by and whose low point is death valley", "variables": {}}
{"nl": "what is the total population of a state within the usa ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ) ) )", "can": "total population of state that is contained by usa", "variables": {}}
{"nl": "what is the number of the state whose highest elevation is not _place_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ) )", "can": "number of state whose high point is not death valley", "variables": {}}
{"nl": "which state not containing _mountain_ has a high point which is not a _state_ low point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "which state that does not have _place_ at its peak but whose lowest area is the peak of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose low point is high point of california", "variables": {}}
{"nl": "how many states have the largest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ) )", "can": "number of state that has the largest population", "variables": {}}
{"nl": "which state is _mountain_ in and contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what state does not border _state_ that has the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state not containing _city_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is not area of california", "variables": {}}
{"nl": "what place that is not within _city_ has the low point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is low point of the most number of state", "variables": {}}
{"nl": "what state does not border _state_ and does not have a river running across it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that river not traverses", "variables": {}}
{"nl": "which state not bordering _state_ has the smallest amount of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state with a high point of _place_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that river traverses", "variables": {}}
{"nl": "what is the total area of a lake not contained by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake that not is contained by california", "variables": {}}
{"nl": "this state touches _state_ but does not have _state_ 's capital city .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and whose capital is not capital of california", "variables": {}}
{"nl": "what is a state that _lake_ is not in and that is not bordered by a stated ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that state not borders", "variables": {}}
{"nl": "what state does not contain _lake_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that state borders", "variables": {}}
{"nl": "what state within the usa does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that is contained by usa and that sacramento not is contained by", "variables": {}}
{"nl": "which city does the _river_ traverse with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river traverses and whose population is larger than population of california", "variables": {}}
{"nl": "which state does n't adjoin _state_ with the most _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what country has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country whose population is larger than population of usa", "variables": {}}
{"nl": "what state contains _city_ with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that sacramento is contained by and that has the largest population", "variables": {}}
{"nl": "what city is a capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that is a capital and that is capital of california", "variables": {}}
{"nl": "what state does the _river_ not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that colorado river not traverses", "variables": {}}
{"nl": "what state has borders and a capital called _city_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that state borders", "variables": {}}
{"nl": "what 's the state bordering the fewest other states that 's without a _place_ high point ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that borders the least number of state", "variables": {}}
{"nl": "what state exceeds _city_ in population and does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what is the density of the state with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string density_state_count ) ) )", "can": "density of state whose capital is sacramento", "variables": {}}
{"nl": "what state is _place_ not in and does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that city not is contained by", "variables": {}}
{"nl": "what river traverses a city but does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses city", "variables": {}}
{"nl": "what city that is not within _state_ is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "what state within the usa does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that lake not is contained by", "variables": {}}
{"nl": "which major city does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is major and that place not is contained by", "variables": {}}
{"nl": "what state contains a mountain but does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that mountain is contained by", "variables": {}}
{"nl": "what city is _city_ and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that not is contained by state", "variables": {}}
{"nl": "which state contains _lake_ and has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that lake tahoe is contained by and that has the smallest population", "variables": {}}
{"nl": "which state has a smaller population than _city_ and does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state is _place_ in with a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what state does not contain _mountain_ but does contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state does _state_ not border with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that california not borders and that has the largest population", "variables": {}}
{"nl": "which is a state that the _river_ does not border and it is not contained within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that place not is contained by", "variables": {}}
{"nl": "what state that is not in the usa contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that not is contained by usa and that mount whitney is contained by", "variables": {}}
{"nl": "what is the total population of the state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ) ) )", "can": "total population of state that colorado river traverses", "variables": {}}
{"nl": "what state that is within the usa has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that is contained by usa and whose population is population of sacramento", "variables": {}}
{"nl": "name a state in the united states with a different area than the usa", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is not area of usa", "variables": {}}
{"nl": "which river not bordering _state_ is shorter than _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not borders california and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "what state containing _lake_ also contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that place is contained by", "variables": {}}
{"nl": "what state contains _city_ and has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose low point is place", "variables": {}}
{"nl": "what staet with a capital other than _city_ has _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose low point is low point of california", "variables": {}}
{"nl": "the city never traversed by the _river_ has what density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string density_city_count ) ) )", "can": "density of city that colorado river not traverses", "variables": {}}
{"nl": "what state with a capital that is not _city_ contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that low point of california is contained by", "variables": {}}
{"nl": "what state does not contain _city_ but whose low point is _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that sacramento not is contained by and whose low point is death valley", "variables": {}}
{"nl": "which us state has the fewest cities in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of city is contained by", "variables": {}}
{"nl": "what state contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that mount whitney is contained by", "variables": {}}
{"nl": "what state in the country is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that is contained by country", "variables": {}}
{"nl": "what state is _place_ in and does not contain _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what place is within _city_ and is the low point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that is low point of state", "variables": {}}
{"nl": "which state 's has the high point in _place_ and contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and that low point of california is contained by", "variables": {}}
{"nl": "what is the population of a state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ) )", "can": "population of state that colorado river traverses", "variables": {}}
{"nl": "what is the area of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ) )", "can": "area of state that not borders california", "variables": {}}
{"nl": "what 's the state with a larger population than the usa that 's also traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river traverses and whose population is larger than population of usa", "variables": {}}
{"nl": "what place is the low point of _state_ and contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is low point of california and that is contained by the least number of capital of california", "variables": {}}
{"nl": "which state without a _place_ high point does not have a city capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose capital is not city", "variables": {}}
{"nl": "what state does not contain any places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that place not is contained by", "variables": {}}
{"nl": "which state has no _city_ capital as well as no low point place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose low point is not place", "variables": {}}
{"nl": "what city has the highest points in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state bordering the _river_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and whose capital is not city", "variables": {}}
{"nl": "what state not bordered by _state_ has a smaller population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california not borders and whose population is smaller than population of california", "variables": {}}
{"nl": "what state borders _state_ and contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that borders california and that mountain is contained by", "variables": {}}
{"nl": "what state has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose area is smaller than area of california", "variables": {}}
{"nl": "what is the total population of a city traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ) ) )", "can": "total population of city that colorado river traverses", "variables": {}}
{"nl": "which state contains the most number of lakes , that does n't also contain the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the most number of lake is contained by", "variables": {}}
{"nl": "what state does _state_ border that has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that california borders and that has the smallest density", "variables": {}}
{"nl": "what state does not contain _city_ and has a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose capital is city", "variables": {}}
{"nl": "which state with a capital other than _city_ contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of city is contained by", "variables": {}}
{"nl": "what rivers have the same length as the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river whose length is length of colorado river", "variables": {}}
{"nl": "what 's the density of a state that borders _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string density_state_count ) ) ) )", "can": "total density of state that california borders", "variables": {}}
{"nl": "what state contains _city_ and has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose low point is not place", "variables": {}}
{"nl": "which state has the same population as _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose population is population of sacramento", "variables": {}}
{"nl": "what state containing the _river_ has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river traverses and whose population is not population of california", "variables": {}}
{"nl": "what state traversed by the _river_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that borders the least number of state", "variables": {}}
{"nl": "what city has the fewest river crossings ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that the least number of river traverses", "variables": {}}
{"nl": "what state that does n't have _city_ as its capital has a population smaller than the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is smaller than population of california", "variables": {}}
{"nl": "what is the total elevation of a place not in _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that not is contained by california", "variables": {}}
{"nl": "what place that is not in _city_ has the smallest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that not is contained by sacramento and that has the smallest elevation", "variables": {}}
{"nl": "what state with a capital of _city_ has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is sacramento and whose population is larger than population of california", "variables": {}}
{"nl": "which state 's capital is not _city_ which has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( string density_state_count ) ) )", "can": "state whose capital is not sacramento and that has the largest density", "variables": {}}
{"nl": "what place within _city_ has an elevation larger than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "which state does _state_ border that contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california borders and that lake is contained by", "variables": {}}
{"nl": "what river that does not traverse _city_ traverses the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses sacramento and that traverses the most number of capital of california", "variables": {}}
{"nl": "name the country with a population count that is different than the _city_ population ..", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country whose population is not population of sacramento", "variables": {}}
{"nl": "what is the lowest point of the state that contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ) )", "can": "low point of state that mount whitney is contained by", "variables": {}}
{"nl": "what city not named _city_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is named sacramento and whose population is larger than population of usa", "variables": {}}
{"nl": "what city that is not named _city_ contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that the most number of place is contained by", "variables": {}}
{"nl": "what state has a population greater than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose population is larger than population of sacramento", "variables": {}}
{"nl": "what river traverses the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses the least number of capital of california", "variables": {}}
{"nl": "name the state traversed by the _river_ with a low point that 's not _place_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river traverses and whose low point is not death valley", "variables": {}}
{"nl": "which state does the _river_ traverse with the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of river borders", "variables": {}}
{"nl": "what state has a capital that is not _city_ and is not within the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that is contained by country", "variables": {}}
{"nl": "which state has more people than _state_ and has _place_ as its lowest point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is death valley and whose population is larger than population of california", "variables": {}}
{"nl": "what state that _state_ borders does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california borders and that lake not is contained by", "variables": {}}
{"nl": "what state is _lake_ in that has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is not place", "variables": {}}
{"nl": "what does is in the usa but does not have a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that city not is contained by", "variables": {}}
{"nl": "which state has the most cities but does not have _city_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "what state not containing _mountain_ has _state_ 's low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what state includes _place_ as a low point but does not include _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and that capital of california not is contained by", "variables": {}}
{"nl": "if the low point is not _place_ , what is the state 's low point ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ) )", "can": "low point of state whose low point is not death valley", "variables": {}}
{"nl": "what state is _city_ not in that has a population that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is not population of california", "variables": {}}
{"nl": "what state does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake not is contained by", "variables": {}}
{"nl": "which state contains both _city_ and _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that sacramento is contained by and that death valley is contained by", "variables": {}}
{"nl": "name a country that does not contain _state_ and has a smaller population than the usa", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state that the _river_ and the river does not transverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that river not traverses", "variables": {}}
{"nl": "what state containing _lake_ has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that lake tahoe is contained by and whose high point is death valley", "variables": {}}
{"nl": "what state does the _river_ not border and contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of city is contained by", "variables": {}}
{"nl": "what is a place not within _state_ that is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that not is contained by california and that is low point of california", "variables": {}}
{"nl": "how many people live in all states ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ) ) )", "can": "total population of state", "variables": {}}
{"nl": "which state 's capital is _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state whose capital is sacramento", "variables": {}}
{"nl": "what state the contains _city_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is area of california", "variables": {}}
{"nl": "what state that _mountain_ is not in has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "which of the states that borders _state_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that not borders california and that has the smallest population", "variables": {}}
{"nl": "what state contains _place_ and the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state that does not contain a city named _city_ and borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that borders state", "variables": {}}
{"nl": "what 's the state _city_ is contained by with the most lakes contained within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what state is _place_ in and has a different capital than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what state not bordered by the _river_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and that high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ not border with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river not borders and whose high point is death valley", "variables": {}}
{"nl": "which state borders _state_ with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that borders california and whose population is larger than population of usa", "variables": {}}
{"nl": "which city does the _river_ not traverse with an area different than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is not area of california", "variables": {}}
{"nl": "what states do not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that sacramento not is contained by", "variables": {}}
{"nl": "what is the total population of the state with _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ) ) )", "can": "total population of state whose capital is sacramento", "variables": {}}
{"nl": "what state not within the usa has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is area of california", "variables": {}}
{"nl": "what state is not traversed by the _river_ and has the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what is the low point of a state with a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ) )", "can": "low point of state whose high point is not death valley", "variables": {}}
{"nl": "which capital city is the least populous ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string population_city_count ) ) )", "can": "city that is a capital and that has the smallest population", "variables": {}}
{"nl": "what state is within the usa and has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state bordered by _state_ has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and whose capital is city", "variables": {}}
{"nl": "what state that 's traversed by the _river_ does not have a capital of _state_ in it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and that capital of california not is contained by", "variables": {}}
{"nl": "what state does not contain _place_ and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that not borders state", "variables": {}}
{"nl": "what _state_ city has a greater population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is contained by california and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city not named _city_ is not within a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that place not is contained by", "variables": {}}
{"nl": "what 's the lowest point of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string low_point_state_place ) ) )", "can": "low point of state that has the largest population", "variables": {}}
{"nl": "what river travesres the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses the most number of capital of california", "variables": {}}
{"nl": "what state is _city_ in with an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state containing _city_ has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what city within the state serves as a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is contained by state", "variables": {}}
{"nl": "what state without a _place_ high point has a low point that 's not a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose low point is not high point of california", "variables": {}}
{"nl": "what state that does not border _state_ has an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california not borders and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state not bordering _state_ contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that not borders california and that death valley is contained by", "variables": {}}
{"nl": "which capital city 's population is not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is a capital and whose population is not population of sacramento", "variables": {}}
{"nl": "what is a state in the us that borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string next_to_state_state ) ( string = ) _state_ ) )", "can": "state that is contained by usa and that borders california", "variables": {}}
{"nl": "what state 's high point is not _place_ and contains the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that is contained by the most number of country", "variables": {}}
{"nl": "which state 's high point is _place_ and contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that mountain is contained by", "variables": {}}
{"nl": "what is the state with a capital and population other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is not population of sacramento", "variables": {}}
{"nl": "what is the high point of the state containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ) )", "can": "high point of state that sacramento is contained by", "variables": {}}
{"nl": "what capital city has a population equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is a capital and whose population is population of sacramento", "variables": {}}
{"nl": "what river crosses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses the least number of state", "variables": {}}
{"nl": "what is the total density of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the largest density", "variables": {}}
{"nl": "which state does the _river_ not border and has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose high point is not place", "variables": {}}
{"nl": "what 's the population count of the state containing _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ) ) )", "can": "total population of state that death valley is contained by", "variables": {}}
{"nl": "what is the capital of a state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ) )", "can": "capital of state that colorado river not borders", "variables": {}}
{"nl": "which state with a low point that 's not _place_ has no high point places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose high point is not place", "variables": {}}
{"nl": "what is a city that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) )", "can": "city that not is contained by california", "variables": {}}
{"nl": "what state is _lake_ not in that contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that lake is contained by", "variables": {}}
{"nl": "what state contains _city_ and borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that sacramento is contained by and that california borders", "variables": {}}
{"nl": "what state borders _state_ bordering the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that borders the least number of state", "variables": {}}
{"nl": "what city not named _city_ is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is contained by the most number of state", "variables": {}}
{"nl": "name the state which contains _lake_ and has no river borders .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that river not borders", "variables": {}}
{"nl": "what are the rivers that border _state_ and are shorter than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that borders california and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "name the city traversed by the _river_ with a population not equal to _city_ 's .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river traverses and whose population is not population of sacramento", "variables": {}}
{"nl": "what city has a population that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city whose population is not population of california", "variables": {}}
{"nl": "what state is _lake_ in with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that lake tahoe is contained by and that has the largest population", "variables": {}}
{"nl": "what city containing _place_ has an area that is not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state is in the usa and has _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that is contained by usa and that death valley is contained by", "variables": {}}
{"nl": "which state 's capital city is not _city_ and has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is not population of usa", "variables": {}}
{"nl": "what state not traversed by the _river_ has the fewest state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of state borders", "variables": {}}
{"nl": "which state has no _state_ capital and is n't traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and that capital of california not is contained by", "variables": {}}
{"nl": "what city that is not in _state_ has the most places within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that the most number of place is contained by", "variables": {}}
{"nl": "what state bordering _state_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state not containing _city_ is also not contained by a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that not is contained by country", "variables": {}}
{"nl": "what is a state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that colorado river traverses", "variables": {}}
{"nl": "what state with a capital of _city_ has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose high point is place", "variables": {}}
{"nl": "what city not traversed by the _river_ has the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that the least number of high point of california is contained by", "variables": {}}
{"nl": "how large is the state that includes _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that mount whitney is contained by", "variables": {}}
{"nl": "what is the low point of the state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ) )", "can": "low point of state that not borders california", "variables": {}}
{"nl": "what state does the _river_ not border that has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that colorado river not borders and that has the smallest density", "variables": {}}
{"nl": "what place that is the low point of _state_ has an elevation that is not equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is low point of california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state with a capital other than _city_ is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of river traverses", "variables": {}}
{"nl": "what city does the _river_ traverse with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is area of california", "variables": {}}
{"nl": "what us state does not have the capital of _state_ within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and that capital of california not is contained by", "variables": {}}
{"nl": "which country has an area which is the same as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country whose area is area of california", "variables": {}}
{"nl": "what place is the high point of _state_ and the high point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is high point of state", "variables": {}}
{"nl": "what state is _lake_ not in that contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "which state touches the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that the least number of state borders", "variables": {}}
{"nl": "what country contaiing _state_ has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what major city does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is major and that place is contained by", "variables": {}}
{"nl": "what state is _place_ in but the low point of _state_ is not ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "which state 's low point is _place_ and contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of city is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what state containing _place_ is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of state borders", "variables": {}}
{"nl": "what state in the usa borders the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that borders the most number of state", "variables": {}}
{"nl": "which major city in _state_ is in the state 's lowest point ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is major and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what city named _city_ has the lowest population numbers ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that is named sacramento and that has the smallest population", "variables": {}}
{"nl": "what state has a high point that is not _place_ and an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what city besides _city_ is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is capital of the most number of state", "variables": {}}
{"nl": "what city is not named _city_ with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that not is named sacramento and that has the largest area", "variables": {}}
{"nl": "what state with _state_ borders does not have _mountain_ in it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that borders california and that mount whitney not is contained by", "variables": {}}
{"nl": "which city ( not _city_ ) has a population that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is named sacramento and whose population is not population of california", "variables": {}}
{"nl": "what is the total area of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that has the largest area", "variables": {}}
{"nl": "what country is _state_ in with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what 's a place that 's not within _city_ but that 's within state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by state", "variables": {}}
{"nl": "what state does not contain _lake_ and is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that river traverses", "variables": {}}
{"nl": "which state does not contain _state_ 's high point or a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that high point of california not is contained by", "variables": {}}
{"nl": "what location within _state_ has no _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is contained by california and that is high point of california", "variables": {}}
{"nl": "what states in the usa do not have the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what place is in _city_ but not near the capitol of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by sacramento and that not is contained by capital of california", "variables": {}}
{"nl": "what state does not border _state_ and has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and whose capital is capital of california", "variables": {}}
{"nl": "what state is _place_ in with the _river_ bordering it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that death valley is contained by and that colorado river borders", "variables": {}}
{"nl": "what state is _lake_ in with a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe is contained by and whose low point is not death valley", "variables": {}}
{"nl": "which sate does not border _state_ with a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that not borders california and whose capital is not sacramento", "variables": {}}
{"nl": "which state with a _river_ border has a population exceeding _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river borders and whose population is larger than population of california", "variables": {}}
{"nl": "what state is _lake_ in with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that lake tahoe is contained by and that has the largest area", "variables": {}}
{"nl": "what state does _state_ border but the _river_ does n't traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that california borders and that colorado river not traverses", "variables": {}}
{"nl": "what city is _place_ not in that has the fewest of _state_ 's high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state is _lake_ not in that contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what state mountain is not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string loc_mountain_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that not is contained by california and that is contained by state", "variables": {}}
{"nl": "what state does the _river_ not border with a population less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not borders and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state does n't contain _place_ and has a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what state not containing _lake_ has the most river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of river traverses", "variables": {}}
{"nl": "which state containing _mountain_ has a _state_ low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what country is _state_ in that is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california is contained by and that state not is contained by", "variables": {}}
{"nl": "what is the population of a major city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ) )", "can": "population of city that is major", "variables": {}}
{"nl": "name the state containing _city_ that has the fewest places contained within .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ but contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state not within the usa has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose low point is not place", "variables": {}}
{"nl": "what city within _state_ is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that not is contained by state", "variables": {}}
{"nl": "which city has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) )", "can": "city that has the largest population", "variables": {}}
{"nl": "what is the total size of _lake_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "total area of lake tahoe", "variables": {}}
{"nl": "what place is not in _state_ and contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by california and that is contained by the least number of capital of california", "variables": {}}
{"nl": "this state on the _state_ border has as many people in it as the us .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california borders and whose population is population of usa", "variables": {}}
{"nl": "what state with a low point of _place_ is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that river not borders", "variables": {}}
{"nl": "what state with a low point other than _place_ contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of lake is contained by", "variables": {}}
{"nl": "what city within _state_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is contained by california and whose area is larger than area of usa", "variables": {}}
{"nl": "which city does the _river_ traverse and is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that colorado river traverses and that is capital of california", "variables": {}}
{"nl": "what state borders _state_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that state borders", "variables": {}}
{"nl": "what city not named _city_ is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is capital of state", "variables": {}}
{"nl": "what is the low point of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string low_point_state_place ) ) )", "can": "low point of state that has the largest area", "variables": {}}
{"nl": "what state without _mountain_ in it has an area equal to usa 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is area of usa", "variables": {}}
{"nl": "which state borders _state_ and has the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that borders california and whose area is area of usa", "variables": {}}
{"nl": "which city has neither the _river_ traversing it nor is a low point   of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that low point of california is contained by", "variables": {}}
{"nl": "what state capital is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is capital of state", "variables": {}}
{"nl": "what is a state that is not in the usa and is largert than the arae of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what place is the high point of _state_ that is within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by city", "variables": {}}
{"nl": "what country is _state_ in with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string max ) ( string population_country_count ) ) )", "can": "country that california is contained by and that has the largest population", "variables": {}}
{"nl": "what state does the _river_ border which contains the fewest amount of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of mountain is contained by", "variables": {}}
{"nl": "what is the density of the state with the smallest area", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )", "can": "density of state that has the smallest area", "variables": {}}
{"nl": "what state does n't contain _city_ and has an area smaller than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state contains _city_ and its capital is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what state does n't border _state_ whose high point is not _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that california not borders and whose high point is not death valley", "variables": {}}
{"nl": "what state not containing _mountain_ does not have a _place_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that mount whitney not is contained by and whose low point is not death valley", "variables": {}}
{"nl": "which lake that is not contained by _state_ has an area of as big as usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is area of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse with a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not traverses and whose population is not population of california", "variables": {}}
{"nl": "what state has the mountain of _mountain_ contained within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that mountain is contained by", "variables": {}}
{"nl": "which state does the _river_ traverse and does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that colorado river traverses and that lake tahoe not is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of state borders", "variables": {}}
{"nl": "what state with a capital of _city_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that place is contained by", "variables": {}}
{"nl": "name the capital city with the smallest area .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that is a capital and that has the smallest area", "variables": {}}
{"nl": "the state not containing _mountain_ is bordered by which other states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that borders state", "variables": {}}
{"nl": "which city is the location of _place_ and has a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what is the total density of a state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string density_state_count ) ) ) )", "can": "total density of state that colorado river not borders", "variables": {}}
{"nl": "what city containing _place_ has a population lower than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state containing the fewest places is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of place is contained by", "variables": {}}
{"nl": "name the state not containing _place_ that has the capital of _city_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that death valley not is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what is the total elevation of a mountain with the largest elevation ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mountain that has the largest elevation", "variables": {}}
{"nl": "what city that is traversed by the _river_ has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is named the most number of name", "variables": {}}
{"nl": "what state bordered by the _river_ is in the fewest number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that is contained by the least number of country", "variables": {}}
{"nl": "what is the total population of the usa ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "total population of usa", "variables": {}}
{"nl": "which state contains _city_ and has the biggest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that sacramento is contained by and that has the largest density", "variables": {}}
{"nl": "which state is _city_ not in with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that sacramento not is contained by and that has the smallest population", "variables": {}}
{"nl": "what state does not contain _mountain_ nor a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that city not is contained by", "variables": {}}
{"nl": "what city does the _river_ not traverse and whose population is not the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river not traverses and whose population is not population of california", "variables": {}}
{"nl": "what mountain that is within _state_ contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string min ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "what is the area of the country with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the smallest population", "variables": {}}
{"nl": "what state that is not within the usa has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose low point is not low point of california", "variables": {}}
{"nl": "what place within _state_ has the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by the least number of city", "variables": {}}
{"nl": "what state borders the most number of states , but does not border _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that borders the most number of state", "variables": {}}
{"nl": "what state with a capital that is not _city_ has a smaller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is smaller than area of california", "variables": {}}
{"nl": "name the state bordered by _state_ with the fewest _state_ low points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state bordered by the _river_ has a population equal to the _state_ population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river borders and whose population is population of california", "variables": {}}
{"nl": "what city has the name _city_ and the least number of names named ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is named the least number of name", "variables": {}}
{"nl": "name the state bordering _state_ that has a _place_ low point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that not borders california and whose low point is death valley", "variables": {}}
{"nl": "what state with a _place_ high point contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that mount whitney is contained by and whose high point is death valley", "variables": {}}
{"nl": "what city is within _state_ with the low point of _state_ not contained by it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is contained by california and that low point of california not is contained by", "variables": {}}
{"nl": "what state is bordered by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that the most number of river borders", "variables": {}}
{"nl": "what river is not in _state_ , and borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that borders the most number of state", "variables": {}}
{"nl": "what state borders _state_ with a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and whose capital is not capital of california", "variables": {}}
{"nl": "what city has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state containing _city_ has no other _state_ capitals ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what state with a low point other than _place_ borders the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of river borders", "variables": {}}
{"nl": "what state not containing _city_ also does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that sacramento not is contained by and that lake tahoe not is contained by", "variables": {}}
{"nl": "what city is the capital of _state_ and has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is capital of california and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state not contaning _lake_ contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state with a _place_ lowvpoint has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of river borders", "variables": {}}
{"nl": "which state borders _state_ and is smaller than the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california borders and whose area is not area of usa", "variables": {}}
{"nl": "what _state_ lake has a larger area than the area of the united states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is larger than area of usa", "variables": {}}
{"nl": "what state that does not border _state_ contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of city is contained by", "variables": {}}
{"nl": "what state is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that state not borders", "variables": {}}
{"nl": "what major river borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that borders the most number of state", "variables": {}}
{"nl": "what is a state that _state_ does not border with an area different from _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california not borders and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state with no _state_ borders has the highest number of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state does the _river_ border that 's high point is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and whose high point is not low point of california", "variables": {}}
{"nl": "what is the capital of a state that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ) )", "can": "capital of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what state does _state_ not border that contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california not borders and that mountain is contained by", "variables": {}}
{"nl": "state that has _place_ and the most number of places", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what state not containing _place_ has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what 's a major river that does n't traverse a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that is major and that not traverses city", "variables": {}}
{"nl": "what state not contaning _mountain_ contains a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that mountain is contained by", "variables": {}}
{"nl": "what is the total population of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ) ) )", "can": "total population of state that borders california", "variables": {}}
{"nl": "what is the total area of the state with the capital city of _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state whose capital is sacramento", "variables": {}}
{"nl": "what major lake has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is major and whose area is not area of california", "variables": {}}
{"nl": "what city named _city_ has the greatest amount of _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is named sacramento and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state without _state_ borders has the most _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse with its low point that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose low point is not low point of california", "variables": {}}
{"nl": "what is the high point of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the smallest density", "variables": {}}
{"nl": "what is a mountain within _state_ with a lower elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "what is the total population of the country with the smallest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the smallest area", "variables": {}}
{"nl": "which state does the _river_ not border with its low point not being the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose low point is not high point of california", "variables": {}}
{"nl": "what major lake has an area not similar to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is major and whose area is not area of lake tahoe", "variables": {}}
{"nl": "name the state with the fewest river borders that 's not bordered by the _river_ .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of river borders", "variables": {}}
{"nl": "what is a country that _state_ is not in having a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state not traversed by the _river_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that colorado river not traverses and that has the largest population", "variables": {}}
{"nl": "what is the total length of a major river ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ) ) )", "can": "total length of river that is major", "variables": {}}
{"nl": "what is the population of a state not bordering the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ) )", "can": "population of state that colorado river not borders", "variables": {}}
{"nl": "what is the high point of a state not containg _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ) )", "can": "high point of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state contains _mountain_ with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that mount whitney is contained by and whose low point is death valley", "variables": {}}
{"nl": "which state borders _state_ within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that borders california and that is contained by the most number of country", "variables": {}}
{"nl": "what city that 's named the most number of names is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is named the most number of name", "variables": {}}
{"nl": "what state that has a low point other than _place_ has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what city traversed by the _river_ has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river traverses and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what river that does not traverse _state_ has a length longer than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses california and whose length is larger than length of colorado river", "variables": {}}
{"nl": "what state with the fewest mountains has no _state_ borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of mountain is contained by", "variables": {}}
{"nl": "what major city has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is major and that is named the most number of name", "variables": {}}
{"nl": "what river traversing _city_ is the same length as the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses sacramento and whose length is length of colorado river", "variables": {}}
{"nl": "what state with a high point other than _place_ has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is not death valley and whose population is population of usa", "variables": {}}
{"nl": "name the state that 's traversed by the _river_ and also has the most _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what city traversed by the _river_ contains the most _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river traverses and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what is the densest city capital ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string density_city_count ) ) )", "can": "city that is a capital and that has the largest density", "variables": {}}
{"nl": "what state with a low point of _place_ has a low point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose low point is not high point of california", "variables": {}}
{"nl": "what state that does not border _state_ contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and that capital of california is contained by", "variables": {}}
{"nl": "what river does not traverse _state_ and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that not borders state", "variables": {}}
{"nl": "which state does the _river_ border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that colorado river borders", "variables": {}}
{"nl": "what city that is not in _place_ has a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "how many places are not within _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ) )", "can": "number of place that not is contained by california", "variables": {}}
{"nl": "what state is _lake_ in that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that borders the most number of state", "variables": {}}
{"nl": "what place is the lowest point in _state_ and has the smallest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that is low point of california and that has the smallest elevation", "variables": {}}
{"nl": "what state does the _river_ traverse that has the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose low point is not low point of california", "variables": {}}
{"nl": "how many cities have the smallest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string area_city_length^2 ) ) ) )", "can": "number of city that has the smallest area", "variables": {}}
{"nl": "what is the state bordered by the _river_ that has an area not equal to _lake_ 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the _river_ ?", "lf": "( call SW.listValue _river_ )", "can": "colorado river", "variables": {}}
{"nl": "what is the capital of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the largest population", "variables": {}}
{"nl": "what state with a high point that is not _place_ does not have _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose low point is not low point of california", "variables": {}}
{"nl": "what city containing _place_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state does not have _place_ and has the most amount of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of river borders", "variables": {}}
{"nl": "which usa state has a state low point ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ) )", "can": "low point of state that is contained by usa", "variables": {}}
{"nl": "what state that does n't have _city_ as a capital has the fewest river crossings ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of river traverses", "variables": {}}
{"nl": "what is the capital of the state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ) )", "can": "capital of state that california borders", "variables": {}}
{"nl": "which state not containing _city_ has a greater population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what country containing _state_ has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what 's the state 's total elevation of it 's lowest point ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of low point of state", "variables": {}}
{"nl": "what city containing _place_ is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that death valley is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what city does not contain _place_ nor is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that river not traverses", "variables": {}}
{"nl": "what state is _place_ in with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley is contained by and whose population is population of california", "variables": {}}
{"nl": "what state not containing _city_ has the largest amount of area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that sacramento not is contained by and that has the largest area", "variables": {}}
{"nl": "what state has a high point that is not _place_ and has the most number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of city is contained by", "variables": {}}
{"nl": "what state whose high point is not _place_ has the most number high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which major city whose population is not population of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is major and whose population is not population of california", "variables": {}}
{"nl": "name the capital city with the fewest river traverses .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is a capital and that the least number of river traverses", "variables": {}}
{"nl": "what _state_ high point location is high point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is high point of the most number of state", "variables": {}}
{"nl": "what state containing _lake_ contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what river traversing _state_ traverses a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses city", "variables": {}}
{"nl": "what state containing _mountain_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what state with a low point other than _place_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is not death valley and whose population is not population of sacramento", "variables": {}}
{"nl": "name a city .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) )", "can": "city", "variables": {}}
{"nl": "what state does not contain _lake_ and has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "which state 's capital is not _city_ with a population less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what is the low point of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ) )", "can": "low point of state that california not borders", "variables": {}}
{"nl": "what city does the _river_ traverse that is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is contained by state", "variables": {}}
{"nl": "what state does not border _state_ and has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not borders california and whose area is larger than area of california", "variables": {}}
{"nl": "what state does the _river_ traverse and its low point is a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose low point is place", "variables": {}}
{"nl": "what state borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that california borders", "variables": {}}
{"nl": "which state is not contained by _mountain_ and the high point is not _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that mount whitney not is contained by and whose high point is not death valley", "variables": {}}
{"nl": "give the total area of a state that does not have _place_ in it .", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that death valley is contained by", "variables": {}}
{"nl": "what state has a high point other than _place_ and its high point is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose high point is not low point of california", "variables": {}}
{"nl": "what state bordering _state_ has a smaller area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that borders california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state has a low point that is not _place_ and a high point that is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose high point is low point of california", "variables": {}}
{"nl": "what state is _city_ not in and has the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what river that traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses state", "variables": {}}
{"nl": "what state with a high point other than _place_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that lake not is contained by", "variables": {}}
{"nl": "which state does not border _state_ with a low point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and whose low point is not high point of california", "variables": {}}
{"nl": "what state is traversed and bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that colorado river traverses and that colorado river borders", "variables": {}}
{"nl": "what is the name of the state that does n't have a river or _city_ as one of it 's borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that river not borders", "variables": {}}
{"nl": "what state bordered by the _river_ does not have a lake contained within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that lake not is contained by", "variables": {}}
{"nl": "what city is the capital of _state_ with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is capital of california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state does _state_ not border that has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that california not borders and whose capital is sacramento", "variables": {}}
{"nl": "name a major city that is not in the state of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string major_city ) ) )", "can": "city that not is contained by california and that is major", "variables": {}}
{"nl": "which state has a river flowing through it but is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that river traverses", "variables": {}}
{"nl": "what country not contained by _state_ has an area that is smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state containing _lake_ does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that lake tahoe is contained by and that sacramento not is contained by", "variables": {}}
{"nl": "which state is _mountain_ not is does not have a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that mount whitney not is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what city that is within _state_ contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is contained by california and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what lake contained by _state_ is also contained by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string loc_lake_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by california and that is contained by state", "variables": {}}
{"nl": "what 's the us state with the biggest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that is contained by usa and that has the largest area", "variables": {}}
{"nl": "what state does the _river_ traverse with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river traverses and whose population is not population of usa", "variables": {}}
{"nl": "what lake not within _state_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is area of california", "variables": {}}
{"nl": "what is the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) )", "can": "area of lake tahoe", "variables": {}}
{"nl": "which state does not border _state_ and has an area equal to the area of usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california not borders and whose area is area of usa", "variables": {}}
{"nl": "what city that is named _city_ has an area that is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is not area of usa", "variables": {}}
{"nl": "which state borders _state_ and also borders the least amount of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that borders the least number of state", "variables": {}}
{"nl": "which state borders _state_ with an area the same as _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that borders california and whose area is area of california", "variables": {}}
{"nl": "what city is _place_ not in with a population less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley not is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what us state has a population not equal to that of the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that is contained by usa and whose population is not population of usa", "variables": {}}
{"nl": "what state with a high point other than _place_ has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and whose capital is capital of california", "variables": {}}
{"nl": "what city named _city_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that is named sacramento and that has the smallest area", "variables": {}}
{"nl": "what is the total elevtion of the place that has the highest elevation ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that has the largest elevation", "variables": {}}
{"nl": "what cities outside of _state_ have a smaller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is smaller than area of california", "variables": {}}
{"nl": "which state does the _river_ not traverse that has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that colorado river not traverses and that has the smallest area", "variables": {}}
{"nl": "what state contains _place_ that has an area that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is not area of california", "variables": {}}
{"nl": "what state not containing _city_ has no other cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that city not is contained by", "variables": {}}
{"nl": "which state does the _river_ not border with the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of river borders", "variables": {}}
{"nl": "which state 's capital is _city_ with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state that the _river_ is in has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that colorado river traverses and that has the largest population", "variables": {}}
{"nl": "what river does not traverse _state_ but traverses the most state ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses the most number of state", "variables": {}}
{"nl": "what state with a capital that is not _city_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that borders the most number of state", "variables": {}}
{"nl": "what state with a capital other than _city_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ traverse with its high point not being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose high point is not place", "variables": {}}
{"nl": "what state with a capital other than _city_ is does not contain _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and that capital of california not is contained by", "variables": {}}
{"nl": "which city does the _river_ not traverse and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that not is contained by state", "variables": {}}
{"nl": "what state does not contain _lake_ but does contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that lake tahoe is contained by and that mount whitney is contained by", "variables": {}}
{"nl": "what city not named _city_ has an area equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is area of california", "variables": {}}
{"nl": "which capital city of _state_ is the least populated ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that is capital of california and that has the smallest population", "variables": {}}
{"nl": "what mountain that is not wi thin _state_ contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that not is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what is the total population of a country that has the largest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the largest population", "variables": {}}
{"nl": "what state does not have _city_ as its capital and has the low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose low point is place", "variables": {}}
{"nl": "name the state with the fewest _state_ low points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state that the _river_ does not border has the biggest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that colorado river not borders and that has the largest population", "variables": {}}
{"nl": "how high is _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mount whitney", "variables": {}}
{"nl": "what state has a usa population and a capital named _city_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is sacramento and whose population is population of usa", "variables": {}}
{"nl": "which state whose low point is _place_ is contained by a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that city is contained by", "variables": {}}
{"nl": "what city is _city_ with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is smaller than area of california", "variables": {}}
{"nl": "what state is _city_ not in and not contained by a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that city is contained by", "variables": {}}
{"nl": "which state 's capital is not _city_ and does not have _city_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that city not is contained by", "variables": {}}
{"nl": "what is the density of a city not containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string density_city_count ) ) )", "can": "density of city that death valley not is contained by", "variables": {}}
{"nl": "what state with a high point of _place_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose low point is not high point of california", "variables": {}}
{"nl": "what state with a different area measurement than the us does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what united states state has a _state_ capital as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and whose capital is capital of california", "variables": {}}
{"nl": "what state borders both _state_ and other states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that borders state", "variables": {}}
{"nl": "what is the total elevation of a mountain within _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mountain that is contained by california", "variables": {}}
{"nl": "which state bordering _state_ has the greatest number of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of state borders", "variables": {}}
{"nl": "what is _state_ 's capital and the city with the greatest population density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that is capital of california and that has the largest density", "variables": {}}
{"nl": "which _state_ city has a population that 's not the usa figure ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is contained by california and whose population is not population of usa", "variables": {}}
{"nl": "what state with a low point of _place_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and that high point of california is contained by", "variables": {}}
{"nl": "which state is adjacent to _state_ and has the fewest number of other bordering states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of state borders", "variables": {}}
{"nl": "which city that _place_ is not contained by has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what city does the _river_ traverse with a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river traverses and whose population is not population of california", "variables": {}}
{"nl": "what state does not contain _lake_ that has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that lake tahoe not is contained by and that has the largest population", "variables": {}}
{"nl": "what state not containing _lake_ has a population that differs from _city_ 's population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what place is the low point of _state_ that is within the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is contained by the most number of city", "variables": {}}
{"nl": "what is the least dense state bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that borders california and that has the smallest density", "variables": {}}
{"nl": "what state is _lake_ in with a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose capital is city", "variables": {}}
{"nl": "what state has a high point of _place_ and a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and whose low point is place", "variables": {}}
{"nl": "which state does not border _state_ that has the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of mountain is contained by", "variables": {}}
{"nl": "what is the high point of a state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ) )", "can": "high point of state", "variables": {}}
{"nl": "what state borders _state_ containing the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of place is contained by", "variables": {}}
{"nl": "what city is _place_ not in with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what 's the total population of a state with no _river_ borders ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ) ) )", "can": "total population of state that colorado river not borders", "variables": {}}
{"nl": "which state bordered by the _river_ contains the fewest _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and that the least number of high point of california is contained by", "variables": {}}
{"nl": "name the city not containing _place_ which is the capital of the highest amount of states .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is capital of the most number of state", "variables": {}}
{"nl": "how dense is _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string density_state_count ) ) )", "can": "density of california", "variables": {}}
{"nl": "what state containing _place_ does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that not borders state", "variables": {}}
{"nl": "what city within _state_ has a population that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is contained by california and whose population is not population of california", "variables": {}}
{"nl": "what is the total area of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that has the smallest density", "variables": {}}
{"nl": "what is the total density of a state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string density_state_count ) ) ) )", "can": "total density of state that colorado river traverses", "variables": {}}
{"nl": "which major city has the least places in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is major and that the least number of place is contained by", "variables": {}}
{"nl": "what number of countries have the least density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ) )", "can": "number of country that has the smallest density", "variables": {}}
{"nl": "what state containig _city_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what river does not traverse _state_ and has the longest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string max ) ( string len_river_length ) ) )", "can": "river that not traverses california and that has the largest length", "variables": {}}
{"nl": "what state does the _river_ border with an area different than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is not area of usa", "variables": {}}
{"nl": "what city is named _city_ and not named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that not is named name", "variables": {}}
{"nl": "what state borders _state_ and the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that borders california and that colorado river borders", "variables": {}}
{"nl": "what capital city has an area that is not the same as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is a capital and whose area is not area of california", "variables": {}}
{"nl": "what are the populations of the cities traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ) )", "can": "population of city that colorado river traverses", "variables": {}}
{"nl": "what state with a low point other than _place_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the least number of state borders", "variables": {}}
{"nl": "what river traversing _state_ borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that not borders state", "variables": {}}
{"nl": "how long are the rivers that do n't pass through _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string len_river_length ) ) )", "can": "length of river that not traverses sacramento", "variables": {}}
{"nl": "which _state_ high point has a greater elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is high point of california and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "how many rivers have the smallest length ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) ) )", "can": "number of river that has the smallest length", "variables": {}}
{"nl": "what country has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country whose population is larger than population of california", "variables": {}}
{"nl": "what state outside of the usa has a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not is contained by usa and whose population is larger than population of usa", "variables": {}}
{"nl": "which state 's capital is _city_ with the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of river borders", "variables": {}}
{"nl": "what state with a capital other than _city_ does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that place not is contained by", "variables": {}}
{"nl": "what river does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) )", "can": "river that not traverses california", "variables": {}}
{"nl": "what state bordered by the _river_ has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what capital city contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is contained by the least number of state", "variables": {}}
{"nl": "what _state_ capital city has an area unequal to the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is capital of california and whose area is not area of usa", "variables": {}}
{"nl": "what is the population of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string population_state_count ) ) )", "can": "population of state that has the smallest density", "variables": {}}
{"nl": "what place that is the low point of _state_ is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is low point of california and that is high point of california", "variables": {}}
{"nl": "name the state where _city_ is located and has the least number of rivers running through it .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what capital of a state has the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the largest area", "variables": {}}
{"nl": "what state not containing _mountain_ contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what state that _state_ does not border has a different area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california not borders and whose area is not area of california", "variables": {}}
{"nl": "what city within _state_ is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "what state is _lake_ in that a state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that state borders", "variables": {}}
{"nl": "what state with a low point of _place_ contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of mountain is contained by", "variables": {}}
{"nl": "which state does the _river_ not traverse with a smaller area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state does not border _state_ and has an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not borders california and whose area is area of usa", "variables": {}}
{"nl": "name a state that does not have the _river_ run through or border it .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that colorado river not traverses and that colorado river not borders", "variables": {}}
{"nl": "what state does _state_ not border with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california not borders and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what place within _state_ has the highest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( string elevation_place_length ) ) )", "can": "place that is contained by california and that has the largest elevation", "variables": {}}
{"nl": "what river does not traverse _state_ that has a length equal to the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses california and whose length is length of colorado river", "variables": {}}
{"nl": "what state is _place_ not in that is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that not is contained by country", "variables": {}}
{"nl": "what state is within the usa and has a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that is contained by usa and whose high point is not death valley", "variables": {}}
{"nl": "what is a city not within _state_ that is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) )", "can": "city that not is contained by california and that colorado river traverses", "variables": {}}
{"nl": "what state 's high point is _place_ and contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that lake is contained by", "variables": {}}
{"nl": "what is the total population of a city that is not in _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ) ) )", "can": "total population of city that not is contained by california", "variables": {}}
{"nl": "what state with a _state_ high point as its low point has _city_ as a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose low point is high point of california", "variables": {}}
{"nl": "what state does n't border _state_ and has the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california not borders and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state 's low point is _place_ that has a population equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is death valley and whose population is population of usa", "variables": {}}
{"nl": "what place has the same elevation as _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place whose elevation is elevation of death valley", "variables": {}}
{"nl": "what state with a capital of _city_ is traveresed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of river traverses", "variables": {}}
{"nl": "which state does the _river_ border and contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that place is contained by", "variables": {}}
{"nl": "what city does not contain _place_ with the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that death valley not is contained by and that has the largest density", "variables": {}}
{"nl": "what state does the _river_ not traverse that has a population less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not traverses and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state does not contain _lake_ and has a high point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what state does not contain _lake_ and has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose capital is not city", "variables": {}}
{"nl": "what capital city has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is a capital and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state is _mountain_ in that the _river_ does not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that mount whitney is contained by and that colorado river not borders", "variables": {}}
{"nl": "what city is not within _state_ and is not named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string city_name ) ( string ! = ) _name_ ) )", "can": "city that not is contained by california and that not is named sacramento", "variables": {}}
{"nl": "what state with a low point of _place_ has the same low point as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose low point is low point of california", "variables": {}}
{"nl": "what state that the _river_ traverses and that the lake is contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that lake is contained by", "variables": {}}
{"nl": "which river traverses _city_ but does not traverse a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that not traverses state", "variables": {}}
{"nl": "what major city is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that not is contained by state", "variables": {}}
{"nl": "what is the population of the city with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string area_city_length^2 ) ) ( string population_city_count ) ) )", "can": "population of city that has the largest area", "variables": {}}
{"nl": "what is the total elevation of mountains not located in _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mountain that not is contained by california", "variables": {}}
{"nl": "what state with a capital other than _city_ is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that river not borders", "variables": {}}
{"nl": "what state that _state_ borders does that state not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california borders and that state not borders", "variables": {}}
{"nl": "what state containing _city_ has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose high point is not place", "variables": {}}
{"nl": "what state has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose population is not population of usa", "variables": {}}
{"nl": "what is the elevation of a mountain ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ) )", "can": "elevation of mountain", "variables": {}}
{"nl": "which state without a _place_ high point contains the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and that capital of california is contained by", "variables": {}}
{"nl": "what is the total area of the country with the smallest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the smallest population", "variables": {}}
{"nl": "what country is _state_ in that has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string max ) ( string area_country_length^2 ) ) )", "can": "country that california is contained by and that has the largest area", "variables": {}}
{"nl": "what state not bordering _state_ is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that not borders california and that colorado river borders", "variables": {}}
{"nl": "what state with a _place_ low point is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that river not traverses", "variables": {}}
{"nl": "what state is _place_ in that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that death valley is contained by and that lake tahoe not is contained by", "variables": {}}
{"nl": "what city within _state_ is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is capital of the least number of state", "variables": {}}
{"nl": "what is the area of a state not containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) )", "can": "area of state that death valley not is contained by", "variables": {}}
{"nl": "what city not containing _place_ contains _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what state that 's bordering _state_ contains a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and that high point of california is contained by", "variables": {}}
{"nl": "which state has a population similaro to _city_ and not containing _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what state with a low point that is not _place_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ with a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose capital is city", "variables": {}}
{"nl": "what state containing _city_ contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state is _place_ not in and does not have _state_ 's hight point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "how many cities are not named _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ) )", "can": "number of city that not is named sacramento", "variables": {}}
{"nl": "what country containing _state_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string min ) ( string area_country_length^2 ) ) )", "can": "country that california is contained by and that has the smallest area", "variables": {}}
{"nl": "what state bordering _state_ has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state containing _mountain_ also contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what state bordering the _river_ is not traversed by it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that colorado river borders and that colorado river not traverses", "variables": {}}
{"nl": "which city is not in _state_ and is not contained by the location which is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is contained by california and that high point of california not is contained by", "variables": {}}
{"nl": "what place has the largest elevation outside of _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string max ) ( string elevation_place_length ) ) )", "can": "place that not is contained by california and that has the largest elevation", "variables": {}}
{"nl": "what city is _place_ not in that has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that death valley not is contained by and that has the smallest area", "variables": {}}
{"nl": "what city named _city_ has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "how many countries have the smallest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ) )", "can": "number of country that has the smallest area", "variables": {}}
{"nl": "what state with a _place_ low point contains a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and that low point of california is contained by", "variables": {}}
{"nl": "which state contained by the us has a population larger than the population of the us .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that is contained by usa and whose population is larger than population of usa", "variables": {}}
{"nl": "which state is _lake_ in that does not border the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that lake tahoe is contained by and that colorado river not borders", "variables": {}}
{"nl": "what state is _lake_ not in and contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "name the river that does not cross _state_ and crosses the most number of _state_ 's capitals .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses california and that traverses the most number of capital of california", "variables": {}}
{"nl": "what 's the longest river not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string max ) ( string len_river_length ) ) )", "can": "river that not borders california and that has the largest length", "variables": {}}
{"nl": "what state outside of the us has a larger area than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is larger than area of usa", "variables": {}}
{"nl": "what city that is not within _state_ has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is contained by california and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city is _place_ in with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what state does the _river_ traverse with the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state borders _state_ with its low point a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and whose low point is place", "variables": {}}
{"nl": "what city is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of state", "variables": {}}
{"nl": "what state not containing _lake_ has a population equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what place that is within _city_ is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that not is contained by city", "variables": {}}
{"nl": "what 's the total density of the state having the lowest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the smallest density", "variables": {}}
{"nl": "what major lakes are contained within states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string loc_lake_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is major and that is contained by state", "variables": {}}
{"nl": "what state that contains _lake_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose capital is not city", "variables": {}}
{"nl": "what state contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that the least number of place is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "which state has _city_ as a capital and does n't have a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose high point is not high point of california", "variables": {}}
{"nl": "what state not containing _city_ does not contain a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "which state , not contained _mountain_ has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of river borders", "variables": {}}
{"nl": "what city not containing _place_ is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that colorado river traverses and that death valley not is contained by", "variables": {}}
{"nl": "which state in the usa has an area smalelr than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is smaller than area of california", "variables": {}}
{"nl": "what state contains _place_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that state borders", "variables": {}}
{"nl": "what major city has a population equal in number to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is major and whose population is population of sacramento", "variables": {}}
{"nl": "what is the population of the largest - area country ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string population_country_count ) ) )", "can": "population of country that has the largest area", "variables": {}}
{"nl": "which state does not have the capital of _city_ and area is smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is smaller than area of usa", "variables": {}}
{"nl": "what city does not contain _place_ and has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is area of california", "variables": {}}
{"nl": "what lake is not within _state_ and has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is larger than area of california", "variables": {}}
{"nl": "what city named _city_ is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is capital of the least number of state", "variables": {}}
{"nl": "what state with a low point other than _place_ has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is not death valley and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state that the _river_ traverses has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that colorado river traverses and whose capital is sacramento", "variables": {}}
{"nl": "what country is _state_ not in that contains a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california not is contained by and that state is contained by", "variables": {}}
{"nl": "what place not within _state_ is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that not is contained by california and that is high point of california", "variables": {}}
{"nl": "what state borders _state_ and has a river that crosses through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that river traverses", "variables": {}}
{"nl": "what country does not contain _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) )", "can": "country that california not is contained by", "variables": {}}
{"nl": "what state borders _state_ with a low point equal to the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and whose low point is high point of california", "variables": {}}
{"nl": "which state contains cities and does not have _place_ as a high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that city is contained by", "variables": {}}
{"nl": "what state with a low point that is not _place_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what city is not within _state_ and has the fewest rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that the least number of river traverses", "variables": {}}
{"nl": "what city does not contain _place_ with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state containing _place_ has _state_ 's low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what state with a capital that is not _city_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that the least number of high point of california is contained by", "variables": {}}
{"nl": "which state borders _state_ and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that california borders and that death valley not is contained by", "variables": {}}
{"nl": "what state not containing _lake_ contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that city is contained by", "variables": {}}
{"nl": "what state contains _mountain_ and has a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what city is not within _state_ that has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is contained by california and whose population is not population of usa", "variables": {}}
{"nl": "what state borders _state_ and has no _state_ high points ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and that high point of california not is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose high point is high point of california", "variables": {}}
{"nl": "what state has a low point different than _state_ and borders _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and whose low point is not low point of california", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that lake is contained by", "variables": {}}
{"nl": "how many rivers do not have _state_ borders ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ) )", "can": "number of river that not borders california", "variables": {}}
{"nl": "what state with a capital of _city_ has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and whose capital is capital of california", "variables": {}}
{"nl": "what state not containing _place_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that borders the most number of state", "variables": {}}
{"nl": "which state is within the usa and has _city_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) )", "can": "state that is contained by usa and that sacramento is contained by", "variables": {}}
{"nl": "which state with the most cities does not have a _state_ border ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of city is contained by", "variables": {}}
{"nl": "how many people live in the city", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ) ) )", "can": "total population of city", "variables": {}}
{"nl": "what state is _place_ not in that the most rivers traverse ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state is _mountain_ not in and has a population different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is not population of california", "variables": {}}
{"nl": "name the place in _state_ with the lowest elevation higher than _place_ 's", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is low point of california and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what state that is not within the usa does not contain cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that city not is contained by", "variables": {}}
{"nl": "what city contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that low point of california is contained by", "variables": {}}
{"nl": "which state with a _state_ low point as a high point does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what country is _state_ located in and has the fewest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_state_country ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california is contained by and that the least number of state is contained by", "variables": {}}
{"nl": "what state is _city_ not in that borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that river borders", "variables": {}}
{"nl": "what state contains _mountain_ and is more populous than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what country is _state_ not in with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what capital city has a name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is a capital and that is named name", "variables": {}}
{"nl": "what state has a high point of _place_ with a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is death valley and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state containing _city_ has the fewest number of _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what city does the _river_ not traverse that is within as state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is contained by state", "variables": {}}
{"nl": "what state 's low point is a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is place", "variables": {}}
{"nl": "what river that does not traverse _city_ has the longest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string max ) ( string len_river_length ) ) )", "can": "river that not traverses sacramento and that has the largest length", "variables": {}}
{"nl": "what country does not have the population of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country whose population is population of usa", "variables": {}}
{"nl": "what state contains _lake_ and has a high point that 's not a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what state that has a low point other than _place_ has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what is the state that contains _city_ and does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what place is the low point of _state_ and the high point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is high point of the most number of state", "variables": {}}
{"nl": "what state borders _state_ and contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what major city boasts the highest population amount ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( string population_city_count ) ) )", "can": "city that is major and that has the largest population", "variables": {}}
{"nl": "what river that traverses _city_ has a length smaller than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses sacramento and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "which sate 's low point is _place_ and is within the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that is contained by the most number of country", "variables": {}}
{"nl": "what state bordering _state_ is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that river not borders", "variables": {}}
{"nl": "what state contains _place_ that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that borders the most number of state", "variables": {}}
{"nl": "which state 's highest point is _place_ and has a smaller area than that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is smaller than area of california", "variables": {}}
{"nl": "what state contains _lake_ that does not run alongside _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that not borders california and that lake tahoe is contained by", "variables": {}}
{"nl": "what major lake has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is major and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state contains _city_ and has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose capital is not city", "variables": {}}
{"nl": "what city within _state_ has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is contained by california and whose area is larger than area of california", "variables": {}}
{"nl": "what state that borders _state_ has _state_ 's low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and whose high point is low point of california", "variables": {}}
{"nl": "what state does colorado border with a low point equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and whose low point is low point of california", "variables": {}}
{"nl": "which state is _lake_ in and has the most number of bordering rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of river borders", "variables": {}}
{"nl": "which stat borders the _river_ and does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river borders and that capital of california not is contained by", "variables": {}}
{"nl": "_mountain_ is in this state , and it has the highest point in _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what state is _lake_ in with an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what state with a low point of _place_ has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is death valley and whose population is larger than population of usa", "variables": {}}
{"nl": "what country is a state not contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that state not is contained by", "variables": {}}
{"nl": "what state bordering _state_ has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of river borders", "variables": {}}
{"nl": "what 's the density total of the state not containing _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string density_state_count ) ) ) )", "can": "total density of state that death valley not is contained by", "variables": {}}
{"nl": "what is the capital of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the smallest density", "variables": {}}
{"nl": "what state borders the _river_ and has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river borders and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what country has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) )", "can": "country that has the largest area", "variables": {}}
{"nl": "what place is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by city", "variables": {}}
{"nl": "which state has a high point other than _place_ and does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that place is contained by", "variables": {}}
{"nl": "which state in the usa has the most people ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( string population_state_count ) ) )", "can": "state that is contained by usa and that has the largest population", "variables": {}}
{"nl": "what state does the _river_ not border with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not borders and whose population is population of sacramento", "variables": {}}
{"nl": "what state traversed by a river does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that river traverses", "variables": {}}
{"nl": "what state with a capital of _city_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose low point is not high point of california", "variables": {}}
{"nl": "which state 's capital is _city_ and has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is sacramento and whose population is not population of usa", "variables": {}}
{"nl": "how many live in the tiniest city in terms of physical size ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string area_city_length^2 ) ) ( string population_city_count ) ) )", "can": "population of city that has the smallest area", "variables": {}}
{"nl": "what city with a population equaling _state_ does not have a _state_ population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is capital of california and whose population is not population of california", "variables": {}}
{"nl": "what is the population density of the state containing _lake_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string density_state_count ) ) ) )", "can": "total density of state that lake tahoe is contained by", "variables": {}}
{"nl": "what is the total density of the state containing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string density_state_count ) ) ) )", "can": "total density of state that sacramento is contained by", "variables": {}}
{"nl": "what major city has the least low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is major and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state is neither _city_ nor _mountain_ in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that sacramento not is contained by and that mount whitney not is contained by", "variables": {}}
{"nl": "what state with no state borders does not have _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that state not borders", "variables": {}}
{"nl": "what state has a high point other than _place_ which is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose high point is not place", "variables": {}}
{"nl": "what river traverses _state_ and borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that borders the least number of state", "variables": {}}
{"nl": "which state with a capital other than _city_ contains the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that is contained by the least number of country", "variables": {}}
{"nl": "what state is _city_ not in that has the fewest places in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what state borders _state_ with a population lower than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that borders california and whose population is smaller than population of usa", "variables": {}}
{"nl": "what are the populations of states that do n't contain _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ) )", "can": "population of state that death valley not is contained by", "variables": {}}
{"nl": "what capital city of _state_ does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is capital of california and that low point of california not is contained by", "variables": {}}
{"nl": "which state 's lowest point is not _place_ but it borders the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that borders the most number of state", "variables": {}}
{"nl": "what state does the _river_ border with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that colorado river borders and that has the smallest population", "variables": {}}
{"nl": "what city that _place_ is not contained by is that place is contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that place is contained by", "variables": {}}
{"nl": "what state containing _lake_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that lake not is contained by", "variables": {}}
{"nl": "name the state where _place_ is n't the the high point with the fewest number of places .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of place is contained by", "variables": {}}
{"nl": "what state containing _mountain_ has an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state that does not border _state_ does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that not borders california and that mount whitney not is contained by", "variables": {}}
{"nl": "what state contains _city_ and has a _place_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that sacramento is contained by and whose high point is death valley", "variables": {}}
{"nl": "which major city does the _river_ not run through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string major_city ) ) )", "can": "city that colorado river not traverses and that is major", "variables": {}}
{"nl": "high point of the fewest states", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of the least number of state", "variables": {}}
{"nl": "what state not containing _place_ has no _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "which state does the _river_ traverse the borders the fewest other state ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of state borders", "variables": {}}
{"nl": "how many countries have the largest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ) )", "can": "number of country that has the largest population", "variables": {}}
{"nl": "what state without a _place_ high point has state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that state borders", "variables": {}}
{"nl": "what river does not border _state_ and has a different length than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not borders california and whose length is length of colorado river", "variables": {}}
{"nl": "what state bordering the _river_ has a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and whose capital is city", "variables": {}}
{"nl": "what country has a population that is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country whose population is not population of usa", "variables": {}}
{"nl": "what lake is contained by _state_ with an area that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is not area of california", "variables": {}}
{"nl": "what lake is within _state_ having the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string max ) ( string area_lake_length^2 ) ) )", "can": "lake that is contained by california and that has the largest area", "variables": {}}
{"nl": "what 's the most populous state with a _place_ low point ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( string population_state_count ) ) )", "can": "state whose low point is death valley and that has the largest population", "variables": {}}
{"nl": "what is the capital of the state containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ) )", "can": "capital of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state does not contain _mountain_ and does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that mount whitney not is contained by and that california not borders", "variables": {}}
{"nl": "what state not traversed by the _river_ has a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river not traverses and whose high point is not death valley", "variables": {}}
{"nl": "which state not containing _lake_ has the least number of _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what is the state that contains a _place_ low point and has a population different than the us population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is death valley and whose population is not population of usa", "variables": {}}
{"nl": "what is the area of a city not named _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ) )", "can": "area of city that not is named sacramento", "variables": {}}
{"nl": "what state does the _river_ not traverse with a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose capital is city", "variables": {}}
{"nl": "what state with a low point of _place_ has a high point equal to _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose high point is high point of california", "variables": {}}
{"nl": "what country is _state_ in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) )", "can": "country that california is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of river borders", "variables": {}}
{"nl": "which place found within _state_ is not contained within _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) _city_ ) )", "can": "place that is contained by california and that not is contained by sacramento", "variables": {}}
{"nl": "what is the capital of a state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ) )", "can": "capital of state", "variables": {}}
{"nl": "what city that is n't _city_ has a population smaller than the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is named sacramento and whose population is smaller than population of california", "variables": {}}
{"nl": "what country has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country whose population is smaller than population of usa", "variables": {}}
{"nl": "what place that is not within _state_ has the smallest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( string elevation_place_length ) ) )", "can": "place that not is contained by california and that has the smallest elevation", "variables": {}}
{"nl": "what city that is not a capital has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( string density_city_count ) ) )", "can": "city that is a capital and that has the smallest density", "variables": {}}
{"nl": "what river traverses the highest number of states but does n't traverse _city_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses the most number of state", "variables": {}}
{"nl": "what state is _city_ in and a river traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that river traverses", "variables": {}}
{"nl": "what state that has a low point that is not _place_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string density_state_count ) ) )", "can": "state whose low point is not death valley and that has the largest density", "variables": {}}
{"nl": "what state that does not contain _lake_ has the least number of cities contained by it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what state with a high point other than _place_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is not death valley and whose population is population of california", "variables": {}}
{"nl": "what city not traversed by the _river_ is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is capital of state", "variables": {}}
{"nl": "what lake has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string min ) ( string area_lake_length^2 ) ) )", "can": "lake that has the smallest area", "variables": {}}
{"nl": "what state within the usa has a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that is contained by usa and whose population is larger than population of california", "variables": {}}
{"nl": "what state containing _mountain_ has a population different than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is not population of california", "variables": {}}
{"nl": "what is the total population of the city with the smallest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the smallest population", "variables": {}}
{"nl": "what area of the state contains _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ) )", "can": "area of state that sacramento is contained by", "variables": {}}
{"nl": "what mountain within _state_ has an elevation lower than _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what state has a low point of _place_ and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that not borders state", "variables": {}}
{"nl": "what city does the _river_ not traverse with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state containing _place_ also cotanins _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state which does n't have _place_ in it has a population different from the _state_ population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley not is contained by and whose population is not population of california", "variables": {}}
{"nl": "what country containing _state_ has a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what state does not border _state_ but contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of place is contained by", "variables": {}}
{"nl": "what city is not within _place_ but is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is contained by the most number of state", "variables": {}}
{"nl": "what state bordered by the _river_ contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and that low point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that mount whitney is contained by and that colorado river borders", "variables": {}}
{"nl": "which state does not border _state_ but contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state containing _mountain_ is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that mount whitney is contained by and that colorado river not traverses", "variables": {}}
{"nl": "which state has the lowest point of _state_ but its lowest point is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose low point is low point of california", "variables": {}}
{"nl": "what is the high point of a state within the usa ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ) )", "can": "high point of state that is contained by usa", "variables": {}}
{"nl": "which state does _state_ not border with a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california not borders and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what states bordered by the _river_ have an area greater than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is larger than area of usa", "variables": {}}
{"nl": "what state contains _place_ and has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "what state that borders _state_ has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that borders california and whose population is population of usa", "variables": {}}
{"nl": "which state has a low point other than _place_ and a high point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose high point is high point of california", "variables": {}}
{"nl": "what major city has a population equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is major and whose population is population of usa", "variables": {}}
{"nl": "what state with a capital of _city_ contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of lake is contained by", "variables": {}}
{"nl": "what state is _mountain_ not in and contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what state contains _lake_ and has a low point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "what state with a high point that is not _place_ has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of river borders", "variables": {}}
{"nl": "what city has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city whose area is smaller than area of california", "variables": {}}
{"nl": "which state is _mountain_ in with the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "what state 's low point is not _place_ and has a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is not death valley and whose population is larger than population of california", "variables": {}}
{"nl": "what city is in a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that place is contained by", "variables": {}}
{"nl": "what state does not border _state_ and contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of city is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of river borders", "variables": {}}
{"nl": "what city is the capital of _state_ with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that is capital of california and that has the smallest density", "variables": {}}
{"nl": "what state contains _lake_ and a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that lake is contained by", "variables": {}}
{"nl": "what state is not within the usa and the _river_ traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that not is contained by usa and that colorado river traverses", "variables": {}}
{"nl": "what state outside of the us has less area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is smaller than area of california", "variables": {}}
{"nl": "what state not containing _city_ has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state has a low point of _place_ and is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of river traverses", "variables": {}}
{"nl": "what state containing _place_ has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what state that is not within the usa is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that not is contained by country", "variables": {}}
{"nl": "what state with a high point that is not _place_ is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that river not borders", "variables": {}}
{"nl": "what is the capital of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the largest density", "variables": {}}
{"nl": "which state has a low point other than _place_ and a capital other than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and whose capital is not capital of california", "variables": {}}
{"nl": "what state that does not border _state_ does not border the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that not borders california and that colorado river not borders", "variables": {}}
{"nl": "what state that has a high point other than _place_ is high point not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose high point is not high point of california", "variables": {}}
{"nl": "what major lake has an area not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is major and whose area is not area of usa", "variables": {}}
{"nl": "what state is _mountain_ not in that borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that state borders", "variables": {}}
{"nl": "what 's the name of the city that is traversed by _river_ and whose population is equal to the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river traverses and whose population is population of california", "variables": {}}
{"nl": "which state does the _river_ not border with the fewest high points of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what place that is not within _state_ has a different elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what city named _city_ has a population that is greater than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is named sacramento and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state not bordering _state_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not borders california and that lake not is contained by", "variables": {}}
{"nl": "what state not in the usa has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that not is contained by usa and whose high point is death valley", "variables": {}}
{"nl": "which city does the _river_ not traverse and does not have the lowest point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that low point of california not is contained by", "variables": {}}
{"nl": "what state has less population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose population is smaller than population of usa", "variables": {}}
{"nl": "what state with a high point of _place_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that lake not is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ borders the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that borders the least number of state", "variables": {}}
{"nl": "what state is _place_ not in and its capital is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that death valley not is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what is the population of the city that has the smallest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string area_city_length^2 ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the smallest area", "variables": {}}
{"nl": "what place is the low point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of the most number of state", "variables": {}}
{"nl": "which state that does n't border _state_ contains the capital of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and that capital of california is contained by", "variables": {}}
{"nl": "what place contained by _city_ is within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that is contained by city", "variables": {}}
{"nl": "which state is _place_ in and its high point is a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose high point is place", "variables": {}}
{"nl": "what is the area of a country ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ) )", "can": "area of country", "variables": {}}
{"nl": "what city not traversed by the _river_ does not have a name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that not is named name", "variables": {}}
{"nl": "what state does _state_ not border that does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and that city not is contained by", "variables": {}}
{"nl": "which state is n't bordered by _state_ and has a larger area than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california not borders and whose area is larger than area of usa", "variables": {}}
{"nl": "what state is that city in", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that city is contained by", "variables": {}}
{"nl": "what state 's low point is not _place_ and has a population lower than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is not death valley and whose population is smaller than population of california", "variables": {}}
{"nl": "what state with a capital of _city_ has an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is smaller than area of california", "variables": {}}
{"nl": "what is the area of the state that has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ) )", "can": "area of state whose low point is death valley", "variables": {}}
{"nl": "what is the total population fo a state with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ) ) )", "can": "total population of state whose capital is not sacramento", "variables": {}}
{"nl": "what state 's capital is _city_ that contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of city is contained by", "variables": {}}
{"nl": "which of _state_ 's border states has the biggest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that borders california and that has the largest area", "variables": {}}
{"nl": "what state bordering _state_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what is the total density of a state that 's capital is not _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string density_state_count ) ) ) )", "can": "total density of state whose capital is not sacramento", "variables": {}}
{"nl": "what 's the state without _city_ in it that has a place with a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose low point is place", "variables": {}}
{"nl": "this state 's highest point is _state_ 's lowest point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is low point of california", "variables": {}}
{"nl": "which state has _city_ and the capital of _state_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what place is within the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by the least number of capital of california", "variables": {}}
{"nl": "what is the area of the state with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the smallest area", "variables": {}}
{"nl": "which is the largest city that the _river_ travels through ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is area of usa", "variables": {}}
{"nl": "which state bordering _state_ has the most number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of city is contained by", "variables": {}}
{"nl": "what state has a low point other than _place_ and is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that state not borders", "variables": {}}
{"nl": "what city is name _city_ and name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that is named name", "variables": {}}
{"nl": "the state with the least amount", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ) )", "can": "number of state that has the smallest area", "variables": {}}
{"nl": "what city named _city_ is the high point of _state_ contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is named sacramento and that high point of california is contained by", "variables": {}}
{"nl": "what is the total population of the state containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ) ) )", "can": "total population of state that mount whitney is contained by", "variables": {}}
{"nl": "what state that is not within the usa is bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that river borders", "variables": {}}
{"nl": "what major lake is not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string major_lake ) ) )", "can": "lake that not is contained by california and that is major", "variables": {}}
{"nl": "what state has a high point of _place_ and a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is death valley and whose population is population of california", "variables": {}}
{"nl": "what river does not traverse the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses capital of california", "variables": {}}
{"nl": "which state 's low point is _place_ and contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what lake has an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake whose area is smaller than area of california", "variables": {}}
{"nl": "what state not traversed by the _river_ does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that city not is contained by", "variables": {}}
{"nl": "what is the total population of the city with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string density_city_count ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the smallest density", "variables": {}}
{"nl": "what state does the _river_ not border with a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river not borders and whose low point is not death valley", "variables": {}}
{"nl": "what state is contained by a country and is does nto contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that is contained by country", "variables": {}}
{"nl": "what state does not contain _mountain_ and is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that mount whitney not is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what state is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that river not traverses", "variables": {}}
{"nl": "what state is _mountain_ in with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that mount whitney is contained by and that has the smallest population", "variables": {}}
{"nl": "what is the total area of the us states ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that is contained by usa", "variables": {}}
{"nl": "what is the total area of a state that borders _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that borders california", "variables": {}}
{"nl": "what state is _lake_ in with the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what _city_ city has an area unlike that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what major lake has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string min ) ( string area_lake_length^2 ) ) )", "can": "lake that is major and that has the smallest area", "variables": {}}
{"nl": "what city that is not within _state_ has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what place that is not within _state_ contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what state does _state_ and the _river_ border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that california borders and that colorado river borders", "variables": {}}
{"nl": "what place is within _state_ containing the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what city not named _city_ is in the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is contained by the least number of state", "variables": {}}
{"nl": "what city is a capital and contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is a capital and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and that capital of california not is contained by", "variables": {}}
{"nl": "which state has a greater population than the united states and does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not borders california and whose population is larger than population of usa", "variables": {}}
{"nl": "what state is bordered by _state_ and does not have a _state_ population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california borders and whose population is not population of california", "variables": {}}
{"nl": "which river borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders state", "variables": {}}
{"nl": "the _river_ is not a boundary of this state , which has the greatest population concentration .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that colorado river not borders and that has the largest density", "variables": {}}
{"nl": "what capital city of _state_ contains its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is capital of california and that high point of california is contained by", "variables": {}}
{"nl": "what is the total population of the country with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the smallest density", "variables": {}}
{"nl": "what state ie _mountain_ in the with most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what is the density of the state that has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string density_state_count ) ) )", "can": "density of state whose low point is death valley", "variables": {}}
{"nl": "what river that does not border _state_ has the smallest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string min ) ( string len_river_length ) ) )", "can": "river that not borders california and that has the smallest length", "variables": {}}
{"nl": "what 's the state that contains _place_ and also contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what state with a low point other than _place_ contains a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that mountain is contained by", "variables": {}}
{"nl": "what state borders _state_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that river not traverses", "variables": {}}
{"nl": "what state is _city_ in that contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that mountain is contained by", "variables": {}}
{"nl": "what state does the _river_ border that has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what is the total elevation of a place that is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that is high point of california", "variables": {}}
{"nl": "name the state with no _state_ borders and the highest amount of _state_ high points .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and that the most number of high point of california is contained by", "variables": {}}
{"nl": "how many states do not contain _place_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ) )", "can": "number of state that death valley not is contained by", "variables": {}}
{"nl": "name the states with _river_ borders that contain lakes .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that lake is contained by", "variables": {}}
{"nl": "what place is the low point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of the least number of state", "variables": {}}
{"nl": "what state with a capital of _city_ is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that state not borders", "variables": {}}
{"nl": "what state has a low point that is not _place_ and does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that low point of california not is contained by", "variables": {}}
{"nl": "what state with a high point other than _place_ and a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose low point is not place", "variables": {}}
{"nl": "what state does the _river_ border that contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of lake is contained by", "variables": {}}
{"nl": "what is the population of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ) )", "can": "population of city that is named sacramento", "variables": {}}
{"nl": "what country not containing _state_ has an area other than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what state contains _city_ and also contains _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that sacramento is contained by and that lake tahoe is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ does not contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that mountain is contained by", "variables": {}}
{"nl": "which state has no useable area and does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what state contains neither _lake_ nor _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that lake tahoe not is contained by and that mount whitney not is contained by", "variables": {}}
{"nl": "what state does not contain _city_ but does contain the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what location not found in _city_ is a state low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is low point of state", "variables": {}}
{"nl": "what is the population of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ) )", "can": "population of state that not borders california", "variables": {}}
{"nl": "_place_ is not in this state , which is not the same size as _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is not area of california", "variables": {}}
{"nl": "what state containing _place_ is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state does _state_ not border that is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that river traverses", "variables": {}}
{"nl": "what state bordering _state_ has a low point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that california borders and whose low point is not death valley", "variables": {}}
{"nl": "what state not bordered by _state_ has a low point that 's a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and whose low point is place", "variables": {}}
{"nl": "what state does teh _river_ not travesre with the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of river traverses", "variables": {}}
{"nl": "what city is n't bordered by the _river_ and has a population equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river not traverses and whose population is population of sacramento", "variables": {}}
{"nl": "what state is _place_ not in and does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that place is contained by", "variables": {}}
{"nl": "which state does the _river_ not traverse and contains a high point equivalent to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and that high point of california is contained by", "variables": {}}
{"nl": "what state borders the _river_ and borders the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that borders the least number of state", "variables": {}}
{"nl": "what river traverses _city_ but does not traverse the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses sacramento and that not traverses capital of california", "variables": {}}
{"nl": "name the state containing _lake_ which shares borders with the fewest states .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that borders the least number of state", "variables": {}}
{"nl": "what state has a capital different than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not capital of california", "variables": {}}
{"nl": "what state with a high point other than _place_ contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that lake is contained by", "variables": {}}
{"nl": "which state containing _mountain_ has the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what is the low point of the state containing _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ) )", "can": "low point of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what is the capital of a state that the _river_ traverses ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ) )", "can": "capital of state that colorado river traverses", "variables": {}}
{"nl": "which part of the country is the smallest in area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the smallest area", "variables": {}}
{"nl": "what lake that is not within _state_ has an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what place that is not within _city_ has an elevation smaller than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "what state does not border _state_ and is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not borders california and that not is contained by country", "variables": {}}
{"nl": "which city is not named _city_ but is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is named name", "variables": {}}
{"nl": "what place that is not within _state_ has an elevation equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what is the density of the country with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the largest area", "variables": {}}
{"nl": "name the state traversed by the _river_ that contains a _state_ high point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and that high point of california is contained by", "variables": {}}
{"nl": "what state without a low point location does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose low point is not place", "variables": {}}
{"nl": "what state not containing _city_ is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that state not borders", "variables": {}}
{"nl": "what is the smallest city in area that is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that colorado river traverses and that has the smallest area", "variables": {}}
{"nl": "what is the total density of a state with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string density_state_count ) ) ) )", "can": "total density of state whose low point is death valley", "variables": {}}
{"nl": "what state does the _river_ traverse with a low point that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and that low point of california not is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse and its high point is a pace ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose high point is place", "variables": {}}
{"nl": "what state that borders the _river_ has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that colorado river borders and that has the smallest density", "variables": {}}
{"nl": "what is the area of the state with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ) )", "can": "area of state whose capital is sacramento", "variables": {}}
{"nl": "what state not containing _mountain_ has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is place", "variables": {}}
{"nl": "what state 's low point is equal to _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is high point of california", "variables": {}}
{"nl": "what is the total population of a state with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ) ) )", "can": "total population of state whose low point is not death valley", "variables": {}}
{"nl": "what state does the _river_ not traverse that has the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose high point is high point of california", "variables": {}}
{"nl": "what state contains _city_ but not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what us state does not contain a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and that high point of california not is contained by", "variables": {}}
{"nl": "what state does the _river_ not border with a population different than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not borders and whose population is not population of sacramento", "variables": {}}
{"nl": "which country is _state_ not in with an area less than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state has the capital of _city_ and does n't border a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that river not borders", "variables": {}}
{"nl": "what state does the _river_ not border with an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is not area of california", "variables": {}}
{"nl": "what state not bordering _state_ has a low point not containg _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and that low point of california is contained by", "variables": {}}
{"nl": "what _state_ high point is a place not contained by the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is high point of california and that not is contained by capital of california", "variables": {}}
{"nl": "which river does not traverse _city_ or a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that not traverses state", "variables": {}}
{"nl": "what state has the low point of _place_ and is not within a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that place not is contained by", "variables": {}}
{"nl": "what location not containing _city_ is a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that not is contained by sacramento and that is low point of california", "variables": {}}
{"nl": "what city named _city_ has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is larger than area of california", "variables": {}}
{"nl": "what state that is traversed by the _river_ contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of lake is contained by", "variables": {}}
{"nl": "what state with no cities shares borders with _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and that city not is contained by", "variables": {}}
{"nl": "whihc state has a high point other than _place_ and contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that mountain is contained by", "variables": {}}
{"nl": "what state bordering _state_ has no low point places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and whose low point is not place", "variables": {}}
{"nl": "what city outside of _state_ has the same population as _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is contained by california and whose population is population of sacramento", "variables": {}}
{"nl": "what capital city has a population lower than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is a capital and whose population is smaller than population of california", "variables": {}}
{"nl": "what place is within the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by the least number of city", "variables": {}}
{"nl": "what is the capital of a state with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ) )", "can": "capital of state whose low point is not death valley", "variables": {}}
{"nl": "which river , that is shorter than the _river_ , traverses _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses california and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "what place is the high point of _state_ and the low point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is low point of the most number of state", "variables": {}}
{"nl": "what state does not contain _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is contained by state", "variables": {}}
{"nl": "what state has _place_ and the capital of _state_ within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what state 's low point is in _place_ while the high point is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose high point is not place", "variables": {}}
{"nl": "what state does the _river_ traverse with a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose low point is not place", "variables": {}}
{"nl": "what is the state population of a location with a _place_ low point ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ) )", "can": "population of state whose low point is death valley", "variables": {}}
{"nl": "which city does the _river_ not traverse with an area equal to the size of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is area of usa", "variables": {}}
{"nl": "what state does not border _state_ but is bordered by another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that borders state", "variables": {}}
{"nl": "what city does the _river_ traverse that traverses the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that the most number of river traverses", "variables": {}}
{"nl": "what place is the high point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of the most number of state", "variables": {}}
{"nl": "which mountain 's elevation is not the same as _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state with a capital of _city_ does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that low point of california not is contained by", "variables": {}}
{"nl": "what state does _state_ border with an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california borders and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state borders _state_ but not the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that california borders and that colorado river not borders", "variables": {}}
{"nl": "which state is _city_ in bordering the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that borders the least number of state", "variables": {}}
{"nl": "what place not within _city_ has an elevation larger than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "that is the total area of a city that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ) ) )", "can": "total area of city that death valley not is contained by", "variables": {}}
{"nl": "what state contains _mountain_ but does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that place not is contained by", "variables": {}}
{"nl": "which state whose high point is not _place_ has the least number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of lake is contained by", "variables": {}}
{"nl": "which state is bordered by the _river_ and has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river borders and whose population is not population of california", "variables": {}}
{"nl": "what major river traverses the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that is major and that traverses the most number of capital of california", "variables": {}}
{"nl": "what is the population of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string population_state_count ) ) )", "can": "population of state that has the largest density", "variables": {}}
{"nl": "what city that is not in _state_ has the fewest names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is named the least number of name", "variables": {}}
{"nl": "what state is not in the usa and has mountains within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that mountain is contained by", "variables": {}}
{"nl": "what state does n't contain _city_ and has the fewest _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento not is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what is the total density of a city not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string density_city_count ) ) ) )", "can": "total density of city that colorado river not traverses", "variables": {}}
{"nl": "which state with a _place_ low point has a non - city capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose capital is not city", "variables": {}}
{"nl": "which city in _state_ has the most number of places .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is contained by california and that the most number of place is contained by", "variables": {}}
{"nl": "what state bordering _state_ has a population smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that borders california and whose population is smaller than population of california", "variables": {}}
{"nl": "what river in _state_ has the the smallest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string min ) ( string len_river_length ) ) )", "can": "river that traverses california and that has the smallest length", "variables": {}}
{"nl": "what state is outside the usa and has a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not is contained by usa and whose population is smaller than population of usa", "variables": {}}
{"nl": "what _state_ capital city contains no places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is capital of california and that place not is contained by", "variables": {}}
{"nl": "what state containing _city_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that river not traverses", "variables": {}}
{"nl": "what is the density of a state within the usa ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string density_state_count ) ) )", "can": "density of state that is contained by usa", "variables": {}}
{"nl": "which state is _lake_ in that does n't border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that not borders state", "variables": {}}
{"nl": "what state bordered by _state_ has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and whose low point is not place", "variables": {}}
{"nl": "which state with a high point of _place_ is contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that city is contained by", "variables": {}}
{"nl": "what is the density of the state with the smallest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ( string density_state_count ) ) )", "can": "density of state that has the smallest density", "variables": {}}
{"nl": "what state not bordering _state_ borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that river borders", "variables": {}}
{"nl": "what city has the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that the most number of river traverses", "variables": {}}
{"nl": "what river does not border _state_ but traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses state", "variables": {}}
{"nl": "what state without a _city_ capital has a smaller population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse and does not border a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that river not borders", "variables": {}}
{"nl": "what is the high point of the state containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ) )", "can": "high point of state that mount whitney is contained by", "variables": {}}
{"nl": "what place is not within _state_ and has the low point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is low point of the most number of state", "variables": {}}
{"nl": "what lake has the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake whose area is area of usa", "variables": {}}
{"nl": "what state does the _river_ traverse but does not border colorado ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that colorado river traverses and that colorado river not borders", "variables": {}}
{"nl": "what state not containing _lake_ has a high point that is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what state containing no city has _place_ has its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that city not is contained by", "variables": {}}
{"nl": "which river borders _state_ but does not traverse it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_state ) ( string ! = ) _state_ ) )", "can": "river that borders california and that not traverses california", "variables": {}}
{"nl": "what state does the _river_ not border and has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what river not traversing _city_ has the most number of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that borders the most number of state", "variables": {}}
{"nl": "which river that has the largest length borders _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string max ) ( string len_river_length ) ) )", "can": "river that borders california and that has the largest length", "variables": {}}
{"nl": "what state that is not in the usa has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose capital is not city", "variables": {}}
{"nl": "what _state_ location is contained within the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by california and that is contained by capital of california", "variables": {}}
{"nl": "what state containing _place_ has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that high point of california is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that not borders state", "variables": {}}
{"nl": "which state is _mountain_ not in but the capital of _state_ is in ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state with no state borders contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that state not borders", "variables": {}}
{"nl": "what state with a greater area than _state_ 's also contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "which state 's capital is a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is city", "variables": {}}
{"nl": "what city not named _city_ contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) )", "can": "city that not is named sacramento and that death valley is contained by", "variables": {}}
{"nl": "what country has a larger area than _lake_ and contains _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state with a high point of _place_ has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is death valley and whose capital is capital of california", "variables": {}}
{"nl": "what state is _place_ not in with the fewest state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of state borders", "variables": {}}
{"nl": "what state with a capital that is not _city_ is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that not is contained by country", "variables": {}}
{"nl": "what river not traversing _state_ traverses the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses the most number of city", "variables": {}}
{"nl": "what state that _lake_ is in does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that lake tahoe is contained by and that death valley is contained by", "variables": {}}
{"nl": "what state does not border _state_ with an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not borders california and whose area is larger than area of usa", "variables": {}}
{"nl": "what state with a greater population than _city_ has _city_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what river that does not border _state_ traverses a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses city", "variables": {}}
{"nl": "what state does not border _state_ and has a high point that does not equal the lowest point of it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and whose high point is not low point of california", "variables": {}}
{"nl": "what city is named _city_ that has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is named sacramento and whose population is not population of california", "variables": {}}
{"nl": "how many cities have the highest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string population_city_count ) ) ) )", "can": "number of city that has the largest population", "variables": {}}
{"nl": "what state does the _river_ traverse that is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of state borders", "variables": {}}
{"nl": "what is the total density of the state with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string density_state_count ) ) ) )", "can": "total density of state whose capital is sacramento", "variables": {}}
{"nl": "which state not containing _lake_ has a high point that 's a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what state does not border _state_ with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not borders california and whose population is not population of usa", "variables": {}}
{"nl": "which state is in the usa with the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of city is contained by", "variables": {}}
{"nl": "name the state that does n't contain _place_ and also has the fewest contained cities .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what is the density of the state with the largest populaton ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string density_state_count ) ) )", "can": "density of state that has the largest population", "variables": {}}
{"nl": "what capital city of _state_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that is capital of california and that has the largest area", "variables": {}}
{"nl": "which city is not traversed by the _river_ but is traversed by the most others ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that the most number of river traverses", "variables": {}}
{"nl": "what state containg _mountain_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what lake within _state_ has an area not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is not area of usa", "variables": {}}
{"nl": "what state is _place_ not in with a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and whose high point is place", "variables": {}}
{"nl": "what state is contained by the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by country", "variables": {}}
{"nl": "what state is bordered by _state_ and does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california borders and that mountain not is contained by", "variables": {}}
{"nl": "which state 's high point is n't _place_ and has the least number of rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of river traverses", "variables": {}}
{"nl": "what is the shortest major river ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string min ) ( string len_river_length ) ) )", "can": "river that is major and that has the smallest length", "variables": {}}
{"nl": "what is _state_ 's capital and has fewer people than the whole state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is capital of california and whose population is smaller than population of california", "variables": {}}
{"nl": "what major city is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is major and that the least number of river traverses", "variables": {}}
{"nl": "what is the total area of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that not borders california", "variables": {}}
{"nl": "what state does the _river_ border that has a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river borders and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which place outside of _state_ is in the fewest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "which state features both _mountain_ and also the most _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state has the lowest point of _place_ and contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of lake is contained by", "variables": {}}
{"nl": "what state that does not border _state_ has a smaller area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not borders california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what city that is n't traversed by the _river_ contains other places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that place is contained by", "variables": {}}
{"nl": "what state does not border _state_ and does not contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not borders california and that mountain not is contained by", "variables": {}}
{"nl": "what state not traversed by the _river_ has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not traverses and whose population is not population of usa", "variables": {}}
{"nl": "what major city has a larger area than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is major and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _mountain_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is population of usa", "variables": {}}
{"nl": "what state contains _lake_ and a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that city is contained by", "variables": {}}
{"nl": "what _state_ location has a lower elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by california and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "which place has an elevation that is the lowest in _state_ but is higher than _mountain_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is low point of california and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what major river traverses the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that traverses the most number of state", "variables": {}}
{"nl": "what state contains _city_ and is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that sacramento is contained by and that colorado river borders", "variables": {}}
{"nl": "which state has the lowest point of _place_ with an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state is found in the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by the least number of country", "variables": {}}
{"nl": "what state does not border _state_ but has the most states bordering ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of state borders", "variables": {}}
{"nl": "what river runs across _state_ and borders some state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that borders state", "variables": {}}
{"nl": "what city not containing _place_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state that has _place_ as a low point is n't bordered by a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that mountain not is contained by", "variables": {}}
{"nl": "what state is not within the usa with the capital being a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose capital is city", "variables": {}}
{"nl": "what state has the same population as _city_ and no _place_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is not death valley and whose population is population of sacramento", "variables": {}}
{"nl": "what state has a capital that 's the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is capital of california", "variables": {}}
{"nl": "what state borders _state_ but does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that borders california and that lake tahoe not is contained by", "variables": {}}
{"nl": "what 's a state without _lake_ , that is bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that colorado river borders and that lake tahoe not is contained by", "variables": {}}
{"nl": "what state contains _lake_ with no mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that mountain not is contained by", "variables": {}}
{"nl": "what state containing _city_ has a low point that is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "what is the highest point of _state_ within its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is high point of california and that is contained by capital of california", "variables": {}}
{"nl": "what state not bordering _state_ does border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that not borders california and that california borders", "variables": {}}
{"nl": "what city is not within _state_ and is not named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that not is named name", "variables": {}}
{"nl": "which river does not traverse a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses state", "variables": {}}
{"nl": "what state is _city_ not contained by the contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what state not bordered by _state_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and that high point of california is contained by", "variables": {}}
{"nl": "what 's the total density of the country with the least amount of area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the smallest area", "variables": {}}
{"nl": "how many cities are not in _place_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ) )", "can": "number of city that death valley not is contained by", "variables": {}}
{"nl": "what state not bordered by the _river_ has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose low point is not place", "variables": {}}
{"nl": "what lake has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state containing _place_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state in the united states contains the most number of rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of river traverses", "variables": {}}
{"nl": "what state does the _river_ not traverse that has an area different than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the state 's low point ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ) )", "can": "low point of state", "variables": {}}
{"nl": "what city that is called _city_ has the least density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that is named sacramento and that has the smallest density", "variables": {}}
{"nl": "what city not named _city_ is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that not is named sacramento and that colorado river not traverses", "variables": {}}
{"nl": "what state with no _state_ border has an area unequal to _lake_ 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that not borders california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what amount of area is occupied by a state without a _place_ low point ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) )", "can": "area of state whose low point is not death valley", "variables": {}}
{"nl": "what state with _river_ borders is found in the greatest number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that is contained by the most number of country", "variables": {}}
{"nl": "what state does the _river_ not border with the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that colorado river not borders and that has the largest area", "variables": {}}
{"nl": "what 's the high point of the state with the least area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the smallest area", "variables": {}}
{"nl": "whcih state 's capital is _city_ and contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and that capital of california is contained by", "variables": {}}
{"nl": "which state contains a _place_ high point but not the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is death valley and that capital of california not is contained by", "variables": {}}
{"nl": "what country is _state_ in with a population lower than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ border and contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that mountain is contained by", "variables": {}}
{"nl": "what state that is not within the usa is not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that not is contained by usa and that california not borders", "variables": {}}
{"nl": "what state contains _mountain_ but not _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that mount whitney is contained by and that lake tahoe not is contained by", "variables": {}}
{"nl": "which state that contains _city_ has an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what lake that is not within _state_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string min ) ( string area_lake_length^2 ) ) )", "can": "lake that not is contained by california and that has the smallest area", "variables": {}}
{"nl": "what place within _state_ is the low point of the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is low point of state", "variables": {}}
{"nl": "what 's the state with a different area than _state_ and a _place_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is not area of california", "variables": {}}
{"nl": "what city does the _river_ not traverse and is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is capital of the most number of state", "variables": {}}
{"nl": "what state does the _river_ not border that has _state_ 's low point as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose high point is low point of california", "variables": {}}
{"nl": "what state borders _state_ and contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that borders california and that lake is contained by", "variables": {}}
{"nl": "what city is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is named name", "variables": {}}
{"nl": "which state has the least amount of bordered states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders the least number of state", "variables": {}}
{"nl": "what major city is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is major and that river traverses", "variables": {}}
{"nl": "what city is n't traversed by the _river_ and also has no _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that high point of california not is contained by", "variables": {}}
{"nl": "what state not containing _place_ has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "which country 's area does not equal _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country whose area is not area of california", "variables": {}}
{"nl": "which state , not bordering the _river_ , has the highest number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of lake is contained by", "variables": {}}
{"nl": "what state is _mountain_ in that contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of place is contained by", "variables": {}}
{"nl": "what is the population of the city with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string density_city_count ) ) ( string population_city_count ) ) )", "can": "population of city that has the largest density", "variables": {}}
{"nl": "what state that borders _state_ contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and that capital of california is contained by", "variables": {}}
{"nl": "what state is _lake_ not in with a low point of place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose low point is place", "variables": {}}
{"nl": "what state is not bordered by the _river_ and does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and that high point of california not is contained by", "variables": {}}
{"nl": "which country is not in _state_ and does not have the same population as _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "which city is not in _state_ and its area does not equali _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is not area of california", "variables": {}}
{"nl": "which state is the size of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose area is area of california", "variables": {}}
{"nl": "what country which contains _state_ has a greater population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what is a river ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) )", "can": "river", "variables": {}}
{"nl": "what state does _state_ border with a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and whose high point is place", "variables": {}}
{"nl": "what city is not in _state_ and is a state capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string capital_city ) ) )", "can": "city that not is contained by california and that is a capital", "variables": {}}
{"nl": "what state with a capital other than _city_ has a population that is bigger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is larger than population of usa", "variables": {}}
{"nl": "what state not bordering the _river_ has the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of place is contained by", "variables": {}}
{"nl": "what is the area of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string area_state_length^2 ) ) )", "can": "area of california", "variables": {}}
{"nl": "how dense are the states bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string density_state_count ) ) )", "can": "density of state that california borders", "variables": {}}
{"nl": "what lake that is not within _state_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that not is contained by california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which state 's high point is _place_ with a population equal to that of the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is death valley and whose population is population of usa", "variables": {}}
{"nl": "which state does the _river_ traverse and does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that colorado river traverses and that mount whitney not is contained by", "variables": {}}
{"nl": "what city not within _state_ contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is contained by california and that low point of california is contained by", "variables": {}}
{"nl": "what is the population of the most populous country ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string population_country_count ) ) )", "can": "population of country that has the largest population", "variables": {}}
{"nl": "what state contains lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake is contained by", "variables": {}}
{"nl": "what is the population of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the largest population", "variables": {}}
{"nl": "which state 's low point is _place_ and has a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose capital is city", "variables": {}}
{"nl": "what state without _place_ has the most _state_ low points contained within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "which state does not have _city_ as a capital but whose low point is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose low point is high point of california", "variables": {}}
{"nl": "what 's the total population of a state not containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ) ) )", "can": "total population of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse that is not contained by it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that lake not is contained by", "variables": {}}
{"nl": "what state with a low point that 's not _place_ has a low point that 's not a _state_ high point as well ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose low point is not high point of california", "variables": {}}
{"nl": "what is the population of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ) )", "can": "population of state that sacramento not is contained by", "variables": {}}
{"nl": "which state not bordered by the _river_ has the lowest point , outside of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose low point is not low point of california", "variables": {}}
{"nl": "what state not bordering _state_ contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state with a high point of _place_ does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that not borders state", "variables": {}}
{"nl": "how many states contain _mountain_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ) )", "can": "number of state that mount whitney is contained by", "variables": {}}
{"nl": "what is the total length of a river ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ) ) )", "can": "total length of river", "variables": {}}
{"nl": "which state is _place_ not in that has the most number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what state has a low point other than _place_ and is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that is contained by country", "variables": {}}
{"nl": "what state that borders _state_ has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california borders and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains a montain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that mountain is contained by", "variables": {}}
{"nl": "what state with a capital that is not _city_ does not have population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is not population of california", "variables": {}}
{"nl": "what state that _state_ does n't border does not have _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and whose high point is not high point of california", "variables": {}}
{"nl": "what state does n't contain _mountain_ and does not equal _city_ in population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what state with a low point of _place_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state not bordering _state_ has the lowest amount of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of state borders", "variables": {}}
{"nl": "what city not named _city_ has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is named sacramento and whose population is larger than population of california", "variables": {}}
{"nl": "what are the population numbers of a non - _state_ city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ) )", "can": "population of city that not is contained by california", "variables": {}}
{"nl": "what state that borders _state_ contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of place is contained by", "variables": {}}
{"nl": "what is the population of the state containing _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ) )", "can": "population of state that lake tahoe is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is area of usa", "variables": {}}
{"nl": "what is the total population of a state that the _river_ does not traverse ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ) ) )", "can": "total population of state that colorado river not traverses", "variables": {}}
{"nl": "what state that is not within the usa contains place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that place is contained by", "variables": {}}
{"nl": "how many places are contained by _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ) )", "can": "number of place that is contained by sacramento", "variables": {}}
{"nl": "what major river has the largest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string max ) ( string len_river_length ) ) )", "can": "river that is major and that has the largest length", "variables": {}}
{"nl": "what river that does not border _state_ traverses the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses the most number of state", "variables": {}}
{"nl": "what capital city has the most names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is a capital and that is named the most number of name", "variables": {}}
{"nl": "what state 's low point is _place_ that is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that is contained by the least number of country", "variables": {}}
{"nl": "what major river does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string major_river ) ) )", "can": "river that not traverses california and that is major", "variables": {}}
{"nl": "what city , not named _city_ , has the most numbers in the name ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is named the most number of name", "variables": {}}
{"nl": "what mountain within _state_ is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string loc_mountain_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that is contained by california and that not is contained by state", "variables": {}}
{"nl": "which state does not have _city_ as its capital but its high point is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose high point is not high point of california", "variables": {}}
{"nl": "what _state_ - bordering state contains the fewest _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state within the usa has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that is contained by usa and whose population is population of california", "variables": {}}
{"nl": "what state is _place_ not in and _state_ does not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that death valley not is contained by and that california not borders", "variables": {}}
{"nl": "what capital city is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is a capital and that river not traverses", "variables": {}}
{"nl": "which country is larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country whose area is larger than area of california", "variables": {}}
{"nl": "what state does not contain _city_ and has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose high point is not place", "variables": {}}
{"nl": "what state outside of the usa has state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that borders state", "variables": {}}
{"nl": "what state is _lake_ in that has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is population of california", "variables": {}}
{"nl": "how many states does _state_ not border ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ) )", "can": "number of state that california not borders", "variables": {}}
{"nl": "what state contains _city_ but does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what is the total area of the country with the largest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the largest population", "variables": {}}
{"nl": "which state is not within the usa and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) )", "can": "state that not is contained by usa and that death valley is contained by", "variables": {}}
{"nl": "what city is not within _state_ and is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is capital of the least number of state", "variables": {}}
{"nl": "what state is _city_ not in with its high point being the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose high point is low point of california", "variables": {}}
{"nl": "how many states are traversed by the _river_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ) )", "can": "number of state that colorado river traverses", "variables": {}}
{"nl": "what state with a low point other than _place_ has a population equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is not death valley and whose population is population of sacramento", "variables": {}}
{"nl": "what state within the usa has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose high point is place", "variables": {}}
{"nl": "the mountain with the highest elevation has what number ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string max ) ( string elevation_mountain_length ) ) ) )", "can": "number of mountain that has the largest elevation", "variables": {}}
{"nl": "what state is _mountain_ not in that does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that place not is contained by", "variables": {}}
{"nl": "what state 's high point is _place_ and has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is death valley and whose population is larger than population of california", "variables": {}}
{"nl": "what is the density of the country with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string density_country_count ) ) )", "can": "density of country that has the largest density", "variables": {}}
{"nl": "what city is _place_ in with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _place_ and has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that death valley not is contained by and that has the largest population", "variables": {}}
{"nl": "what rivers are city - traversing ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses city", "variables": {}}
{"nl": "what state not bordering _state_ does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and that place not is contained by", "variables": {}}
{"nl": "what state has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that the least number of river borders", "variables": {}}
{"nl": "what country with a population not equaling the us population also does not contain _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what is the population of a capital city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ) )", "can": "population of city that is a capital", "variables": {}}
{"nl": "what state not in the usa has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "which _state_ city is capital of the greatest amount of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is capital of the most number of state", "variables": {}}
{"nl": "what state with a high point other than _place_ does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that place not is contained by", "variables": {}}
{"nl": "what state does _state_ not border with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california not borders and whose population is population of california", "variables": {}}
{"nl": "what state not found in the us does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that not is contained by usa and that death valley not is contained by", "variables": {}}
{"nl": "what state not containing _place_ is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what state borders _state_ but is not contained ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and that place is contained by", "variables": {}}
{"nl": "what state that borders _state_ is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that borders california and that colorado river not borders", "variables": {}}
{"nl": "what state contains _lake_ and has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that lake tahoe is contained by and that has the smallest density", "variables": {}}
{"nl": "what major lake 's area is smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is major and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what river borders _state_ and traverses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that traverses the least number of state", "variables": {}}
{"nl": "what lake has an area not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake whose area is not area of usa", "variables": {}}
{"nl": "what state contains _city_ and is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of state borders", "variables": {}}
{"nl": "what is the total density of a state containing _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string density_state_count ) ) ) )", "can": "total density of state that death valley is contained by", "variables": {}}
{"nl": "what is the total area of the lake with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string max ) ( string area_lake_length^2 ) ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake that has the largest area", "variables": {}}
{"nl": "what is the area of a state that the _river_ traverses ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ) )", "can": "area of state that colorado river traverses", "variables": {}}
{"nl": "what state bordering _state_ has no placed high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and whose high point is not place", "variables": {}}
{"nl": "what state does the _river_ traverse but rivers do n't traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that river not traverses", "variables": {}}
{"nl": "which place that is contained by _state_ has the high point of the least number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is high point of the least number of state", "variables": {}}
{"nl": "what state with a capital of _city_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state whose capital is sacramento and that has the smallest area", "variables": {}}
{"nl": "how many states have the smallest density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) ) )", "can": "number of state that has the smallest density", "variables": {}}
{"nl": "name the states bordering _state_ which have populations less than the usa .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california borders and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state containing _mountain_ has a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what city in _state_ has the most rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is contained by california and that the most number of river traverses", "variables": {}}
{"nl": "name a state where _mountain_ is not located and whose high point is not some place .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose high point is not place", "variables": {}}
{"nl": "what state borders _state_ and does not contain it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and that place not is contained by", "variables": {}}
{"nl": "what city is not within _state_ having an area not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is not area of usa", "variables": {}}
{"nl": "what state traversed by the _river_ has _place_ as its high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river traverses and whose high point is death valley", "variables": {}}
{"nl": "what state contains _mountain_ and a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that city is contained by", "variables": {}}
{"nl": "what major city is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that is contained by state", "variables": {}}
{"nl": "which state that is not the location of _city_ has the largest number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what state is _lake_ in that has the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ not in and its capital is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what city containing _place_ has less area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what is the total area of the state that contains _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that death valley not is contained by", "variables": {}}
{"nl": "what is the highest point of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ) )", "can": "high point of state that borders california", "variables": {}}
{"nl": "what is the population of the country with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string population_country_count ) ) )", "can": "population of country that has the smallest population", "variables": {}}
{"nl": "what state that is traversed by the _river_ contains _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and that capital of california is contained by", "variables": {}}
{"nl": "which state is _mountain_ not in and is not within the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that not is contained by country", "variables": {}}
{"nl": "what 's the name of a river with the smallest length that does not pass through _city_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string min ) ( string len_river_length ) ) )", "can": "river that not traverses sacramento and that has the smallest length", "variables": {}}
{"nl": "what state does the _river_ border that contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of place is contained by", "variables": {}}
{"nl": "what place not contained by _city_ is within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by city", "variables": {}}
{"nl": "what is the density of the state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string density_state_count ) ) )", "can": "density of state that colorado river not borders", "variables": {}}
{"nl": "what city that is not within _state_ is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is named name", "variables": {}}
{"nl": "what state borders _state_ and has a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that california borders and whose high point is not death valley", "variables": {}}
{"nl": "what state with a high point of _place_ has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is death valley and whose population is population of sacramento", "variables": {}}
{"nl": "what state 's low point is _place_ and has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is larger than area of california", "variables": {}}
{"nl": "state that _lake_ is in and contains the least number of _state_ low points", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state that the _river_ traverses does n't contain a high point equivalent to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and that high point of california not is contained by", "variables": {}}
{"nl": "what lake has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake whose area is larger than area of usa", "variables": {}}
{"nl": "which capital city is not called by a name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is a capital and that not is named name", "variables": {}}
{"nl": "what state not traversed by the _river_ has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what capital city is smaller in size than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is a capital and whose area is smaller than area of california", "variables": {}}
{"nl": "which state with a capital that 's not _city_ has a population equaling _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is population of sacramento", "variables": {}}
{"nl": "what capital city has the most number of river traversals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is a capital and that the most number of river traverses", "variables": {}}
{"nl": "what is a city that is not _city_ with a population that does not equal the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that not is named sacramento and whose population is population of usa", "variables": {}}
{"nl": "what state 's high point is not _place_ and does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that low point of california not is contained by", "variables": {}}
{"nl": "what river traverses _state_ but does not travese a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that not traverses state", "variables": {}}
{"nl": "what is the total elevation of a mountain ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mountain", "variables": {}}
{"nl": "what state bordering the _river_ contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and that the most number of low point of california is contained by", "variables": {}}
{"nl": "which state does n't have _place_ 's high point and has a river that borders it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that river borders", "variables": {}}
{"nl": "which state has a _place_ high point but no low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and whose low point is not place", "variables": {}}
{"nl": "what state does not border _state_ with a low point of _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and whose low point is low point of california", "variables": {}}
{"nl": "what state without _lake_ contained within has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state not containing _place_ is bordered by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of river borders", "variables": {}}
{"nl": "which state does _state_ border with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california borders and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state that does not border _state_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state traversed by the _river_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is area of california", "variables": {}}
{"nl": "how many cities is _place_ contained by ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ) )", "can": "number of city that death valley is contained by", "variables": {}}
{"nl": "what state is _mountain_ not in and contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that city is contained by", "variables": {}}
{"nl": "what state with a high point other than _place_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string density_state_count ) ) )", "can": "state whose high point is not death valley and that has the largest density", "variables": {}}
{"nl": "what is a city in _state_ with the fewest names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is named the least number of name", "variables": {}}
{"nl": "which state is the location of the _place_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state whose low point is death valley", "variables": {}}
{"nl": "what place with less elevation than _place_ is not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by california and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "how many lakes are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "number of lake", "variables": {}}
{"nl": "what state traversed by the _river_ is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that not is contained by country", "variables": {}}
{"nl": "what us state does not have a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and that low point of california not is contained by", "variables": {}}
{"nl": "what state is _city_ in that is contained by a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that city is contained by", "variables": {}}
{"nl": "which state has an area that does n't match _lake_ 's area and also has no _place_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state is _city_ not in and the _river_ does not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that sacramento not is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what state has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) )", "can": "state that has the largest population", "variables": {}}
{"nl": "what state does not contain _place_ nor does it contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that place not is contained by", "variables": {}}
{"nl": "what country that does not contain _state_ has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is area of usa", "variables": {}}
{"nl": "what city is the capital of _state_ with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is capital of california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state is _lake_ not in that is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is capital of state", "variables": {}}
{"nl": "what state not bordered by the _river_ has a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not borders and whose population is larger than population of usa", "variables": {}}
{"nl": "what state is within the usa and has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and whose low point is not low point of california", "variables": {}}
{"nl": "what is a place not contained by _city_ or by some state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that not is contained by state", "variables": {}}
{"nl": "what us state 's low point is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that is contained by usa and whose low point is not death valley", "variables": {}}
{"nl": "what is the population density of the usa ?", "lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) )", "can": "density of usa", "variables": {}}
{"nl": "what country with a different population than the us is in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california is contained by and whose population is not population of usa", "variables": {}}
{"nl": "which state has a border with _state_ and a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that river borders", "variables": {}}
{"nl": "what state 's capital is _city_ and contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is sacramento and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what is the total density of the usa ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty fb:en.country.usa ( string density_country_count ) ) ) )", "can": "total density of usa", "variables": {}}
{"nl": "what city does not contain _place_ that has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley is contained by and whose population is not population of california", "variables": {}}
{"nl": "what is the total area of the state where _lake_ is located ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that lake tahoe is contained by", "variables": {}}
{"nl": "what is the area of a state not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ) )", "can": "area of state that california not borders", "variables": {}}
{"nl": "what state not bordering _state_ has a _state_ high point as low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and whose low point is high point of california", "variables": {}}
{"nl": "what state borders _state_ and has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that borders california and that has the largest population", "variables": {}}
{"nl": "what state lacking a _place_ high point has the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of place is contained by", "variables": {}}
{"nl": "what place outside of _city_ is high point for the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is high point of the most number of state", "variables": {}}
{"nl": "how dense is the city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string density_city_count ) ) )", "can": "density of city", "variables": {}}
{"nl": "what city within _state_ has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is contained by california and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state traversed by the _river_ has a _state_ low point as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose low point is low point of california", "variables": {}}
{"nl": "what state not containing _mountain_ has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what state not bordering _state_ also has the least number of bordering states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that borders the least number of state", "variables": {}}
{"nl": "what is the population of the city with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) ( string population_city_count ) ) )", "can": "population of city that has the smallest population", "variables": {}}
{"nl": "what place that is not within _city_ has the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the least number of capital of california", "variables": {}}
{"nl": "name a country with a smaller area than the united states .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country whose area is smaller than area of usa", "variables": {}}
{"nl": "which state borders the _river_ but does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that not borders state", "variables": {}}
{"nl": "what city within _state_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is contained by california and whose population is population of california", "variables": {}}
{"nl": "what state does the _river_ border that does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that place not is contained by", "variables": {}}
{"nl": "what river does n't traverse _state_ but traverses the _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses california and that traverses capital of california", "variables": {}}
{"nl": "what state containing _mountain_ does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that mount whitney is contained by and that california not borders", "variables": {}}
{"nl": "name the state bordered by the _river_ with the largest density .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that colorado river borders and that has the largest density", "variables": {}}
{"nl": "what is the density of states not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string density_state_count ) ) )", "can": "density of state that california not borders", "variables": {}}
{"nl": "what state has a high point that is not _place_ with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is area of california", "variables": {}}
{"nl": "which place is the lowest point in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is low point of california", "variables": {}}
{"nl": "what state is _place_ not in with a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and whose capital is city", "variables": {}}
{"nl": "what state that the _river_ does not border is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that not is contained by country", "variables": {}}
{"nl": "which state is _lake_ not in that borders the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that borders the most number of state", "variables": {}}
{"nl": "which state is _lake_ in and does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what lake contained by _state_ has an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does not border _state_ and is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not borders california and that is contained by the least number of country", "variables": {}}
{"nl": "which city does the _river_ traverse with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is smaller than area of california", "variables": {}}
{"nl": "what state which has a capital of _city_ does n't have a city as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose capital is not city", "variables": {}}
{"nl": "what area of the country has the least density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the smallest density", "variables": {}}
{"nl": "what state is _place_ in and its capital is a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose capital is city", "variables": {}}
{"nl": "what river does not traverse _state_ nor another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that not traverses state", "variables": {}}
{"nl": "what state within the usa is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that state not borders", "variables": {}}
{"nl": "what mountain is within _state_ that contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string max ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what location within _state_ has the greatest amount of state high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is high point of the most number of state", "variables": {}}
{"nl": "what state not containing _city_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that borders the most number of state", "variables": {}}
{"nl": "what state is not within the usa that contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) )", "can": "state that not is contained by usa and that sacramento is contained by", "variables": {}}
{"nl": "what state contains _lake_ btu does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what major city is capital of the fewest amount of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that is capital of the least number of state", "variables": {}}
{"nl": "what capital city of _state_ has an area that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is capital of california and whose area is not area of california", "variables": {}}
{"nl": "which state has an area smaller that the usa and does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not borders california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state with a different area than the usa has no _place_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is not area of usa", "variables": {}}
{"nl": "what state containing _city_ also contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "how many places have the highest elevation ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ) )", "can": "number of place that has the largest elevation", "variables": {}}
{"nl": "what state with a high point of _place_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what city is not in _state_ with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that not is contained by california and that has the smallest population", "variables": {}}
{"nl": "what city is within _place_ and has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is area of california", "variables": {}}
{"nl": "what is the total population of the country with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the largest area", "variables": {}}
{"nl": "what state 's capital is not _city_ that has a population equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is sacramento and whose population is population of california", "variables": {}}
{"nl": "what state is _place_ in with the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state is _lake_ in with a population lower than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which state does the _river_ not traverse that has the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the most number of river borders", "variables": {}}
{"nl": "which state has the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that the least number of mountain is contained by", "variables": {}}
{"nl": "which sate has _lake_ in it with a larger population than that of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ border with a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and whose low point is place", "variables": {}}
{"nl": "what is the state with the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that the most number of city is contained by", "variables": {}}
{"nl": "what river traverses neither _city_ nor the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses sacramento and that not traverses capital of california", "variables": {}}
{"nl": "what city contains _place_ and the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what city is the capital of _state_ and has a large usa population", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is capital of california and whose population is larger than population of usa", "variables": {}}
{"nl": "what major city is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that is major and that is capital of california", "variables": {}}
{"nl": "what state does the _river_ border with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is area of california", "variables": {}}
{"nl": "what lake is not contained by _state_ and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string loc_lake_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that not is contained by california and that is contained by state", "variables": {}}
{"nl": "what is the elevation of the place that is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ) )", "can": "elevation of place that is high point of california", "variables": {}}
{"nl": "what state is _place_ in with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that death valley is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "which country is _state_ in with an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california is contained by and whose area is area of usa", "variables": {}}
{"nl": "which state with a low point of _place_ has no other low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose low point is not place", "variables": {}}
{"nl": "what state bordering _state_ has the smallest number of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of river borders", "variables": {}}
{"nl": "what state is _lake_ not in that has an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what city does the _river_ traverse that is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is named name", "variables": {}}
{"nl": "what state does the _river_ not border and its low point is _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose low point is low point of california", "variables": {}}
{"nl": "what city that is not within _state_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is contained by california and whose population is population of california", "variables": {}}
{"nl": "what state not bordered by the _river_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is area of lake tahoe", "variables": {}}
{"nl": "what river that traverses _state_ has the largest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string max ) ( string len_river_length ) ) )", "can": "river that traverses california and that has the largest length", "variables": {}}
{"nl": "what state high point is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ) )", "can": "high point of state that colorado river not traverses", "variables": {}}
{"nl": "what city does the _river_ not traverse and has an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is area of lake tahoe", "variables": {}}
{"nl": "what states have the fewest number of _state_ low points but do not contain _city_", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what is the place ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) )", "can": "place", "variables": {}}
{"nl": "what state contains _city_ and is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that sacramento is contained by and that colorado river not borders", "variables": {}}
{"nl": "what place is the low point of _state_ and has the largest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string elevation_place_length ) ) )", "can": "place that is low point of california and that has the largest elevation", "variables": {}}
{"nl": "name the state not bordered by the _river_ that has the most number of _state_ capitals .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not borders and that the most number of capital of california is contained by", "variables": {}}
{"nl": "which state is _mountain_ in that does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what state that is not in the usa does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that not is contained by usa and that lake tahoe not is contained by", "variables": {}}
{"nl": "what state has a high point of _place_ and the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose low point is low point of california", "variables": {}}
{"nl": "which state borders _state_ with the fewest rivers bordering it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of river borders", "variables": {}}
{"nl": "which state does n't contain the _river_ and whose highest point is in _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that colorado river not traverses and whose high point is death valley", "variables": {}}
{"nl": "what state mount containing _mountain_ has the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what city that is not within _state_ also does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that not is contained by california and that death valley not is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that borders state", "variables": {}}
{"nl": "what 's the area of a state without the high point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ) )", "can": "area of state whose high point is not death valley", "variables": {}}
{"nl": "name places in _state_ with a higher elevation than _mountain_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by california and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what state has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose area is area of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse and has a high point that is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose high point is not low point of california", "variables": {}}
{"nl": "what state with a capital other than _city_ has a high point that is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose high point is low point of california", "variables": {}}
{"nl": "what state borders _state_ with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that borders california and whose population is not population of usa", "variables": {}}
{"nl": "what state isnot within the usa and has a smaller area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is smaller than area of usa", "variables": {}}
{"nl": "which state borders _state_ and has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california borders and whose population is larger than population of usa", "variables": {}}
{"nl": "what state does the _river_ traverse with an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is larger than area of california", "variables": {}}
{"nl": "what state bordering _state_ is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california borders and that not is contained by country", "variables": {}}
{"nl": "what river traverses _state_ and the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses california and that traverses the most number of capital of california", "variables": {}}
{"nl": "what capital city of _state_ has the fewest river traversals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is capital of california and that the least number of river traverses", "variables": {}}
{"nl": "which state whose capital is _city_ borders the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that borders state", "variables": {}}
{"nl": "which state contains _city_ and the least lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what is the length of a river bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ) )", "can": "length of river that borders california", "variables": {}}
{"nl": "which country that does not contain _state_ has an area greater than the usa 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what is the high point of the state with the highest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the largest density", "variables": {}}
{"nl": "what capital city contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is a capital and that the least number of place is contained by", "variables": {}}
{"nl": "what state contains _lake_ and borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that river borders", "variables": {}}
{"nl": "what state 's low point is _place_ and its high point is _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state whose low point is death valley and whose high point is death valley", "variables": {}}
{"nl": "what state is _city_ not in with an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what state bordered by _state_ does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and that low point of california not is contained by", "variables": {}}
{"nl": "what state does not contain the capital of _state_ and has a high point that is not in _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and that capital of california not is contained by", "variables": {}}
{"nl": "what state contains _place_ with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that death valley is contained by and that has the largest population", "variables": {}}
{"nl": "what is the total density of a city not in _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string density_city_count ) ) ) )", "can": "total density of city that death valley not is contained by", "variables": {}}
{"nl": "what is the high point of a state that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ) )", "can": "high point of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what city is not contained in _state_ that is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that not is contained by california and that is capital of california", "variables": {}}
{"nl": "name the state not containing _lake_ with the fewest number of mountains .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what state not containg _mountain_ has a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "how many high points of a state are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ) ) )", "can": "number of high point of state", "variables": {}}
{"nl": "what city is not _city_ and does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is named sacramento and that low point of california is contained by", "variables": {}}
{"nl": "what state is traversed by the _river_ and has a population lower than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river traverses and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "name the state with a high point that is not a _place_ high point .", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ) )", "can": "high point of state whose high point is not death valley", "variables": {}}
{"nl": "what state with a high point other than _place_ has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose high point is place", "variables": {}}
{"nl": "what state containing _city_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that sacramento is contained by and that has the smallest area", "variables": {}}
{"nl": "what state bordering _state_ has a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and whose high point is high point of california", "variables": {}}
{"nl": "what 's the total area of the state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that colorado river traverses", "variables": {}}
{"nl": "what capital city is in _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string capital_city ) ) )", "can": "city that death valley is contained by and that is a capital", "variables": {}}
{"nl": "what state is _city_ not in and has the most river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what capital city shares a population count with the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is a capital and whose population is population of usa", "variables": {}}
{"nl": "what state not containing _mountain_ has the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state does not contain _mountain_ and contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state has a low point of _place_ and the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state whose low point is death valley and that has the smallest area", "variables": {}}
{"nl": "what state does _state_ not border and rivers do not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that river not traverses", "variables": {}}
{"nl": "what is the area of the country containing _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ) )", "can": "area of country that california is contained by", "variables": {}}
{"nl": "which state borders _state_ with an area different than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that borders california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what country is _state_ not in and has a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what state that has a high point of _place_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is area of lake tahoe", "variables": {}}
{"nl": "what place outside of _state_ has a higher elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by california and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what state does the _river_ border that does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that colorado river borders and that mount whitney not is contained by", "variables": {}}
{"nl": "what state that has a smaller population than _city_ does not have a low point in _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is not death valley and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what are the areas of the states that border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ) )", "can": "area of state that borders california", "variables": {}}
{"nl": "what city other than _city_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is named sacramento and that high point of california is contained by", "variables": {}}
{"nl": "name the river that does not traverse _state_ orwhat   the capital of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses california and that not traverses capital of california", "variables": {}}
{"nl": "what state not containing _city_ has a high point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what state with no _river_ borders has an area unequal to the us area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is not area of usa", "variables": {}}
{"nl": "what state with a low point of _place_ 's contains no cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that city not is contained by", "variables": {}}
{"nl": "what state within the usa contains the most of _state_ 's high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose population is not population of sacramento", "variables": {}}
{"nl": "which state does not contain _lake_ and has the highest point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is place", "variables": {}}
{"nl": "which state has the fewest cities within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that the least number of city is contained by", "variables": {}}
{"nl": "what state that is not within the usa is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that state not borders", "variables": {}}
{"nl": "what state bordering _state_ has a larger area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that borders california and whose area is larger than area of usa", "variables": {}}
{"nl": "what state is contained by a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that place is contained by", "variables": {}}
{"nl": "what state has the same area as _state_ and the capital _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is area of california", "variables": {}}
{"nl": "which state contains _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that lake tahoe is contained by", "variables": {}}
{"nl": "what state bordering the _river_ contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river borders and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that river traverses", "variables": {}}
{"nl": "what lake has the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake whose area is area of california", "variables": {}}
{"nl": "what city not within _state_ is also not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that not is contained by state", "variables": {}}
{"nl": "what cities not in _state_ have an area smaller than that of _lake_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what river does nt border _state_ and goes through the least amount of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not borders california and that traverses the least number of city", "variables": {}}
{"nl": "what state does not contain _place_ and has an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what state does the _river_ traverse that contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state does _state_ not border and does not contain _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and that capital of california not is contained by", "variables": {}}
{"nl": "what state not containing _place_ has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is area of usa", "variables": {}}
{"nl": "what state does the _river_ borde that has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which major city has the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is major and whose area is area of usa", "variables": {}}
{"nl": "what state borders _state_ and contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and that place is contained by", "variables": {}}
{"nl": "what is the river called which traverses the smallest number of _state_ capitals and does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses california and that traverses the least number of capital of california", "variables": {}}
{"nl": "which state 's low point is not _place_ that is within the most contries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that is contained by the most number of country", "variables": {}}
{"nl": "what state has a low point other than _place_ with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose capital is not city", "variables": {}}
{"nl": "what major city contains the highest number of places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is major and that the most number of place is contained by", "variables": {}}
{"nl": "what state does n't border _state_ and has a population equaling _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not borders california and whose population is population of sacramento", "variables": {}}
{"nl": "name the state with no _river_ borders that has the most river traverses .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the most number of river traverses", "variables": {}}
{"nl": "what state with a capital other than _city_ has the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose area is larger than area of usa", "variables": {}}
{"nl": "what city with the most numerous _state_ high points is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river traverses and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state not containing _place_ is found in the fewest number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "which state has a high point other than _place_ and area is equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is larger than area of california", "variables": {}}
{"nl": "what state not traversed by the _river_ has an area that is not equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is not area of california", "variables": {}}
{"nl": "what state bordering the _river_ has a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river borders and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state not containing _place_ has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and whose high point is not place", "variables": {}}
{"nl": "what state is _place_ not in with a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what city is a capital and contained by a place >", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is a capital and that place is contained by", "variables": {}}
{"nl": "what is the density of a state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string density_state_count ) ) )", "can": "density of state", "variables": {}}
{"nl": "which state without _city_ as its capital contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and that capital of california is contained by", "variables": {}}
{"nl": "what capital city of _state_ has a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is capital of california and whose population is not population of usa", "variables": {}}
{"nl": "what state contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that the most number of lake is contained by", "variables": {}}
{"nl": "how many states contain _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ) )", "can": "number of state that sacramento is contained by", "variables": {}}
{"nl": "which state that does not contain _place_ has _place_ as a high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that death valley is contained by and whose high point is death valley", "variables": {}}
{"nl": "which rivers are shorter than _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river whose length is smaller than length of colorado river", "variables": {}}
{"nl": "in which state is _city_ but is not in the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that not is contained by country", "variables": {}}
{"nl": "what is the capital of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string capital_state_city ) ) )", "can": "capital of state that has the smallest population", "variables": {}}
{"nl": "what state not bordering _state_ does not contain _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and that high point of california not is contained by", "variables": {}}
{"nl": "what place is within _city_ with an elevation larger than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is larger than elevation of mount whitney", "variables": {}}
{"nl": "what state contained by _lake_ has the least amount of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of mountain is contained by", "variables": {}}
{"nl": "what country 's area is the same as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country whose area is area of lake tahoe", "variables": {}}
{"nl": "what major river does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that not borders state", "variables": {}}
{"nl": "what capital city has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that is a capital and that has the largest area", "variables": {}}
{"nl": "what state bordering _state_ does not have _state_ 's high point as its low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and whose low point is not high point of california", "variables": {}}
{"nl": "what state does the _river_ border that _state_ does not ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that colorado river borders and that california not borders", "variables": {}}
{"nl": "what state traversed by the _river_ borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that borders the most number of state", "variables": {}}
{"nl": "what is the density of a state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string density_state_count ) ) )", "can": "density of state that borders california", "variables": {}}
{"nl": "what state containing _mountain_ has a low point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what country containing _state_ has an area that is not euqal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what city has a population that equals the usa population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city whose population is population of usa", "variables": {}}
{"nl": "which state traversed by the _river_ is the most populous ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that colorado river traverses and that has the largest population", "variables": {}}
{"nl": "what state within the usa has the same low point as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and whose low point is low point of california", "variables": {}}
{"nl": "what is the length of the longest river ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ( string len_river_length ) ) )", "can": "length of river that has the largest length", "variables": {}}
{"nl": "what state that does not border _state_ has a high point that is not the hight point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and whose high point is not high point of california", "variables": {}}
{"nl": "what state contains _place_ but the _river_ does n't border it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that death valley is contained by and that colorado river not borders", "variables": {}}
{"nl": "what city that is the capital of _state_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is capital of california and that river not traverses", "variables": {}}
{"nl": "what state borders _state_ with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that borders california and whose population is population of sacramento", "variables": {}}
{"nl": "in which states is _city_ and a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that lake is contained by", "variables": {}}
{"nl": "what state has a population different from the usa 's and shares no border with the _river_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not borders and whose population is not population of usa", "variables": {}}
{"nl": "which state borders the most states but does not border _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that borders the most number of state", "variables": {}}
{"nl": "what state with a capital of _city_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of city is contained by", "variables": {}}
{"nl": "what state not within the usa contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that city is contained by", "variables": {}}
{"nl": "what state contains _place_ and the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what city does the _river_ not traverse that contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that the most number of place is contained by", "variables": {}}
{"nl": "what state is _mountain_ in but is not in a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that not is contained by country", "variables": {}}
{"nl": "what city named _city_ is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that the most number of river traverses", "variables": {}}
{"nl": "this low point of _state_ is part of the greatest number of states .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is contained by the most number of state", "variables": {}}
{"nl": "name the city with the greatest area measurement .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that has the largest area", "variables": {}}
{"nl": "what 's the non - us state that has the _state_ high point in it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and that high point of california is contained by", "variables": {}}
{"nl": "what is the total population of a city not containing _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ) ) )", "can": "total population of city that death valley not is contained by", "variables": {}}
{"nl": "what state is _place_ in that has _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose high point is high point of california", "variables": {}}
{"nl": "what is the density of the state containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string density_state_count ) ) )", "can": "density of state that death valley is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and has the highest point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that lake tahoe not is contained by and whose high point is death valley", "variables": {}}
{"nl": "what is the population of the states that border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ) )", "can": "population of state that california borders", "variables": {}}
{"nl": "what river traverses _state_ and a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses state", "variables": {}}
{"nl": "what state with a high point of _place_ is bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that state borders", "variables": {}}
{"nl": "what state does _state_ not border that is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of river traverses", "variables": {}}
{"nl": "what state borders _state_ with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and whose capital is not city", "variables": {}}
{"nl": "what state with a high point that is not _place_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of mountain is contained by", "variables": {}}
{"nl": "what is the density of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string density_state_count ) ) )", "can": "density of state that has the largest area", "variables": {}}
{"nl": "what lake in _state_ has the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string max ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "what state with a high point of _place_ does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that mountain not is contained by", "variables": {}}
{"nl": "what city named _city_ contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that the most number of place is contained by", "variables": {}}
{"nl": "which state 's low point is not _place_ and does not have a river traversing it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that river not traverses", "variables": {}}
{"nl": "what state contains _lake_ and is bordered by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of river borders", "variables": {}}
{"nl": "what state with a low point that is not _place_ has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is not death valley and whose population is population of usa", "variables": {}}
{"nl": "what place that is the low point of _state_ has an elevation equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is low point of california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what is the total density of the state containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string density_state_count ) ) ) )", "can": "total density of state that mount whitney is contained by", "variables": {}}
{"nl": "what state not containing _city_ has an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is area of usa", "variables": {}}
{"nl": "what is a place that is not within _state_ and is the high point of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string high_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is high point of the least number of state", "variables": {}}
{"nl": "what river bordesr _state_ and traverses the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that borders california and that traverses the least number of city", "variables": {}}
{"nl": "what state does _state_ not border and not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california not borders and that lake is contained by", "variables": {}}
{"nl": "what state has a low point other than _place_ and a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose high point is not low point of california", "variables": {}}
{"nl": "what state bordering _state_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and that the least number of capital of california is contained by", "variables": {}}
{"nl": "which state that 's less populous than _state_ is not home to _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley not is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "which state does the _river_ not border than contains mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that mountain is contained by", "variables": {}}
{"nl": "what city not called _city_ is not contained within the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that not is contained by state", "variables": {}}
{"nl": "what state with a capital of _city_ has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose capital is sacramento and whose population is smaller than population of usa", "variables": {}}
{"nl": "what major city has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is major and whose area is smaller than area of california", "variables": {}}
{"nl": "which city is n't named _city_ and is larger in area than the u.s.a . ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is larger than area of usa", "variables": {}}
{"nl": "what city that is not traversed by the _river_ does not have a low point contained by _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that the least number of low point of california is contained by", "variables": {}}
{"nl": "name the state with _state_ borders that contains a low point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and that low point of california is contained by", "variables": {}}
{"nl": "what is the total area of a major lake ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake that is major", "variables": {}}
{"nl": "what state has a low point other than _place_ with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is not death valley and whose population is not population of usa", "variables": {}}
{"nl": "which state without a low point in _place_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string population_state_count ) ) )", "can": "state whose low point is not death valley and that has the largest population", "variables": {}}
{"nl": "what state has a low point of _place_ with a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state whose low point is death valley and whose capital is not sacramento", "variables": {}}
{"nl": "what place that is the high poitn of _state_ is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by state", "variables": {}}
{"nl": "name the state without _mountain_ in it that also has the most number of lakes .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "which major river traverses the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that is major and that traverses the least number of city", "variables": {}}
{"nl": "what city named _city_ contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is named sacramento and that low point of california is contained by", "variables": {}}
{"nl": "which state is _place_ in and has a high point different than the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what _state_ low point location is not contained in the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is low point of california and that not is contained by capital of california", "variables": {}}
{"nl": "what state has the largest area and has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state whose low point is death valley and that has the largest area", "variables": {}}
{"nl": "what state not bordering _state_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not borders california and whose population is not population of sacramento", "variables": {}}
{"nl": "what state contains _city_ but does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that sacramento is contained by and that lake tahoe not is contained by", "variables": {}}
{"nl": "which _state_ city contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is contained by california and that high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ border that contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river borders and that capital of california is contained by", "variables": {}}
{"nl": "what is the density of a city that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string density_city_count ) ) )", "can": "density of city that not is contained by california", "variables": {}}
{"nl": "what state does the _river_ not border with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that colorado river not borders and that has the smallest population", "variables": {}}
{"nl": "what state contains _mountain_ but no lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that lake not is contained by", "variables": {}}
{"nl": "what place in _state_ is state contained ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by state", "variables": {}}
{"nl": "what state is _place_ not in that has the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of city is contained by", "variables": {}}
{"nl": "which state 's capital is not _city_ but capital is that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and whose capital is capital of california", "variables": {}}
{"nl": "what state with a high point other than _place_ has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is not death valley and whose population is not population of california", "variables": {}}
{"nl": "what state does the _river_ cross and is the lowest point in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what capital city is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is contained by the most number of state", "variables": {}}
{"nl": "what states have a city named _city_ but do n't contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that sacramento is contained by and that mount whitney not is contained by", "variables": {}}
{"nl": "what is the area of the country with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the largest area", "variables": {}}
{"nl": "what state that does not border _state_ does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and that low point of california not is contained by", "variables": {}}
{"nl": "what major river does not have the length of the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that is major and whose length is not length of colorado river", "variables": {}}
{"nl": "what state with a capital of _city_ contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of lake is contained by", "variables": {}}
{"nl": "which state has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not high point of california", "variables": {}}
{"nl": "what state is _lake_ in and borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) )", "can": "state that borders california and that lake tahoe is contained by", "variables": {}}
{"nl": "what lake has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake whose area is larger than area of california", "variables": {}}
{"nl": "what state that has a low point of _place_ and a high point that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose high point is not high point of california", "variables": {}}
{"nl": "what mountain has an elevation lower than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "what state is not within the usa and does not contain the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and that low point of california is contained by", "variables": {}}
{"nl": "what river traverses _city_ and a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that traverses city", "variables": {}}
{"nl": "what state with a low point other than _place_ has a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose low point is not place", "variables": {}}
{"nl": "what state contains _lake_ with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "which city that is not contained by _place_ has an area larger than the usa .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what city is within _state_ and has the fewest rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is contained by california and that the least number of river traverses", "variables": {}}
{"nl": "which state is _city_ in with a smaller population than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "which state not containing _mountain_ has the least number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "which state borders _state_ with an area larger than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that borders california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what lake is not within _state_ and contains the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that not is contained by california and that is contained by the most number of state", "variables": {}}
{"nl": "which states with no _place_ low points have the highest number of river traversals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of river traverses", "variables": {}}
{"nl": "which states borders _state_ which also bordering another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that borders state", "variables": {}}
{"nl": "what state does not contain _mountain_ and has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what city does the _river_ not traverse but others do ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that river traverses", "variables": {}}
{"nl": "what is the area of the largest lake ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string max ) ( string area_lake_length^2 ) ) ( string area_lake_length^2 ) ) )", "can": "area of lake that has the largest area", "variables": {}}
{"nl": "how many cities ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "number of city", "variables": {}}
{"nl": "what major city is a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string capital_city ) ) )", "can": "city that is major and that is a capital", "variables": {}}
{"nl": "name the river he traverses _city_ without traversing _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_state ) ( string ! = ) _state_ ) )", "can": "river that traverses sacramento and that not traverses california", "variables": {}}
{"nl": "how many mountains exist ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "number of mountain", "variables": {}}
{"nl": "what state does not contain _lake_ and whose area is not the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state that is contained by _place_ but does not have a river that traverses it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that river not traverses", "variables": {}}
{"nl": "what is the population of the city not containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ) )", "can": "population of city that death valley not is contained by", "variables": {}}
{"nl": "what is a major lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) )", "can": "lake that is major", "variables": {}}
{"nl": "what city named _city_ contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is named sacramento and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state that does not contain _lake_ has a high point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what state does _state_ not border with an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california not borders and whose area is smaller than area of california", "variables": {}}
{"nl": "how many rivers border _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ) )", "can": "number of river that borders california", "variables": {}}
{"nl": "what state that borders _state_ is a place it 's contained by ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and that place is contained by", "variables": {}}
{"nl": "what state bordering the _river_ has _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and whose low point is low point of california", "variables": {}}
{"nl": "which state outside of the us contains the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not is contained by usa and that capital of california is contained by", "variables": {}}
{"nl": "what is _place_ 's elevation ?", "lf": "( call SW.listValue ( call SW.getProperty _place_ ( string elevation_place_length ) ) )", "can": "elevation of death valley", "variables": {}}
{"nl": "what state within the usa does not contains _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that is contained by usa and that lake tahoe not is contained by", "variables": {}}
{"nl": "what city that 's not in _state_ has a smaller area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state is not contained by _place_ and does not have a river that traverses it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that river not traverses", "variables": {}}
{"nl": "what is the state that border _state_ and does not have a point as high as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and whose high point is not high point of california", "variables": {}}
{"nl": "what capital city has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is a capital and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city not traversed by the _river_ does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that place not is contained by", "variables": {}}
{"nl": "what state not containing _mountain_ has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state does not contain _mountain_ that has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that mount whitney not is contained by and that has the smallest area", "variables": {}}
{"nl": "what state does _state_ not border with a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and whose high point is place", "variables": {}}
{"nl": "what state with a high point that is not _place_ is not within a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that place not is contained by", "variables": {}}
{"nl": "what state 's low point is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not place", "variables": {}}
{"nl": "what state that borders _state_ has a low point different than the high point of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and whose low point is not high point of california", "variables": {}}
{"nl": "what state with a high point of _place_ has a population not equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose high point is death valley and whose population is not population of usa", "variables": {}}
{"nl": "which state does the _river_ not border with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that colorado river not borders and whose capital is sacramento", "variables": {}}
{"nl": "what state not bordering _state_ has the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california not borders and whose high point is high point of california", "variables": {}}
{"nl": "which sate is within the usa with a low point not being the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and whose low point is not high point of california", "variables": {}}
{"nl": "what 's the river that does n't border _state_ and also traverses the fewest _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not borders california and that traverses the least number of capital of california", "variables": {}}
{"nl": "which city does the _river_ travese and is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is capital of the most number of state", "variables": {}}
{"nl": "how many major rivers are there ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ) )", "can": "number of river that is major", "variables": {}}
{"nl": "which state does not have a _place_ low point or a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose high point is not high point of california", "variables": {}}
{"nl": "what city has an area that is smaller that the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city whose area is smaller than area of usa", "variables": {}}
{"nl": "what state with a capital of _city_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of mountain is contained by", "variables": {}}
{"nl": "what place is the high point of _state_ and has the elevation that is the elevation of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is high point of california and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what city contains _place_ with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what major river does not traverse a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that not traverses state", "variables": {}}
{"nl": "which state does not border _state_ and is within the least number of places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of place is contained by", "variables": {}}
{"nl": "what state 's high point is n't _place_ and also does not have _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that sacramento not is contained by and whose high point is not death valley", "variables": {}}
{"nl": "which state 's lowest point is _place_ with a population less than that of the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is death valley and whose population is smaller than population of usa", "variables": {}}
{"nl": "what capital city has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is a capital and whose population is not population of usa", "variables": {}}
{"nl": "what mountain has an elevation equal to _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain whose elevation is elevation of death valley", "variables": {}}
{"nl": "what state without a _city_ capital has the most _state_ capitals in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what us state has a different population number than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that is contained by usa and whose population is not population of california", "variables": {}}
{"nl": "which state that borders _state_ and whose area is area of usa", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california borders and whose area is area of usa", "variables": {}}
{"nl": "which state is _mountain_ in and the most lowest points of _state_ are in ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state is not bordered by _state_ that contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state that 's home to _place_ has a low point place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose low point is place", "variables": {}}
{"nl": "what state does not contain _mountain_ and borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that borders the most number of state", "variables": {}}
{"nl": "what is the high point of a state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ) )", "can": "high point of state that colorado river traverses", "variables": {}}
{"nl": "what state not containing _mountain_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is not area of california", "variables": {}}
{"nl": "name the state with _state_ borders and a smaller population than _city_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california borders and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state with a high poitn of _place_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is death valley and whose population is not population of sacramento", "variables": {}}
{"nl": "what is the area of the lake with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string min ) ( string area_lake_length^2 ) ) ( string area_lake_length^2 ) ) )", "can": "area of lake that has the smallest area", "variables": {}}
{"nl": "what state is within the usa with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is area of california", "variables": {}}
{"nl": "what state not containing a _city_ capital does not have the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is not sacramento and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state contains _place_ , but not the capital of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what state is not within the usa that a river traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that river traverses", "variables": {}}
{"nl": "what state is _city_ not in but is bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that sacramento not is contained by and that california not borders", "variables": {}}
{"nl": "what state does the _river_ traverse with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river traverses and whose high point is not death valley", "variables": {}}
{"nl": "what is the population of the state containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ) )", "can": "population of state that sacramento is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and does not border other states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that not borders state", "variables": {}}
{"nl": "what is the density of the most populated state ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the largest population", "variables": {}}
{"nl": "what state contains _place_ with a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley is contained by and whose population is not population of california", "variables": {}}
{"nl": "what state does a river traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that river traverses", "variables": {}}
{"nl": "what city within _state_ has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that is contained by california and that has the smallest area", "variables": {}}
{"nl": "what river does not traverse _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) )", "can": "river that not traverses sacramento", "variables": {}}
{"nl": "what state with a capital other than _city_ has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state borders _state_ and contains the fewest low points of _state_", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state has a lowe point of _place_ and borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the least number of state borders", "variables": {}}
{"nl": "what state does the _river_ not border that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that borders the most number of state", "variables": {}}
{"nl": "what city does the _river_ not traverse that has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that colorado river not traverses and that has the largest area", "variables": {}}
{"nl": "what state contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that the most number of place is contained by", "variables": {}}
{"nl": "which states that do n't border _state_ and total area is smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that california not borders and whose area is smaller than area of usa", "variables": {}}
{"nl": "what city is not traversed by the _river_ that is in the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that is contained by the most number of state", "variables": {}}
{"nl": "what state 's high point is _place_ and has a population larger than the population of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is death valley and whose population is larger than population of sacramento", "variables": {}}
{"nl": "which state   does n't have a mountain and does not have the _river_ flowing through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that mountain not is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ contains a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that mountain is contained by", "variables": {}}
{"nl": "what state does the _river_ border that does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and that high point of california not is contained by", "variables": {}}
{"nl": "which river does not traverse _city_ but borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that borders state", "variables": {}}
{"nl": "which state 's capital is _city_ with a high point of the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose high point is low point of california", "variables": {}}
{"nl": "what state has a capital that is not _city_ and a smaller population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is sacramento and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which city traversed by the _river_ has the fewest number of names ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is named the least number of name", "variables": {}}
{"nl": "what state does the _river_ not border that the fewest states border ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that the least number of state borders", "variables": {}}
{"nl": "what _state_ city has the fewest _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is contained by california and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what is the total area of the united states ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country", "variables": {}}
{"nl": "what state contains _place_ and is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what city not named _city_ has a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is named sacramento and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city that 's not in _state_ is not contained in any other location ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that place not is contained by", "variables": {}}
{"nl": "which state does not border _state_ with a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not borders california and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city within _state_ has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is contained by california and whose population is larger than population of california", "variables": {}}
{"nl": "what is the population of a state in the usa ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ) )", "can": "population of state that is contained by usa", "variables": {}}
{"nl": "which state that does not contain _lake_ has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that lake tahoe not is contained by and that has the smallest density", "variables": {}}
{"nl": "what state does the _river_ border that contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state that is not within the usa and a low poin tthat is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose low point is high point of california", "variables": {}}
{"nl": "what state bordering _state_ contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) )", "can": "state that borders california and that sacramento is contained by", "variables": {}}
{"nl": "which state is _place_ in and has the lowest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that death valley is contained by and that has the smallest population", "variables": {}}
{"nl": "what river traverses _state_ but does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string ! = ) _state_ ) )", "can": "river that traverses california and that not borders california", "variables": {}}
{"nl": "what is the elevation of _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) )", "can": "elevation of mount whitney", "variables": {}}
{"nl": "which city is named _city_ but is not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string loc_city_state ) ( string ! = ) _state_ ) )", "can": "city that is named sacramento and that not is contained by california", "variables": {}}
{"nl": "what is a city besides _city_ and that is n't in the low point located in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that not is named sacramento and that low point of california not is contained by", "variables": {}}
{"nl": "which place is within _city_ being the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is contained by sacramento and that is high point of california", "variables": {}}
{"nl": "name the city which serves as the _state_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) )", "can": "city that is capital of california", "variables": {}}
{"nl": "which places are low points in _state_ and less elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is low point of california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "which state not containing _lake_ has a population different from the usa population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what state is not within the usa that has a larger population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not is contained by usa and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what mountain is not within _state_ and has an elevation other than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state borders _state_ and is not in the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) )", "can": "state that borders california and that not is contained by usa", "variables": {}}
{"nl": "which state does not have _place_ in it with its population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley not is contained by and whose population is population of california", "variables": {}}
{"nl": "what us states have no river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that river not borders", "variables": {}}
{"nl": "what state that the _river_ traverses does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that colorado river traverses and that california not borders", "variables": {}}
{"nl": "how many places have the low point of _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ) )", "can": "number of place that is low point of california", "variables": {}}
{"nl": "name a major city that contains the highest point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is major and that high point of california is contained by", "variables": {}}
{"nl": "what state is not bordered by _state_ and contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what city does not contain _place_ that contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what cities does the state not contain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by state", "variables": {}}
{"nl": "what states do not contain _mountain_ and are found in the highest number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that is contained by the most number of country", "variables": {}}
{"nl": "what state borders _state_ with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that california borders and whose population is population of california", "variables": {}}
{"nl": "what state does the _river_ not travese with population different from _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not traverses and whose population is not population of sacramento", "variables": {}}
{"nl": "which state 's low point is not _place_ with an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is larger than area of usa", "variables": {}}
{"nl": "what place is within _city_ that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_state ) ( string ! = ) _state_ ) )", "can": "place that is contained by sacramento and that not is contained by california", "variables": {}}
{"nl": "what river does not traverse _city_ but traverses the most other cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that traverses the most number of city", "variables": {}}
{"nl": "what is a state that is n't in the usa and has borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that state borders", "variables": {}}
{"nl": "what state does teh _river_ border that does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that city is contained by", "variables": {}}
{"nl": "what state not bordering _state_ contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of place is contained by", "variables": {}}
{"nl": "what is a place not in _city_ containing the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the most number of city", "variables": {}}
{"nl": "what state with a high point of _place_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and that river not traverses", "variables": {}}
{"nl": "what state does not contain the mountain of _mountain_ within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that mountain not is contained by", "variables": {}}
{"nl": "which state has a capital other than _city_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that river not traverses", "variables": {}}
{"nl": "what is a city within _state_ that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string city_name ) ( string ! = ) _name_ ) )", "can": "city that is contained by california and that not is named sacramento", "variables": {}}
{"nl": "what state without a _place_ low point has no _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that high point of california not is contained by", "variables": {}}
{"nl": "what state containing _city_ has the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state is not traversed by the _river_ and does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that colorado river traverses and that sacramento not is contained by", "variables": {}}
{"nl": "what lake is contained by the fewest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string min ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by the least number of state", "variables": {}}
{"nl": "which state does the _river_ not border that does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that not borders state", "variables": {}}
{"nl": "what is the state without a _place_ low point with the least number of bordering states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that borders the least number of state", "variables": {}}
{"nl": "what state not containing _mountain_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that mount whitney not is contained by and that has the largest density", "variables": {}}
{"nl": "what state without _state_ borders has the fewest state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that borders the least number of state", "variables": {}}
{"nl": "what state with a capital other than _city_ has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of river borders", "variables": {}}
{"nl": "what country does not contain _state_ with an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is not area of california", "variables": {}}
{"nl": "what is a place within _state_ but not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that not is contained by state", "variables": {}}
{"nl": "what state contains _city_ and its low point is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what state does _state_ not border with an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california not borders and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what city not named _city_ is a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string capital_city ) ) )", "can": "city that not is named sacramento and that is a capital", "variables": {}}
{"nl": "what 's the population of the state with the least amount of area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the smallest area", "variables": {}}
{"nl": "what state does the _river_ not traverse that contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state has the capital of _city_ and has the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that is contained by the most number of country", "variables": {}}
{"nl": "what state is _city_ not in with the fewest bordering states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the least number of state borders", "variables": {}}
{"nl": "what is the capital of a state with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ) )", "can": "capital of state whose high point is not death valley", "variables": {}}
{"nl": "what is the elevation of the mountain with the smallest elevation ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string min ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) )", "can": "elevation of mountain that has the smallest elevation", "variables": {}}
{"nl": "what city not traversed by the _river_ has a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river not traverses and whose population is larger than population of california", "variables": {}}
{"nl": "what capital city of _state_ has a population that is not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is capital of california and whose population is not population of sacramento", "variables": {}}
{"nl": "what mountain is not contained within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that not is contained by state", "variables": {}}
{"nl": "what state does not contain _lake_ and has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that lake tahoe not is contained by and that has the smallest area", "variables": {}}
{"nl": "which state has the smallest number of _state_ low points and is also traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state contains no cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that city not is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "which state does the _river_ traverse and borders states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that state borders", "variables": {}}
{"nl": "what place is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by state", "variables": {}}
{"nl": "what is a river not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) )", "can": "river that not borders california", "variables": {}}
{"nl": "what mountain has the lowest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string min ) ( string elevation_mountain_length ) ) )", "can": "mountain that has the smallest elevation", "variables": {}}
{"nl": "what state does the _river_ not traverse and is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that is contained by the least number of country", "variables": {}}
{"nl": "what place is within the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by the most number of capital of california", "variables": {}}
{"nl": "which state whose capital is _city_ has the least number of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of state borders", "variables": {}}
{"nl": "which state does _state_ border but the city is not in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and that city not is contained by", "variables": {}}
{"nl": "what state without _city_ in it is contained by the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that is contained by the least number of country", "variables": {}}
{"nl": "what city is not traversed by rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that river not traverses", "variables": {}}
{"nl": "what 's the smallest state bordering _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that california borders and that has the smallest area", "variables": {}}
{"nl": "what is the total density of the state without a _place_ low point ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string density_state_count ) ) ) )", "can": "total density of state whose low point is not death valley", "variables": {}}
{"nl": "what state containing _lake_ has _river_ borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) )", "can": "state that lake tahoe is contained by and that colorado river borders", "variables": {}}
{"nl": "what state contained by the usa has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( string density_state_count ) ) )", "can": "state that is contained by usa and that has the largest density", "variables": {}}
{"nl": "what state that borders _state_ contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of city is contained by", "variables": {}}
{"nl": "what is the capital , and also the low point , of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is capital of california and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what city that is within _state_ has a population different than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is contained by california and whose population is not population of sacramento", "variables": {}}
{"nl": "what river traverses _city_ as awell as the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses sacramento and that traverses capital of california", "variables": {}}
{"nl": "which state 's capital is not _city_ but has the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of mountain is contained by", "variables": {}}
{"nl": "what country not containing _state_ has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "name the city that is not _city_ and that has the sparsest population .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that not is named sacramento and that has the smallest density", "variables": {}}
{"nl": "what is the density of a state with a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string density_state_count ) ) )", "can": "density of state whose capital is not sacramento", "variables": {}}
{"nl": "what state not bordering _state_ has a area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not borders california and whose area is smaller than area of california", "variables": {}}
{"nl": "which state has the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that the least number of lake is contained by", "variables": {}}
{"nl": "which states border _state_ and have the greatest amount of _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california borders and that the most number of capital of california is contained by", "variables": {}}
{"nl": "which state contains _city_ with the most lowest points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state has a high poitn of _place_ and does not contain _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is death valley and that high point of california not is contained by", "variables": {}}
{"nl": "what 's the total area of the country containing _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that california is contained by", "variables": {}}
{"nl": "what state does not have a city called _city_ and has many rivers bordering it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of river borders", "variables": {}}
{"nl": "which state where _lake_ is located has the same population as _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what city is _place_ not in with an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is area of usa", "variables": {}}
{"nl": "what state does not contain _city_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento is contained by and whose population is population of usa", "variables": {}}
{"nl": "what city outside of _state_ is the location of place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that place is contained by", "variables": {}}
{"nl": "which state 's capital is _city_ and is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that is contained by country", "variables": {}}
{"nl": "what is the state with a larger area than _state_ and a _place_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is larger than area of california", "variables": {}}
{"nl": "what is the total population of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the largest density", "variables": {}}
{"nl": "what major cities do not have _state_ high points ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is major and that high point of california not is contained by", "variables": {}}
{"nl": "what state 's low point is not _place_ and contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of place is contained by", "variables": {}}
{"nl": "which state has a capital other than _city_ with its lowest pint being _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose capital is not sacramento and whose low point is not death valley", "variables": {}}
{"nl": "what is the capital of the state with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ) )", "can": "capital of state whose low point is death valley", "variables": {}}
{"nl": "what state containing _lake_ has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is area of usa", "variables": {}}
{"nl": "what state containing _mountain_ is traversed by rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that river traverses", "variables": {}}
{"nl": "which major lakes have an area measurement larger than the united states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is major and whose area is larger than area of usa", "variables": {}}
{"nl": "_city_ is in this state and is its capital city .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that sacramento is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what state with a low point of _place_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of mountain is contained by", "variables": {}}
{"nl": "what is the number of cities that the _river_ does not traverse ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ) )", "can": "number of city that colorado river not traverses", "variables": {}}
{"nl": "what state includes _lake_ but does not border on state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that state not borders", "variables": {}}
{"nl": "what state does _state_ not border with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california not borders and whose population is population of usa", "variables": {}}
{"nl": "what state contains _place_ and its low point is _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what state with a low point that is not _place_ has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what is the area of the usa ?", "lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) )", "can": "area of usa", "variables": {}}
{"nl": "what is the total area of a state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that colorado river not borders", "variables": {}}
{"nl": "what state bordering _state_ has a low point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and whose low point is not low point of california", "variables": {}}
{"nl": "which state in the usa does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that is contained by usa and that death valley not is contained by", "variables": {}}
{"nl": "what is a major river that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string major_river ) ) )", "can": "river that not borders california and that is major", "variables": {}}
{"nl": "what major city contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is major and that low point of california is contained by", "variables": {}}
{"nl": "what state not traversed by the _river_ contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the most number of place is contained by", "variables": {}}
{"nl": "which state borders _state_ but has highest elevation that is not the lowest point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and whose high point is not low point of california", "variables": {}}
{"nl": "what state contains _mountain_ and also has the least number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of city is contained by", "variables": {}}
{"nl": "what state 's capital is not _city_ and contains   the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the most number of lake is contained by", "variables": {}}
{"nl": "what place is the low point of _state_ and is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is low point of california and that not is contained by city", "variables": {}}
{"nl": "what state is traversed by the _river_ that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that colorado river traverses and that death valley not is contained by", "variables": {}}
{"nl": "what state not within the usa has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose capital is not city", "variables": {}}
{"nl": "what state within the usa also contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that place is contained by", "variables": {}}
{"nl": "what state not bordering _state_ is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california not borders and that is contained by the least number of country", "variables": {}}
{"nl": "what state not bordering _state_ does not have a _place_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that california not borders and whose low point is not death valley", "variables": {}}
{"nl": "what state is _place_ not in that the _river_ does not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that death valley not is contained by and that colorado river not borders", "variables": {}}
{"nl": "what major city is traversed by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is major and that the most number of river traverses", "variables": {}}
{"nl": "what city larger than the usa contains part of the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is larger than area of usa", "variables": {}}
{"nl": "what city containing _place_ is the state 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that is capital of state", "variables": {}}
{"nl": "what state with less area than _state_ borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that borders california and whose area is smaller than area of california", "variables": {}}
{"nl": "which state does the _river_ traverse with a population different from _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river traverses and whose population is not population of sacramento", "variables": {}}
{"nl": "what 's the low point of the state bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ) )", "can": "low point of state that colorado river borders", "variables": {}}
{"nl": "what 's the total area measurement of the lake with the smallest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string min ) ( string area_lake_length^2 ) ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake that has the smallest area", "variables": {}}
{"nl": "what state not in the usa does n't have a capital in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not is contained by usa and whose capital is not capital of california", "variables": {}}
{"nl": "what city containing _place_ has an area different than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what is the density of the country with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string density_country_count ) ) )", "can": "density of country that has the smallest area", "variables": {}}
{"nl": "what state does the _river_ cross and who 's highest point is place", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose high point is place", "variables": {}}
{"nl": "what is the population of a state that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ) )", "can": "population of state that california not borders", "variables": {}}
{"nl": "what river does not border _state_ but borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that borders state", "variables": {}}
{"nl": "which state contained by the us has the least number of places contained by ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of place is contained by", "variables": {}}
{"nl": "what states that _lake_ is in has the fewest lakes", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse containg the fewest number of places within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of place is contained by", "variables": {}}
{"nl": "which state is within the usa and has the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what states in the usa have smaller populations than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that is contained by usa and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state 's low point is _place_ and does not border states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that state not borders", "variables": {}}
{"nl": "what is the total elevation of the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty _state_ ( string high_point_state_place ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of high point of california", "variables": {}}
{"nl": "name the state that does n't contain _city_ and with a larger population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what is the total density of the states contained within the united states ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string density_state_count ) ) ) )", "can": "total density of state that is contained by usa", "variables": {}}
{"nl": "what state is _city_ not in with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that sacramento not is contained by and that has the largest population", "variables": {}}
{"nl": "what state borders _state_ and has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that borders california and whose high point is death valley", "variables": {}}
{"nl": "what city containing _place_ has an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what state contains _lake_ and the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "what city not containing _place_ is contained by the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is contained by the least number of state", "variables": {}}
{"nl": "what state borders _state_ and is contained by the most countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california borders and that is contained by the most number of country", "variables": {}}
{"nl": "what 's the state with the smallest area that 's not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that not borders california and that has the smallest area", "variables": {}}
{"nl": "which state not containing _city_ has the highest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that sacramento not is contained by and that has the largest density", "variables": {}}
{"nl": "what city does not contain _place_ but does contain the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "where is _place_ ?", "lf": "( call SW.listValue _place_ )", "can": "death valley", "variables": {}}
{"nl": "what state contains _city_ and is bordered by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of river borders", "variables": {}}
{"nl": "what state 's capital is _city_ with the most rivers bordering it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of river borders", "variables": {}}
{"nl": "how many high points of _state_ are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "number of high point of california", "variables": {}}
{"nl": "what city named _city_ is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that is named sacramento and that colorado river not traverses", "variables": {}}
{"nl": "what river runs through _city_ but is not on the border of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string next_to_river_state ) ( string ! = ) _state_ ) )", "can": "river that traverses sacramento and that not borders california", "variables": {}}
{"nl": "what state does not have _mountain_ and whose low point is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "what city has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city whose area is larger than area of california", "variables": {}}
{"nl": "what state without a _place_ low point has the lowest population count ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string population_state_count ) ) )", "can": "state whose low point is not death valley and that has the smallest population", "variables": {}}
{"nl": "what _state_ high point location is not contained within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is high point of california and that not is contained by state", "variables": {}}
{"nl": "what city is not within _state_ with a population less than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is contained by california and whose population is smaller than population of california", "variables": {}}
{"nl": "how many states does the _river_ border ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ) )", "can": "number of state that colorado river borders", "variables": {}}
{"nl": "what is the density of the country with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string density_country_count ) ) )", "can": "density of country that has the largest population", "variables": {}}
{"nl": "what is the density of a city not named _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string density_city_count ) ) )", "can": "density of city that not is named sacramento", "variables": {}}
{"nl": "what capital city has the fewest _state_ low points in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is a capital and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state borders _state_ and has the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that borders california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what city that does not contain _place_ has a population different than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what state containing _mountain_ also has an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what is the state without a low point that also is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose low point is not place", "variables": {}}
{"nl": "what capital city does a river traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is a capital and that river traverses", "variables": {}}
{"nl": "which state contains _place_ but does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that death valley is contained by and that mount whitney not is contained by", "variables": {}}
{"nl": "what state contains _lake_ and is bordered by the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of state borders", "variables": {}}
{"nl": "which river goes through _state_ , including the capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses california and that traverses capital of california", "variables": {}}
{"nl": "what state is _lake_ in that is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that is contained by country", "variables": {}}
{"nl": "what place that is within _city_ is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by sacramento and that not is contained by state", "variables": {}}
{"nl": "what state does _state_ border with a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and whose low point is place", "variables": {}}
{"nl": "what country contains _state_ and has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "which state is _mountain_ not in with the fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what state does the _river_ traverse that does not contain mountains .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that mountain not is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse that does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that state not borders", "variables": {}}
{"nl": "what is a state within the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) )", "can": "state that is contained by usa", "variables": {}}
{"nl": "how many states do not have the _river_ in them ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ) )", "can": "number of state that colorado river not traverses", "variables": {}}
{"nl": "which state that 's home to _mountain_ does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that not borders state", "variables": {}}
{"nl": "name a place that is neither _state_ nor a state .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that not is contained by state", "variables": {}}
{"nl": "which states border _state_ and have the fewest places contained within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of place is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ has a cty as is its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose capital is city", "variables": {}}
{"nl": "what places are not contained within cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that place not is contained by", "variables": {}}
{"nl": "what state not containing a _place_ low point has a smaller area than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state does the _river_ traverse containing the city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that city is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse with a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose low point is not high point of california", "variables": {}}
{"nl": "what state does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that high point of california not is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and has the most state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that the most number of state borders", "variables": {}}
{"nl": "which city is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of the least number of state", "variables": {}}
{"nl": "what state not containing _city_ contains the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento not is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what city that the _river_ does not transverse has a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river not traverses and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what city is not _city_ and has an area different from the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is area of usa", "variables": {}}
{"nl": "what state does not contain _place_ with a capital different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "name the state not containing _lake_ that has the highest amount of state borders .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of state borders", "variables": {}}
{"nl": "which state not bordered by the _river_ contains that place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that place is contained by", "variables": {}}
{"nl": "what is the number of people in the state with the lowest population ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ) )", "can": "number of state that has the smallest population", "variables": {}}
{"nl": "what state not contained by the us is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that river not borders", "variables": {}}
{"nl": "which country contains a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that state is contained by", "variables": {}}
{"nl": "which state 's area is smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose area is smaller than area of usa", "variables": {}}
{"nl": "which state does not contain _lake_ and has a smaller population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what city that is not traversed by the _river_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that colorado river not traverses and that has the largest population", "variables": {}}
{"nl": "what is the population of the country with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string population_country_count ) ) )", "can": "population of country that has the largest density", "variables": {}}
{"nl": "what state bordering _state_ has a high point that is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not borders california and whose high point is low point of california", "variables": {}}
{"nl": "what is the number of the city with the lowest density ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string density_city_count ) ) ) )", "can": "number of city that has the smallest density", "variables": {}}
{"nl": "name countries that do n't contain _state_ and have a larger area than _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what state that the _river_ borders that has the most number of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of state borders", "variables": {}}
{"nl": "what city traversed by the _river_ has the biggest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that colorado river traverses and that has the largest area", "variables": {}}
{"nl": "what state is _lake_ in with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that lake tahoe is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what is the high point of the state that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ) )", "can": "high point of state that death valley not is contained by", "variables": {}}
{"nl": "name the state with a _place_ low point and a _state_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and whose capital is capital of california", "variables": {}}
{"nl": "what city outside of _place_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that death valley not is contained by and that has the smallest population", "variables": {}}
{"nl": "what state does _state_ not border and has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and whose high point is not place", "variables": {}}
{"nl": "what state not bordering _state_ has an area that is not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not borders california and whose area is not area of california", "variables": {}}
{"nl": "what state containing _place_ is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that river not borders", "variables": {}}
{"nl": "which state has a lower point than _place_ with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( string population_state_count ) ) )", "can": "state whose low point is death valley and that has the smallest population", "variables": {}}
{"nl": "what state has _city_ and the most river traverses within ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state does not border _state_ with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and whose capital is not city", "variables": {}}
{"nl": "which state has the lowest point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that is contained by country", "variables": {}}
{"nl": "what is a state bordering _state_ and is in the least number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that borders california and that is contained by the least number of country", "variables": {}}
{"nl": "what state that has _lake_ has part of it not in the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what river traversing _city_ also traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that traverses state", "variables": {}}
{"nl": "what city traversed by the _river_ is the capital of the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is capital of the least number of state", "variables": {}}
{"nl": "what city contained by _state_ has an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is contained by california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what us state has a high point other than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and whose high point is not high point of california", "variables": {}}
{"nl": "what state does the _river_ run through whose area is not the same as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is not area of usa", "variables": {}}
{"nl": "what country has a population that is not equal to the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country whose population is not population of california", "variables": {}}
{"nl": "which states are n't traversed by the _river_ and have a population less than that of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not traverses and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state has _lake_ and is larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what place boasts the highest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) )", "can": "place that has the largest elevation", "variables": {}}
{"nl": "what state contains _lake_ but does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that city not is contained by", "variables": {}}
{"nl": "what place within _state_ is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by california and that not is contained by city", "variables": {}}
{"nl": "what state not containing _mountain_ has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that mount whitney not is contained by and whose capital is sacramento", "variables": {}}
{"nl": "which state is the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose area is area of lake tahoe", "variables": {}}
{"nl": "name the state that borders _state_ and is traversed by the _river_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that borders california and that colorado river traverses", "variables": {}}
{"nl": "what city that is not named _city_ is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that is contained by state", "variables": {}}
{"nl": "what major lake is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string loc_lake_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is major and that not is contained by state", "variables": {}}
{"nl": "what state borders _state_ and contains _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and that high point of california is contained by", "variables": {}}
{"nl": "what state not bordering _state_ is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california not borders and that is contained by country", "variables": {}}
{"nl": "what state contains _mountain_ and is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that mount whitney is contained by and that colorado river traverses", "variables": {}}
{"nl": "what state that 's home to _lake_ is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that lake tahoe is contained by and that colorado river traverses", "variables": {}}
{"nl": "what state with a high point that is not _place_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is not death valley and whose population is not population of sacramento", "variables": {}}
{"nl": "what city contains _place_ and has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that death valley is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what city has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city whose population is population of california", "variables": {}}
{"nl": "what state with borders on the _river_ has a population matching the us population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river borders and whose population is population of usa", "variables": {}}
{"nl": "name the state without a _river_ border and without a _state_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not borders and whose capital is not capital of california", "variables": {}}
{"nl": "what major city is named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string major_city ) ) )", "can": "city that is named sacramento and that is major", "variables": {}}
{"nl": "what city is not traversed by the _river_ and has no other river traversals ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that river not traverses", "variables": {}}
{"nl": "what states does _state_ not border and the capital is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that california not borders and whose capital is not capital of california", "variables": {}}
{"nl": "which river flows through _state_ but is not the length of the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that traverses california and whose length is not length of colorado river", "variables": {}}
{"nl": "what state does the _river_ not traverse with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river not traverses and whose population is population of california", "variables": {}}
{"nl": "which state not containing _lake_ has the fewest river traversals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of river traverses", "variables": {}}
{"nl": "what capital city of _state_ has the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is capital of california and whose area is area of california", "variables": {}}
{"nl": "what is the area of a state without _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ) )", "can": "area of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state does not have _lake_ and also has a river that does not cross through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that river not traverses", "variables": {}}
{"nl": "what place that is the high point of _state_ has an elevation that is not equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is high point of california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what is the density of the state that has the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string density_state_count ) ) )", "can": "density of state that has the smallest population", "variables": {}}
{"nl": "what state not within the usa does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that mountain not is contained by", "variables": {}}
{"nl": "what is the area of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the largest population", "variables": {}}
{"nl": "what state not bordering _state_ has a population smaller than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that not borders california and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state traversed by a river does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that river traverses", "variables": {}}
{"nl": "which state without _river_ borders contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that city is contained by", "variables": {}}
{"nl": "what river does not traverse _state_ and does not traverse _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string ! = ) _city_ ) )", "can": "river that not traverses california and that not traverses sacramento", "variables": {}}
{"nl": "what is a place that is neither within _state_ nor a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that not is contained by city", "variables": {}}
{"nl": "which state with less area than _state_ does not have _place_ as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is smaller than area of california", "variables": {}}
{"nl": "what state is _place_ not in and has the most capitals of _state_ within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "how many countries have the largest area ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ) )", "can": "number of country that has the largest area", "variables": {}}
{"nl": "what state does the _river_ traverse and high point is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose high point is not low point of california", "variables": {}}
{"nl": "which state that does not have a capital of _city_ has the smallest popluation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( string population_state_count ) ) )", "can": "state whose capital is not sacramento and that has the smallest population", "variables": {}}
{"nl": "what is the area of the contry with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the largest density", "variables": {}}
{"nl": "which state does not border _state_ with it 's low point not being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and whose low point is not place", "variables": {}}
{"nl": "what state contains _mountain_ with a population not equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what state does _state_ not border ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that california not borders", "variables": {}}
{"nl": "what is the population of a state that borders _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ) )", "can": "population of state that borders california", "variables": {}}
{"nl": "what city not containing _place_ has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley not is contained by and whose population is not population of california", "variables": {}}
{"nl": "what state is _lake_ not contained by and the _river_ does not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that lake tahoe not is contained by and that colorado river not traverses", "variables": {}}
{"nl": "how many states border _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ) )", "can": "number of state that california borders", "variables": {}}
{"nl": "name the state with a low point equaling a _state_ high point that also contains _place_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what state does the _river_ not border and does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that mountain not is contained by", "variables": {}}
{"nl": "what city named _city_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is named sacramento and whose population is population of california", "variables": {}}
{"nl": "what state within the usa contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that is contained by usa and that capital of california is contained by", "variables": {}}
{"nl": "what state contains _lake_ and has an area not equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is not area of california", "variables": {}}
{"nl": "what river does not traverse a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses city", "variables": {}}
{"nl": "what is a place not within _city_ with an aelevation not equal to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state is _place_ in and also has a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that death valley is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what us state has a lower amount of area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state contains _place_ with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state does the _river_ not traverse but borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that river borders", "variables": {}}
{"nl": "what state containing _place_ does not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that death valley is contained by and that sacramento not is contained by", "variables": {}}
{"nl": "what river traverses _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) )", "can": "river that traverses sacramento", "variables": {}}
{"nl": "what city is _place_ not in with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what is a place in _state_ that is not within _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by california and that not is contained by capital of california", "variables": {}}
{"nl": "name the state without a _river_ border containing the _state_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not borders and that capital of california is contained by", "variables": {}}
{"nl": "what state contains _mountain_ whose low point is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and whose low point is not low point of california", "variables": {}}
{"nl": "which mountain is higher than _place_ , but not in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what state borders _state_ and the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of state borders", "variables": {}}
{"nl": "what place within _state_ is the low point of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string low_point_state_place ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is low point of the most number of state", "variables": {}}
{"nl": "what state not containing _place_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that place is contained by", "variables": {}}
{"nl": "which state with _state_ borders contains the largest amount of places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and that the most number of place is contained by", "variables": {}}
{"nl": "what city named _city_ does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) )", "can": "city that is named sacramento and that death valley not is contained by", "variables": {}}
{"nl": "what state containing _mountain_ has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is population of usa", "variables": {}}
{"nl": "what state not containing _city_ contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that lake is contained by", "variables": {}}
{"nl": "what state does not border _state_ and contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not borders california and that the least number of lake is contained by", "variables": {}}
{"nl": "what state does n't border _state_ and does n't contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that not borders california and that lake tahoe not is contained by", "variables": {}}
{"nl": "what state contains a city contained by _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is contained by state", "variables": {}}
{"nl": "name the state not bordered by _state_ and not traversed by the _river_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that colorado river not traverses and that california not borders", "variables": {}}
{"nl": "what city that is within _state_ does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is contained by california and that place not is contained by", "variables": {}}
{"nl": "what city is not within _state_ and is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that is capital of state", "variables": {}}
{"nl": "what city named _city_ is contained by a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is named sacramento and that place is contained by", "variables": {}}
{"nl": "what state that does not contain _lake_ also has no place that 's a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and whose low point is not place", "variables": {}}
{"nl": "what state is bordered by the _river_ and does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that mountain not is contained by", "variables": {}}
{"nl": "what is a state that has a different population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose population is not population of california", "variables": {}}
{"nl": "what state is _lake_ in with its high point being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose high point is place", "variables": {}}
{"nl": "what city is less populous than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city whose population is smaller than population of california", "variables": {}}
{"nl": "what city is _state_ 's capital and contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is capital of california and that the most number of place is contained by", "variables": {}}
{"nl": "which state 's capital is _city_ that contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that the least number of low point of california is contained by", "variables": {}}
{"nl": "which state 's capital is _city_ with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose capital is sacramento and whose high point is not death valley", "variables": {}}
{"nl": "what states does not border the _river_ but borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that borders state", "variables": {}}
{"nl": "what is the low point of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string low_point_state_place ) ) )", "can": "low point of state that has the largest density", "variables": {}}
{"nl": "what states that have _state_ borders do not have a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and that high point of california not is contained by", "variables": {}}
{"nl": "what state not containing _lake_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that lake tahoe not is contained by and that has the smallest population", "variables": {}}
{"nl": "what state containg _city_ is not travesred by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that sacramento is contained by and that colorado river not traverses", "variables": {}}
{"nl": "what is the river that traverses the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses the most number of city", "variables": {}}
{"nl": "what state does the _river_ travesre with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that colorado river traverses and that has the smallest density", "variables": {}}
{"nl": "what city which does not contain _place_ does contain a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and has a capital that is not the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and whose capital is not capital of california", "variables": {}}
{"nl": "what state traversed by the _river_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose capital is not city", "variables": {}}
{"nl": "which state does the _river_ border with its high point being a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river borders and whose high point is place", "variables": {}}
{"nl": "which _state_ city has the highest number of _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that is contained by california and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what place is contained by a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by city", "variables": {}}
{"nl": "what city is not named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) )", "can": "city that not is named sacramento", "variables": {}}
{"nl": "what is a mountain ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) )", "can": "mountain", "variables": {}}
{"nl": "what state has the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state containing _city_ has a low point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what is the total area of a state ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) ) )", "can": "total area of state", "variables": {}}
{"nl": "what city not contained by _state_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that not is contained by california and that has the largest area", "variables": {}}
{"nl": "what is a state not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not is contained by country", "variables": {}}
{"nl": "what major city has the smallest population numbers ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( string population_city_count ) ) )", "can": "city that is major and that has the smallest population", "variables": {}}
{"nl": "which state 's low point is not _place_ and has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ traverse that has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that colorado river traverses and that has the largest area", "variables": {}}
{"nl": "what is the capital of a state with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string capital_state_city ) ) )", "can": "capital of state whose capital is not sacramento", "variables": {}}
{"nl": "which state sharing a border with _state_ has a _state_ high point also ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that borders california and whose high point is high point of california", "variables": {}}
{"nl": "what state does the _river_ traverse that contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of place is contained by", "variables": {}}
{"nl": "what state within the usa is not contained by a palce ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that place not is contained by", "variables": {}}
{"nl": "what city is a capital with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( string population_city_count ) ) )", "can": "city that is a capital and that has the largest population", "variables": {}}
{"nl": "what state with a low point of _place_ is bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that state borders", "variables": {}}
{"nl": "what river borders _state_ but not does traverse _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string ! = ) _city_ ) )", "can": "river that borders california and that not traverses sacramento", "variables": {}}
{"nl": "what is the density of the state that contains _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string density_state_count ) ) )", "can": "density of state that sacramento is contained by", "variables": {}}
{"nl": "the high point of state has what total elevation ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ) ( string elevation_place_length ) ) ) )", "can": "total elevation of high point of state", "variables": {}}
{"nl": "what state not containing _city_ is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that river not traverses", "variables": {}}
{"nl": "what state does the _river_ traverse with other rivers traversing it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that river traverses", "variables": {}}
{"nl": "what state does not contain _place_ and is not bordered by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that river not borders", "variables": {}}
{"nl": "name the state not bordered by the _river_ with a greater area then _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is larger than area of california", "variables": {}}
{"nl": "which state has the highest number of _state_ capitals and no _place_ low point ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is not death valley and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what city contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) )", "can": "city that death valley is contained by", "variables": {}}
{"nl": "what state bordered by _state_ has the least number of river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of river traverses", "variables": {}}
{"nl": "what country has an area that differs from the _lake_ area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ not border and is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that state not borders", "variables": {}}
{"nl": "what 's the state 's density total ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string density_state_count ) ) ) )", "can": "total density of state", "variables": {}}
{"nl": "what state has a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose population is larger than population of usa", "variables": {}}
{"nl": "what is the high point of the state with a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ) )", "can": "high point of state whose low point is death valley", "variables": {}}
{"nl": "which state does the _river_ not traverse and has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that colorado river not traverses and that has the smallest population", "variables": {}}
{"nl": "what state bordering the _river_ has a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that colorado river borders and whose population is smaller than population of california", "variables": {}}
{"nl": "what state is smaller than _lake_ and does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ traverse with a low point not being the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose low point is not high point of california", "variables": {}}
{"nl": "what state that does not border _state_ contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of city is contained by", "variables": {}}
{"nl": "name the capital city that has a similar area to the area of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is a capital and whose area is area of california", "variables": {}}
{"nl": "what is a state 's area measurement ? '", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ) )", "can": "area of state", "variables": {}}
{"nl": "what is the density of the densest state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string density_state_count ) ) )", "can": "density of state that has the largest density", "variables": {}}
{"nl": "what state does not contain _place_ but contains the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that low point of california is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and whose low point is place", "variables": {}}
{"nl": "what city that is the capital of _state_ is the capital of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is capital of state", "variables": {}}
{"nl": "what city within _state_ is named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is contained by california and that is named name", "variables": {}}
{"nl": "what is the population size of a city not called _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ) )", "can": "population of city that not is named sacramento", "variables": {}}
{"nl": "what river longer than the _river_ does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not borders california and whose length is larger than length of colorado river", "variables": {}}
{"nl": "which city is the capital of _state_ with the fewest number of _state_ 's high points within it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is capital of california and that the least number of high point of california is contained by", "variables": {}}
{"nl": "in what state are _city_ and _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that sacramento is contained by and that mount whitney is contained by", "variables": {}}
{"nl": "what state does the _river_ not border that has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state does _state_ border that a river does not traverse ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california borders and that river not traverses", "variables": {}}
{"nl": "what city does the _river_ not traverse with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is smaller than area of california", "variables": {}}
{"nl": "what state does the _river_ not border that is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that is contained by the least number of country", "variables": {}}
{"nl": "which state containing _place_ has an area that differs from the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is not area of usa", "variables": {}}
{"nl": "name the state with an area different from that of the usa and not containing _place_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what ist the total population of _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "total population of california", "variables": {}}
{"nl": "what state containing _mountain_ has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state not bordering the _river_ has a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that colorado river not borders and whose capital is not sacramento", "variables": {}}
{"nl": "what state does the _river_ not traverse with an area larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is larger than area of california", "variables": {}}
{"nl": "what state contains _city_ with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( string population_state_count ) ) )", "can": "state that sacramento is contained by and that has the smallest population", "variables": {}}
{"nl": "what river with a length different than the _river_ does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string ! = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses california and whose length is not length of colorado river", "variables": {}}
{"nl": "what state is _city_ not in with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that sacramento not is contained by and that has the smallest density", "variables": {}}
{"nl": "which state does _state_ border with a capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that california borders and whose capital is sacramento", "variables": {}}
{"nl": "which state in the usa contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) )", "can": "state that is contained by usa and that mount whitney is contained by", "variables": {}}
{"nl": "what state has no _place_ low point and also does not have _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe not is contained by and whose low point is not death valley", "variables": {}}
{"nl": "name the state with a _city_ capital that has river borders .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that river borders", "variables": {}}
{"nl": "what is the capital of the state where _city_ is located ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string capital_state_city ) ) )", "can": "capital of state that sacramento is contained by", "variables": {}}
{"nl": "what state in the us borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that borders state", "variables": {}}
{"nl": "what city not containing _place_ has a smaller population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that death valley not is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what is the area of a ciy ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ) )", "can": "area of city", "variables": {}}
{"nl": "what state is _mountain_ in that does not contain any cities ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that city not is contained by", "variables": {}}
{"nl": "what is the state without _lake_ and without a city contained within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that city not is contained by", "variables": {}}
{"nl": "which state contains _lake_ and is smaller than the usa .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "which state does teh _river_ not traverse with an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is area of lake tahoe", "variables": {}}
{"nl": "what river equals the _river_ in length and also borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that borders california and whose length is length of colorado river", "variables": {}}
{"nl": "what is the area of the state containing _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ) )", "can": "area of state that lake tahoe is contained by", "variables": {}}
{"nl": "what city is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is contained by the least number of state", "variables": {}}
{"nl": "what city does the _river_ traverse with a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that colorado river traverses and whose population is smaller than population of california", "variables": {}}
{"nl": "what state does the _river_ not border with a high point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose high point is not high point of california", "variables": {}}
{"nl": "what state contains _mountain_ and has the fewest _state_ low points , too ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what is the total elevation of the lowest point of _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ) ) )", "can": "total elevation of place that is low point of california", "variables": {}}
{"nl": "what state , does not include _lake_ but has the most number of low points contained in _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state is _lake_ not in with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state is _mountain_ in but does not contain the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what state not contained by the usa does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that not borders state", "variables": {}}
{"nl": "which city is named _city_ with _city_ 's population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is named sacramento and whose population is population of sacramento", "variables": {}}
{"nl": "what state does the _river_ traverse which does not have the capital of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that colorado river traverses and whose capital is not sacramento", "variables": {}}
{"nl": "what state borders _state_ and has a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that borders california and whose capital is not sacramento", "variables": {}}
{"nl": "what state is _lake_ in with the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what major city has a population less than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is major and whose population is smaller than population of usa", "variables": {}}
{"nl": "what city not named _city_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is not area of california", "variables": {}}
{"nl": "what is the low point of the state with a _city_ capital ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ) )", "can": "low point of state whose capital is sacramento", "variables": {}}
{"nl": "what state contains _city_ and has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "this state has _state_ 's lowest point and _city_ is its capital city .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that low point of california is contained by", "variables": {}}
{"nl": "what is a state with an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose area is not area of california", "variables": {}}
{"nl": "what place is the high point of _state_ with the highest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string elevation_place_length ) ) )", "can": "place that is high point of california and that has the largest elevation", "variables": {}}
{"nl": "what place is the low point of _state_ and is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is contained by state", "variables": {}}
{"nl": "what state has no traversal of the _river_ and a capital that 's not the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and whose capital is not capital of california", "variables": {}}
{"nl": "which state whose low point is _place_ is in an area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is area of california", "variables": {}}
{"nl": "what city that is not within _state_ also does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) )", "can": "city that not is contained by california and that death valley is contained by", "variables": {}}
{"nl": "what state does not contain _place_ but does contain the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state not containing _city_ has an area greater in size than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state borders _state_ and has the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california borders and that is contained by the least number of country", "variables": {}}
{"nl": "what is the density of the country with the fewest people ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the smallest population", "variables": {}}
{"nl": "what place within _city_ is the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is contained by sacramento and that is low point of california", "variables": {}}
{"nl": "what is the total density of the state with the smallest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string area_state_length^2 ) ) ( string density_state_count ) ) ) )", "can": "total density of state that has the smallest area", "variables": {}}
{"nl": "what state with _place_ as its low point as a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is death valley and whose population is population of sacramento", "variables": {}}
{"nl": "what city with a _state_ high point location contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what is the population of the city with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string area_city_length^2 ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the largest area", "variables": {}}
{"nl": "what lake within _state_ is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string loc_lake_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by california and that not is contained by state", "variables": {}}
{"nl": "which river flows through _city_ but does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that not borders state", "variables": {}}
{"nl": "what state that is not within the usa has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that not is contained by usa and whose high point is not death valley", "variables": {}}
{"nl": "what city traversed by the _river_ has a smaller population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river traverses and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state containing _lake_ has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is place", "variables": {}}
{"nl": "which state contained by the usa is contained by the most number of countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that is contained by the most number of country", "variables": {}}
{"nl": "which lake is contained within the most number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string max ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by the most number of state", "variables": {}}
{"nl": "what state not bordering _state_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california not borders and whose population is not population of sacramento", "variables": {}}
{"nl": "which river does not cross _state_ or any city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that not traverses california and that not traverses city", "variables": {}}
{"nl": "what is the area of a city that does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ) )", "can": "area of city that death valley not is contained by", "variables": {}}
{"nl": "what state is _city_ in not containing a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that lake not is contained by", "variables": {}}
{"nl": "name the state that does n't border _state_ and contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and that city is contained by", "variables": {}}
{"nl": "how many rivers traverse _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ) )", "can": "number of river that traverses california", "variables": {}}
{"nl": "which state does the _river_ traverse with an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state 's population is less than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state not within the usa has a different area than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is not area of usa", "variables": {}}
{"nl": "what state does not contain _lake_ and has an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state containing _lake_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what major city is the largest by area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that is major and that has the largest area", "variables": {}}
{"nl": "what place that is not within _state_ is not within _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string loc_place_city ) ( string ! = ) _city_ ) )", "can": "place that not is contained by california and that not is contained by sacramento", "variables": {}}
{"nl": "what state that is not within the usa is within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that is contained by country", "variables": {}}
{"nl": "what is a state without _lake_ but with the most number of place ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "where is _state_ ?", "lf": "( call SW.listValue _state_ )", "can": "california", "variables": {}}
{"nl": "what state containing _city_ has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _city_ but does contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that mountain is contained by", "variables": {}}
{"nl": "what city named _city_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is area of lake tahoe", "variables": {}}
{"nl": "what major lake is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string min ) ( string loc_lake_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is major and that is contained by the least number of state", "variables": {}}
{"nl": "what state containing _city_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is not area of california", "variables": {}}
{"nl": "what state with a _state_ border has a population unequal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that california borders and whose population is not population of sacramento", "variables": {}}
{"nl": "what usa states do not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string next_to_state_state ) ( string ! = ) _state_ ) )", "can": "state that is contained by usa and that not borders california", "variables": {}}
{"nl": "what state containing _city_ has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is larger than area of california", "variables": {}}
{"nl": "what city within _state_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that is contained by california and that has the largest population", "variables": {}}
{"nl": "what is the total area of a state with a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state whose capital is not sacramento", "variables": {}}
{"nl": "what is the state not traversed by the _river_ that does not have a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that colorado river not traverses and whose capital is not sacramento", "variables": {}}
{"nl": "what 's the total area of the country with the least area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the smallest area", "variables": {}}
{"nl": "what state not bordering _state_ has a larger population than that of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not borders california and whose population is larger than population of california", "variables": {}}
{"nl": "what is the population of the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty _state_ ( string capital_state_city ) ) ( string population_city_count ) ) )", "can": "population of capital of california", "variables": {}}
{"nl": "what state does not contain _city_ and does not have _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that sacramento not is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what city within _state_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that is contained by california and that has the largest density", "variables": {}}
{"nl": "what state has no _place_ low point and a _state_ high point as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose low point is high point of california", "variables": {}}
{"nl": "how many cities are not within _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ) )", "can": "number of city that not is contained by california", "variables": {}}
{"nl": "what state that does n't contain _mountain_ has the most rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what state that has _city_ has a high point that is not a low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose high point is not low point of california", "variables": {}}
{"nl": "what non - us state has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is larger than area of california", "variables": {}}
{"nl": "what city has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city whose population is larger than population of usa", "variables": {}}
{"nl": "what river traverses _state_ but does not traverse _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string ! = ) _city_ ) )", "can": "river that traverses california and that not traverses sacramento", "variables": {}}
{"nl": "what state does the _river_ not border with a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and whose high point is not low point of california", "variables": {}}
{"nl": "what city does the _river_ not traverse that contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river not traverses and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what major city has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is major and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state is _place_ not in with the most river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of river borders", "variables": {}}
{"nl": "which state within the usa has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that is contained by usa and whose high point is not low point of california", "variables": {}}
{"nl": "what city not contaning _place_ contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that death valley not is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state with a low point of _place_ has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is smaller than area of california", "variables": {}}
{"nl": "what city that is within _state_ is a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string capital_city ) ) )", "can": "city that is contained by california and that is a capital", "variables": {}}
{"nl": "what city named _city_ has a population lower than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is named sacramento and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state has a high point other than _place_ which contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state not bordering _state_ contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) )", "can": "state that not borders california and that sacramento is contained by", "variables": {}}
{"nl": "what city that is not within _state_ is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that not is contained by california and that colorado river not traverses", "variables": {}}
{"nl": "what is a state within the usa that is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that is contained by usa and that colorado river not borders", "variables": {}}
{"nl": "what state bordering the _river_ has an area smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state traversed by the _river_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the most number of mountain is contained by", "variables": {}}
{"nl": "what is the total density of the state the borders _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string density_state_count ) ) ) )", "can": "total density of state that borders california", "variables": {}}
{"nl": "what is the total length of the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "total length of colorado river", "variables": {}}
{"nl": "which state does n't contain _city_ and _state_ 's capitol ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento not is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "which city has _place_ and is contained by the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string loc_city_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that is contained by state", "variables": {}}
{"nl": "what state borders _state_ and is not contained by a country", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that borders california and that not is contained by country", "variables": {}}
{"nl": "which state is bordered by the least amount of other states and that does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that borders the least number of state", "variables": {}}
{"nl": "what state does _state_ border with a high point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that california borders and whose high point is not high point of california", "variables": {}}
{"nl": "what state has a high point other than _place_ and contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose high point is not death valley and that high point of california is contained by", "variables": {}}
{"nl": "what major river traverses the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that traverses the least number of state", "variables": {}}
{"nl": "what is the low point of a state not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ) )", "can": "low point of state that colorado river not borders", "variables": {}}
{"nl": "what state contains _mountain_ with a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and whose high point is not place", "variables": {}}
{"nl": "which state bordering _state_ has no other state borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that borders california and that state not borders", "variables": {}}
{"nl": "what state that is not within the usa does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and that low point of california not is contained by", "variables": {}}
{"nl": "what city does the _river_ traverse that contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river traverses and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what is the population count for the state not containing _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ) )", "can": "population of state that lake tahoe not is contained by", "variables": {}}
{"nl": "what city is contained by _state_ with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is contained by california and whose area is smaller than area of california", "variables": {}}
{"nl": "what capital city has an area that is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is a capital and whose area is not area of usa", "variables": {}}
{"nl": "what state does the _river_ not traverse with a population different from the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not traverses and whose population is larger than population of usa", "variables": {}}
{"nl": "which state bordering _state_ has a bigger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that borders california and whose area is larger than area of california", "variables": {}}
{"nl": "which state is _mountain_ in which has a lower population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what is the total density of the country with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string density_country_count ) ) ) )", "can": "total density of country that has the smallest density", "variables": {}}
{"nl": "which state contains _lake_ and also contains the most low points in elevation of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what city is _place_ within that is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that death valley is contained by and that river not traverses", "variables": {}}
{"nl": "what city called _city_ shares the same area measurement as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is area of usa", "variables": {}}
{"nl": "what state has a low point other than _place_ and area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is area of usa", "variables": {}}
{"nl": "name the city the _river_ does n't traverse and with a smaller area than _lake_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what place not within _state_ has the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by california and that is contained by the most number of capital of california", "variables": {}}
{"nl": "what river traverses _state_ and traverses the most other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses the most number of state", "variables": {}}
{"nl": "what is the population of the least dense city ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string density_city_count ) ) ( string population_city_count ) ) )", "can": "population of city that has the smallest density", "variables": {}}
{"nl": "which state does not contain _place_ and has the least number of lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the least number of lake is contained by", "variables": {}}
{"nl": "which state is not in the usa with an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that not is contained by usa and whose area is not area of california", "variables": {}}
{"nl": "what is the city with the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string density_city_count ) ) )", "can": "city that has the largest density", "variables": {}}
{"nl": "what is the area of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the smallest population", "variables": {}}
{"nl": "what state does the _river_ not border that has an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is area of usa", "variables": {}}
{"nl": "what city within _state_ is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) )", "can": "city that is contained by california and that colorado river traverses", "variables": {}}
{"nl": "what river not bordering _state_ traverses the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not borders california and that traverses capital of california", "variables": {}}
{"nl": "what state that does not border _state_ has a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california not borders and whose population is larger than population of usa", "variables": {}}
{"nl": "what state not containing _place_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is area of california", "variables": {}}
{"nl": "what state not containing _mountain_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that mount whitney not is contained by and that has the largest area", "variables": {}}
{"nl": "what is the highest density city traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that colorado river traverses and that has the largest density", "variables": {}}
{"nl": "what is the area of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ) )", "can": "area of state that sacramento not is contained by", "variables": {}}
{"nl": "what city traversed by the _river_ contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that colorado river traverses and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what city named _city_ does not have the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is not area of california", "variables": {}}
{"nl": "what state with a high point other than _place_ is within the fewest countries ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string loc_state_country ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that is contained by the least number of country", "variables": {}}
{"nl": "what state not containing _city_ is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that sacramento not is contained by and that colorado river not borders", "variables": {}}
{"nl": "name a river that borders _state_ and borders the most states", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string max ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that borders the most number of state", "variables": {}}
{"nl": "what state outside of the us has the population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not is contained by usa and whose population is population of california", "variables": {}}
{"nl": "what state with a high point of _place_ has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is death valley and whose capital is city", "variables": {}}
{"nl": "which country is _state_ in that is the size of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what place is not within _city_ and has the high point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is high point of state", "variables": {}}
{"nl": "what is the area of the country with the highest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) ( string area_country_length^2 ) ) )", "can": "area of country that has the largest population", "variables": {}}
{"nl": "what city is not _city_ with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that not is named sacramento and whose area is smaller than area of usa", "variables": {}}
{"nl": "name the state that has the highest density and borders _state_ .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that borders california and that has the largest density", "variables": {}}
{"nl": "which states border _state_ and have a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that borders california and whose population is larger than population of california", "variables": {}}
{"nl": "what place that is not within _city_ is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that not is contained by city", "variables": {}}
{"nl": "what state does the _river_ not traverse and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that borders state", "variables": {}}
{"nl": "which place in _state_ has a higher elevation than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by california and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what major river is state - bordering ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that borders state", "variables": {}}
{"nl": "what is the total area of the state that borders _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that california borders", "variables": {}}
{"nl": "what state that 's bordering _state_ contains the fewest _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that borders california and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what is the total area of the country with the smallest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string density_country_count ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the smallest density", "variables": {}}
{"nl": "what major city is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that is capital of the most number of state", "variables": {}}
{"nl": "what state does _state_ not border and has a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california not borders and whose capital is city", "variables": {}}
{"nl": "what state that is within the usa contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the least number of lake is contained by", "variables": {}}
{"nl": "which state 's low point is not _place_ and also not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and whose low point is not low point of california", "variables": {}}
{"nl": "what state has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what state contains _place_ and does not have a capital city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and whose capital is not city", "variables": {}}
{"nl": "what is the population of a state with a low point other than _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ) )", "can": "population of state whose low point is not death valley", "variables": {}}
{"nl": "what state contained by _city_ does not have the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what state not containing _place_ borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that borders the least number of state", "variables": {}}
{"nl": "what state containing _lake_ is not in the country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that not is contained by country", "variables": {}}
{"nl": "what 's the name of the state that contains _lake_ and does n't have its highest point in _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe is contained by and whose high point is not death valley", "variables": {}}
{"nl": "what state with a low point of _place_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that place is contained by", "variables": {}}
{"nl": "which mountain range is not in _state_ but are in the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_mountain_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that not is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "name the state that has the largest density and is not bordered by _state_ .", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that california not borders and that has the largest density", "variables": {}}
{"nl": "what city is not contained by _state_ or traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that river not traverses", "variables": {}}
{"nl": "what state with a capital that is _city_ has a low point not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose capital is sacramento and whose low point is low point of california", "variables": {}}
{"nl": "what state containing _city_ has a high point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and whose high point is place", "variables": {}}
{"nl": "what is the total population of the state with the smallest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string population_state_count ) ) ( string population_state_count ) ) ) )", "can": "total population of state that has the smallest population", "variables": {}}
{"nl": "how many low points are there in a state ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ) ) )", "can": "number of low point of state", "variables": {}}
{"nl": "what is a place within _city_ with an elevation equal to _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what is the total density of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string density_state_count ) ) ) )", "can": "total density of state that sacramento not is contained by", "variables": {}}
{"nl": "what river traverses _city_ and borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string next_to_river_state ) ( string = ) _state_ ) )", "can": "river that traverses sacramento and that borders california", "variables": {}}
{"nl": "what is the lowest point of the state with the low point of _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ) )", "can": "low point of state whose low point is death valley", "variables": {}}
{"nl": "what state has the most number of cities named after the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that the most number of capital of california is contained by", "variables": {}}
{"nl": "what state containing _city_ has an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state does the _river_ border and contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and that high point of california is contained by", "variables": {}}
{"nl": "what state has a high point other than _place_ with the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( string population_state_count ) ) )", "can": "state whose high point is not death valley and that has the largest population", "variables": {}}
{"nl": "what state contains _city_ and the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that sacramento is contained by and that the most number of capital of california is contained by", "variables": {}}
{"nl": "what city named _city_ has a larger population than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is named sacramento and whose population is larger than population of california", "variables": {}}
{"nl": "what is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty _state_ ( string capital_state_city ) ) )", "can": "capital of california", "variables": {}}
{"nl": "what river does not traverse _state_ but borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that borders state", "variables": {}}
{"nl": "what state within the usa does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) )", "can": "state that is contained by usa and that mount whitney not is contained by", "variables": {}}
{"nl": "what state contains _place_ and contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of place is contained by", "variables": {}}
{"nl": "which state which has _city_ within it has a high point that 's not a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what state does the _river_ traverse with an area different from _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is not area of california", "variables": {}}
{"nl": "what lake is within _state_ with an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is smaller than area of usa", "variables": {}}
{"nl": "what mountain that is not within _state_ is not within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string loc_mountain_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "mountain that not is contained by california and that not is contained by state", "variables": {}}
{"nl": "what state with a capital of _city_ has an area larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is larger than area of usa", "variables": {}}
{"nl": "what states not containing _lake_ have an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is not area of california", "variables": {}}
{"nl": "which state has a high point other than _place_ with an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is larger than area of usa", "variables": {}}
{"nl": "what place that is the high point of _state_ is not within a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is high point of california and that not is contained by city", "variables": {}}
{"nl": "what state with a high point of _place_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is area of california", "variables": {}}
{"nl": "which state has the capital of _city_ and has an area different than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the total population of a state not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ) ) )", "can": "total population of state that not borders california", "variables": {}}
{"nl": "what city without a _river_ traversal does n't have the area of the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is not area of usa", "variables": {}}
{"nl": "what city not containing _place_ has a population that differs from california 's population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "whcih state 's high point is not _place_ that is in a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that is contained by country", "variables": {}}
{"nl": "what state that the _river_ borders has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is area of usa", "variables": {}}
{"nl": "what state bordered by the _river_ does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river borders and that low point of california not is contained by", "variables": {}}
{"nl": "what state does not contain _place_ and borders another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that borders state", "variables": {}}
{"nl": "what country is _state_ in that has a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "country that california is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state - traversing river does not traverse _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses california and that traverses state", "variables": {}}
{"nl": "what is the population of the state containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ) )", "can": "population of state that death valley is contained by", "variables": {}}
{"nl": "which mountain is not within _state_ and has an elevation equal to _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string ! = ) _state_ ) ( string elevation_mountain_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain that not is contained by california and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what capital city does not contain the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is a capital and that high point of california not is contained by", "variables": {}}
{"nl": "what state is _place_ in as well as mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that mountain is contained by", "variables": {}}
{"nl": "what is the density of a state which has a high point that is not _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string density_state_count ) ) )", "can": "density of state whose high point is not death valley", "variables": {}}
{"nl": "what is the highest point of _state_ containing its capital ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is high point of california and that is contained by the most number of capital of california", "variables": {}}
{"nl": "what state has mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mountain is contained by", "variables": {}}
{"nl": "what is the density of the country with the smallest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string density_country_count ) ) )", "can": "density of country that has the smallest population", "variables": {}}
{"nl": "what river does not traverse _city_ and borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not traverses sacramento and that borders the least number of state", "variables": {}}
{"nl": "what is the total area of a city ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ) ) )", "can": "total area of city", "variables": {}}
{"nl": "what state does not contain _lake_ with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what place is within _state_ contains the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by california and that is contained by the least number of state", "variables": {}}
{"nl": "which place is within _city_ and has an elevation different from _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what state contains _lake_ and the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what city not containing _place_ has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "which state does not border _river_ and has a smaller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is smaller than area of california", "variables": {}}
{"nl": "what state is not within the usa and has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and whose high point is not place", "variables": {}}
{"nl": "which state does not have the area of _lake_ but contains _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state that does not border _state_ has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and whose high point is not place", "variables": {}}
{"nl": "which state has _city_ as the capital and has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state whose capital is sacramento and that has the largest area", "variables": {}}
{"nl": "what is the density of a state not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string density_state_count ) ) )", "can": "density of state that colorado river not traverses", "variables": {}}
{"nl": "which city is _place_ in with a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that death valley is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what state with the most number of places contained has _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the most number of place is contained by", "variables": {}}
{"nl": "what state with a low point that is not _place_ also has a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and whose low point is place", "variables": {}}
{"nl": "which state traversed by the _river_ has a city capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and whose capital is city", "variables": {}}
{"nl": "what city within _state_ is not named name .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is contained by california and that not is named name", "variables": {}}
{"nl": "what _state_ lake exceeds _lake_ in area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state is _place_ not in that has a high point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "what river does not border _state_ but traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that not traverses state", "variables": {}}
{"nl": "what state that does not have _place_ as a low point contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that the most number of high point of california is contained by", "variables": {}}
{"nl": "which state is not bordered by the _river_ and does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not borders and that low point of california not is contained by", "variables": {}}
{"nl": "_lake_ is larger than this country .", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what countries have larger areas than the usa", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country whose area is larger than area of usa", "variables": {}}
{"nl": "what state with a low point of _place_ has a capital that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose low point is death valley and whose capital is not capital of california", "variables": {}}
{"nl": "what state does not border _state_ and its low point is the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and whose low point is high point of california", "variables": {}}
{"nl": "what state has the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is low point of california", "variables": {}}
{"nl": "what is a place not within _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) )", "can": "place that not is contained by sacramento", "variables": {}}
{"nl": "what city is within _state_ with a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is contained by california and whose population is population of usa", "variables": {}}
{"nl": "what state with a capital other than _city_ has the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what city contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that the least number of place is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and does not border a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that river not borders", "variables": {}}
{"nl": "what state not traversed by the _river_ has the greatest amount of state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the most number of state borders", "variables": {}}
{"nl": "what state without _place_ located within has a larger population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what place is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by the least number of state", "variables": {}}
{"nl": "what country does not contain _state_ and has a smaller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what state bordering _state_ has the same population as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that borders california and whose population is population of california", "variables": {}}
{"nl": "which river traverses _state_ , traversing the fewest number of cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses the least number of city", "variables": {}}
{"nl": "what state is _lake_ not in with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what state is _city_ not in that has the fewest high points of _state_ in it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state is _mountain_ in with an area equal to _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state without a _river_ traversal has a _state_ high point as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose low point is high point of california", "variables": {}}
{"nl": "which states not containing _city_ border the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and that borders the least number of state", "variables": {}}
{"nl": "how many lakes are in _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ) )", "can": "number of lake that is contained by california", "variables": {}}
{"nl": "what state has a high point other than _place_ and is not bordered by another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that state not borders", "variables": {}}
{"nl": "what density measurement applies to the country containing _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string density_country_count ) ) ) )", "can": "total density of country that california is contained by", "variables": {}}
{"nl": "which state with a _place_ location has no other place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that place not is contained by", "variables": {}}
{"nl": "which state has the capital of _city_ with the low point that is n't _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose capital is sacramento and whose low point is not death valley", "variables": {}}
{"nl": "what state with a _city_ capital has a population not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is sacramento and whose population is not population of sacramento", "variables": {}}
{"nl": "what state with a capital of _city_ has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( string density_state_count ) ) )", "can": "state whose capital is sacramento and that has the smallest density", "variables": {}}
{"nl": "what states not bordering _state_ are not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that not borders california and that colorado river not traverses", "variables": {}}
{"nl": "what city does the _river_ traverse that is not named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that not is named name", "variables": {}}
{"nl": "what state that borders _state_ has a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that borders california and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which state is _mountain_ not in with its area the same as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state that borders _state_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that california borders and whose capital is not city", "variables": {}}
{"nl": "what state does the _river_ not traverse with a low point of a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and whose low point is place", "variables": {}}
{"nl": "what 's the total density of states not containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string density_state_count ) ) ) )", "can": "total density of state that mount whitney not is contained by", "variables": {}}
{"nl": "which place is the high point of _state_ and elevation is equal to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is high point of california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what state is _lake_ not in with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe not is contained by and whose high point is not death valley", "variables": {}}
{"nl": "what mountain has the same elevation as _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what sate is _lake_ in and not contained in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that place is contained by", "variables": {}}
{"nl": "what state that _city_ is not in has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is population of sacramento", "variables": {}}
{"nl": "what is the usa ?", "lf": "( call SW.listValue fb:en.country.usa )", "can": "usa", "variables": {}}
{"nl": "what is the population of _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty _city_ ( string population_city_count ) ) )", "can": "population of sacramento", "variables": {}}
{"nl": "what lake is within _state_ with an area smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is smaller than area of california", "variables": {}}
{"nl": "name the state with a _city_ capital but no high point place .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose high point is not place", "variables": {}}
{"nl": "which state contains _mountain_ and has an area measurement unequal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is not area of california", "variables": {}}
{"nl": "what 's the population of the country that has the smallest population ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) ( string population_country_count ) ) ) )", "can": "total population of country that has the smallest population", "variables": {}}
{"nl": "how many cities does the _river_ traverse ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ) )", "can": "number of city that colorado river traverses", "variables": {}}
{"nl": "what state containing _mountain_ contains the _state_ capital , too ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what state does not border _state_ and has a population equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that not borders california and whose population is population of usa", "variables": {}}
{"nl": "what state with a _city_ capital contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that mount whitney is contained by and whose capital is sacramento", "variables": {}}
{"nl": "what state is _city_ not in with the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what 's the density of states not bordering _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string density_state_count ) ) )", "can": "density of state that not borders california", "variables": {}}
{"nl": "what state which contains _city_ has no _state_ borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that sacramento is contained by and that california not borders", "variables": {}}
{"nl": "what state bordering _state_ contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that borders california and that the least number of lake is contained by", "variables": {}}
{"nl": "what state 's low point is _place_ that borders the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of state borders", "variables": {}}
{"nl": "what city named _city_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is named sacramento and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ not traverse who has an area the same as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is area of california", "variables": {}}
{"nl": "what state not containng _place_ has the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and whose capital is capital of california", "variables": {}}
{"nl": "how long in total is river not traversing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string len_river_length ) ) ) )", "can": "total length of river that not traverses sacramento", "variables": {}}
{"nl": "what place is the high point of _state_ with an elevation lower than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is high point of california and whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "which state lacking a usa area does also not contain _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is not area of usa", "variables": {}}
{"nl": "name the state with population numbers unequal to _state_ 's and no _place_ low point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is not death valley and whose population is not population of california", "variables": {}}
{"nl": "what country that does not contain _state_ also does not contain a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "country that california not is contained by and that state not is contained by", "variables": {}}
{"nl": "what state is _place_ in that does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that death valley is contained by and that california not borders", "variables": {}}
{"nl": "what city named _city_ is a capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string capital_city ) ) )", "can": "city that is named sacramento and that is a capital", "variables": {}}
{"nl": "what lake has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string max ) ( string area_lake_length^2 ) ) )", "can": "lake that has the largest area", "variables": {}}
{"nl": "what state is within _mountain_ that has the most rivers traversing it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of river traverses", "variables": {}}
{"nl": "what is the density of the state containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string density_state_count ) ) )", "can": "density of state that mount whitney is contained by", "variables": {}}
{"nl": "what river bordering _state_ has a length longer than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that borders california and whose length is larger than length of colorado river", "variables": {}}
{"nl": "how many states have a low point other than _place_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ) )", "can": "number of state whose low point is not death valley", "variables": {}}
{"nl": "what state borders _state_ and does not contain _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and that low point of california not is contained by", "variables": {}}
{"nl": "which state with no bordering states also does not have a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that not borders state", "variables": {}}
{"nl": "what state is not bordered by _state_ and whose low point is not the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california not borders and whose low point is not low point of california", "variables": {}}
{"nl": "what city 's area is equal to the area of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city whose area is area of california", "variables": {}}
{"nl": "what is the name of a major city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is major and that is named name", "variables": {}}
{"nl": "what city within _state_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is contained by california and whose area is not area of california", "variables": {}}
{"nl": "what river traverses _city_ that also borders the state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) _city_ ) ( string next_to_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses sacramento and that borders state", "variables": {}}
{"nl": "what state does n't contain _mountain_ but is contained by some country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that is contained by country", "variables": {}}
{"nl": "what is the most densely populated city that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string max ) ( string population_city_count ) ) )", "can": "city that not is contained by california and that has the largest population", "variables": {}}
{"nl": "how many mountains have the lowest elevation ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string min ) ( string elevation_mountain_length ) ) ) )", "can": "number of mountain that has the smallest elevation", "variables": {}}
{"nl": "which state not bordering _state_ has no other state borders .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that state not borders", "variables": {}}
{"nl": "what country has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string population_country_count ) ) )", "can": "country that has the largest population", "variables": {}}
{"nl": "what state lacking a _state_ border also lacks river borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that not borders california and that river not borders", "variables": {}}
{"nl": "what state containng _city_ does not contain a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that city not is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ has a population equal to _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose capital is sacramento and whose population is population of sacramento", "variables": {}}
{"nl": "what state within the usa is bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that state borders", "variables": {}}
{"nl": "which state 's highest point is _place_ but does not have the same low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose low point is not low point of california", "variables": {}}
{"nl": "what river borders _state_ and crosses the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "river that borders california and that traverses the most number of city", "variables": {}}
{"nl": "what cpaital city has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that is a capital and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state with a low point other than _place_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose low point is not death valley and whose population is population of california", "variables": {}}
{"nl": "which state is in _place_ and in the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is area of usa", "variables": {}}
{"nl": "how many places have the smallest elevation ?", "lf": "( call SW.listValue ( call .size ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string min ) ( string elevation_place_length ) ) ) )", "can": "number of place that has the smallest elevation", "variables": {}}
{"nl": "what state bordering _state_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that borders california and that lake not is contained by", "variables": {}}
{"nl": "what capital city contains the high oint of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is a capital and that high point of california is contained by", "variables": {}}
{"nl": "what state does the _river_ border but does not border other states ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that state not borders", "variables": {}}
{"nl": "what state has _place_ and also contains the most amount of mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state within the usa is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that river traverses", "variables": {}}
{"nl": "what city that is not named _city_ has the most high points of _state_ within in ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is named sacramento and that the most number of high point of california is contained by", "variables": {}}
{"nl": "of states that do n't border _state_ , which one has the least number of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of river borders", "variables": {}}
{"nl": "what place is not in _city_ with an elevation larger than _place_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string > ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is larger than elevation of death valley", "variables": {}}
{"nl": "what country is outside of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country whose area is area of usa", "variables": {}}
{"nl": "which city in _state_ has the same elevation of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by california and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what is the population of the state 's capital ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ) ( string population_city_count ) ) )", "can": "population of capital of state", "variables": {}}
{"nl": "what state has a low point of _place_ and high point that is a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and whose high point is place", "variables": {}}
{"nl": "what state 's low point is not _place_ and high point is also not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state whose low point is not death valley and whose high point is not death valley", "variables": {}}
{"nl": "what place is within _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that is contained by capital of california", "variables": {}}
{"nl": "what city does the _river_ not traverse with a population smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river not traverses and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state bordered by the _river_ has the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of river traverses", "variables": {}}
{"nl": "what state is _city_ not in with a population smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is smaller than population of california", "variables": {}}
{"nl": "what state without a _state_ border has a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and whose high point is high point of california", "variables": {}}
{"nl": "what river has the largest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) )", "can": "river that has the largest length", "variables": {}}
{"nl": "what state containing a mountain has a _place_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that mountain is contained by", "variables": {}}
{"nl": "what state with a capital other than _city_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string max ) ( string population_state_count ) ) )", "can": "state whose capital is not sacramento and that has the largest population", "variables": {}}
{"nl": "what state has _mountain_ in it and the fewest number of _state_ capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that mount whitney is contained by and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what river has the smallest length ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string len_river_length ) ) )", "can": "river that has the smallest length", "variables": {}}
{"nl": "this state 's highest location is _place_ and is also not _state_ 's lowest point .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is death valley and whose high point is not low point of california", "variables": {}}
{"nl": "what state containing _city_ has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento is contained by and whose population is not population of california", "variables": {}}
{"nl": "what is a place within _state_ with an elevation equal to _mountain_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by california and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what contury contains _state_ and area is not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country that california is contained by and whose area is not area of usa", "variables": {}}
{"nl": "which state does the _river_ traverse but contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that the least number of lake is contained by", "variables": {}}
{"nl": "what city has a population not equal to that of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city whose population is not population of usa", "variables": {}}
{"nl": "what city does the _river_ traverse that is within the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string min ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that is contained by the least number of state", "variables": {}}
{"nl": "what state does the _river_ not border with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river not borders and whose high point is not death valley", "variables": {}}
{"nl": "which place not contained by _state_ has an elevation less than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by california and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state contains _city_ and also contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what state does the _river_ not border that has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose capital is city", "variables": {}}
{"nl": "what is the total area of a city not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ) ) )", "can": "total area of city that colorado river not traverses", "variables": {}}
{"nl": "what lake has the same area as _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does not contain _city_ and has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that sacramento not is contained by and whose high point is death valley", "variables": {}}
{"nl": "what mountain has a lower elevation than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string < ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain whose elevation is smaller than elevation of mount whitney", "variables": {}}
{"nl": "what country has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string population_country_count ) ) )", "can": "country that has the smallest population", "variables": {}}
{"nl": "what state with a smaller population than _city_ 's has _place_ as a low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is death valley and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "which state contains a _place_ low point and does not contain a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and that low point of california not is contained by", "variables": {}}
{"nl": "what state not containing _place_ has a population that is not equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that death valley not is contained by and whose population is not population of sacramento", "variables": {}}
{"nl": "what is the total population of _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string population_city_count ) ) ) )", "can": "total population of city that is capital of california", "variables": {}}
{"nl": "which state bordering the _river_ has a low point equal to a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and whose low point is high point of california", "variables": {}}
{"nl": "what is the population of the country with the smallest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string min ) ( string area_country_length^2 ) ) ( string population_country_count ) ) )", "can": "population of country that has the smallest area", "variables": {}}
{"nl": "which state is _place_ not in with an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "what state traversed by the _river_ has a lower population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river traverses and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) )", "can": "state that sacramento is contained by", "variables": {}}
{"nl": "what country does not contain _state_ and has a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california not is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "which state is _place_ in with the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that death valley is contained by and that has the smallest density", "variables": {}}
{"nl": "what state is not within the usa and its low point is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose low point is not high point of california", "variables": {}}
{"nl": "what is the river traversing the _state_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses capital of california", "variables": {}}
{"nl": "which state has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string min ) ( string density_state_count ) ) )", "can": "state that has the smallest density", "variables": {}}
{"nl": "what state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) )", "can": "state", "variables": {}}
{"nl": "what us state borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that borders the least number of state", "variables": {}}
{"nl": "what state has the least number of border states and does not contain _mountain_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that borders the least number of state", "variables": {}}
{"nl": "which country does n't contain _state_ and does n't have the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country that california not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what is the population of the state with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string area_state_length^2 ) ) ( string population_state_count ) ) )", "can": "population of state that has the largest area", "variables": {}}
{"nl": "what state is _city_ not in and has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that sacramento not is contained by and whose capital is not city", "variables": {}}
{"nl": "what is the total length of a river that borders _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string len_river_length ) ) ) )", "can": "total length of river that borders california", "variables": {}}
{"nl": "what is a place not within _city_ and not in the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string loc_place_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "place that not is contained by sacramento and that not is contained by capital of california", "variables": {}}
{"nl": "what city containing _lake_ has a smaller population than the us ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is smaller than population of usa", "variables": {}}
{"nl": "what mountain has an elevation not equal to _place_ 's", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "mountain whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what place is the high point of _state_ that contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string max ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by the most number of city", "variables": {}}
{"nl": "what is the high point of a state with a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string high_point_state_place ) ) )", "can": "high point of state whose capital is not sacramento", "variables": {}}
{"nl": "which city contained by _state_ has the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string min ) ( string population_city_count ) ) )", "can": "city that is contained by california and that has the smallest population", "variables": {}}
{"nl": "what 's the river that borders _state_ and does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders california and that not borders state", "variables": {}}
{"nl": "what state does the _river_ border that is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the least number of river traverses", "variables": {}}
{"nl": "what state not bordering the _river_ has a population smaller than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river not borders and whose population is smaller than population of usa", "variables": {}}
{"nl": "what state is within the usa with a high point equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and whose high point is high point of california", "variables": {}}
{"nl": "what state does the _river_ traverse and another river traverses ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that river traverses", "variables": {}}
{"nl": "what is the low point a state traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ) )", "can": "low point of state that colorado river traverses", "variables": {}}
{"nl": "what is the total area of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that sacramento not is contained by", "variables": {}}
{"nl": "what state not containing _mountain_ is traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that river traverses", "variables": {}}
{"nl": "what state not containing _lake_ contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that the most number of lake is contained by", "variables": {}}
{"nl": "what state is _place_ not in with a high point other than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that death valley not is contained by and whose high point is not death valley", "variables": {}}
{"nl": "what 's the highest elevation ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string elevation_place_length ) ) ( string elevation_place_length ) ) )", "can": "elevation of place that has the largest elevation", "variables": {}}
{"nl": "what place is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is contained by the most number of state", "variables": {}}
{"nl": "which state is _city_ in and does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that not borders state", "variables": {}}
{"nl": "what mountain within _state_ has the smallest elevation ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string min ) ( string elevation_mountain_length ) ) )", "can": "mountain that is contained by california and that has the smallest elevation", "variables": {}}
{"nl": "what _state_ mountain is the highest ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string max ) ( string elevation_mountain_length ) ) )", "can": "mountain that is contained by california and that has the largest elevation", "variables": {}}
{"nl": "what states that do n't contain _mountain_ do n't have any lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and that lake not is contained by", "variables": {}}
{"nl": "what lake has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake whose area is not area of california", "variables": {}}
{"nl": "what state with a capital that is not _city_ has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( string density_state_count ) ) )", "can": "state whose capital is not sacramento and that has the smallest density", "variables": {}}
{"nl": "what state with a low point of _place_ contains the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is death valley and that the least number of low point of california is contained by", "variables": {}}
{"nl": "name the city which has the least amount of high points of _state_ .", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that the least number of high point of california is contained by", "variables": {}}
{"nl": "what major lake is within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string major_lake ) ) )", "can": "lake that is contained by california and that is major", "variables": {}}
{"nl": "what city does not contain _place_ and is not contained by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string loc_city_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that not is contained by state", "variables": {}}
{"nl": "what state is not within the usa and is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that is contained by usa and that colorado river traverses", "variables": {}}
{"nl": "what state with the same area as _state_ has no _state_ borders ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that california not borders and whose area is area of california", "variables": {}}
{"nl": "what state does the _river_ not border with a population larger than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river not borders and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state has a high point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not low point of california", "variables": {}}
{"nl": "which state with no _state_ borders is the largest in area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that not borders california and that has the largest area", "variables": {}}
{"nl": "what city that does not contain _place_ has the name name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string city_name ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that death valley not is contained by and that is named name", "variables": {}}
{"nl": "which place is in the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string max ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is contained by the most number of city", "variables": {}}
{"nl": "in which state is _lake_ and the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe is contained by and that capital of california is contained by", "variables": {}}
{"nl": "what is a place within _city_ with an elevation lower than _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string < ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is smaller than elevation of death valley", "variables": {}}
{"nl": "what state containing _city_ has a low point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string low_point_state_place ) ( string = ) _place_ ) )", "can": "state that sacramento is contained by and whose low point is death valley", "variables": {}}
{"nl": "which place is not within _state_ with an elevation equal to _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by california and whose elevation is elevation of death valley", "variables": {}}
{"nl": "what state 's low point is _place_ with an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is area of usa", "variables": {}}
{"nl": "what is _mountain_ ?", "lf": "( call SW.listValue _mountain_ )", "can": "mount whitney", "variables": {}}
{"nl": "what place not in _state_ contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is contained by the least number of city", "variables": {}}
{"nl": "what state contains _city_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that borders state", "variables": {}}
{"nl": "what state contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that high point of california is contained by", "variables": {}}
{"nl": "how many state capitals are not in _city_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ) )", "can": "number of state whose capital is not sacramento", "variables": {}}
{"nl": "what location does not contain _city_ and does contain the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string max ) ( string loc_place_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by sacramento and that is contained by the most number of state", "variables": {}}
{"nl": "what place that is not contained by _state_ has a high point of state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that not is contained by california and that is high point of state", "variables": {}}
{"nl": "what state does _state_ not border that is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that california not borders and that not is contained by country", "variables": {}}
{"nl": "what state does not border _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) )", "can": "state that not borders california and that california not borders", "variables": {}}
{"nl": "what state has a low point that is not _place_ and an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose low point is not death valley and whose area is not area of california", "variables": {}}
{"nl": "what is the high point of the state with the largest population ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string population_state_count ) ) ( string high_point_state_place ) ) )", "can": "high point of state that has the largest population", "variables": {}}
{"nl": "what state traversed by the _river_ has a low point that is _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river traverses and whose low point is high point of california", "variables": {}}
{"nl": "what state contains _lake_ and has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that lake tahoe is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state does _state_ not border that contains the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california not borders and that the most number of lake is contained by", "variables": {}}
{"nl": "what city that is not within _state_ contains the fewest high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is contained by california and that the least number of high point of california is contained by", "variables": {}}
{"nl": "which state does not have the capital of _city_ and has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state whose capital is not sacramento and that has the smallest area", "variables": {}}
{"nl": "what state contains _lake_ and is bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that lake tahoe is contained by and that california borders", "variables": {}}
{"nl": "what _state_ lake differs in area from _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state with a high point other than _place_ contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of mountain is contained by", "variables": {}}
{"nl": "which state does the _river_ border with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state with a capital of _city_ contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that the least number of mountain is contained by", "variables": {}}
{"nl": "which city that is not contained by a place has the _river_ traversing it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that colorado river traverses and that place not is contained by", "variables": {}}
{"nl": "what is the mountain elevation within _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ) )", "can": "elevation of mountain that is contained by california", "variables": {}}
{"nl": "what state has no mountain and has _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that mountain not is contained by", "variables": {}}
{"nl": "what is the high point of _state_ within the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) ( string min ) ( string loc_place_city ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "place that is high point of california and that is contained by the least number of city", "variables": {}}
{"nl": "what state contains _lake_ and whose low point is equal to _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is high point of california", "variables": {}}
{"nl": "what state does not border _state_ and has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( string population_state_count ) ) )", "can": "state that not borders california and that has the largest population", "variables": {}}
{"nl": "what city not named _city_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that place is contained by", "variables": {}}
{"nl": "what city within _state_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that is contained by california and that has the largest area", "variables": {}}
{"nl": "what city not named _city_ has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is named sacramento and whose population is population of sacramento", "variables": {}}
{"nl": "what place within _city_ has the elevation of _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string = ) _city_ ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place that is contained by sacramento and whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "what state borders _state_ that does not contain a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that borders california and that mountain not is contained by", "variables": {}}
{"nl": "what state within the usa has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that is contained by usa and whose high point is death valley", "variables": {}}
{"nl": "name the state which does n't contain _place_ and also does n't contain the _state_ capital .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that death valley not is contained by and that capital of california not is contained by", "variables": {}}
{"nl": "what _city_ - free state has a low point that 's not a _state_ high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what is the total area of a city that is not within _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ) ) )", "can": "total area of city that not is contained by california", "variables": {}}
{"nl": "which state 's low point is not _place_ and is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that not is contained by country", "variables": {}}
{"nl": "which mountain in _state_ has an elevation lowe than _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string loc_mountain_state ) ( string = ) _state_ ) ( string elevation_mountain_length ) ( string ! = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "mountain that is contained by california and whose elevation is not elevation of mount whitney", "variables": {}}
{"nl": "what country has an area greater than that of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "country whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what river does not border _state_ and does not traverse _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not borders california and that not traverses capital of california", "variables": {}}
{"nl": "which major city has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( string density_city_count ) ) )", "can": "city that is major and that has the largest density", "variables": {}}
{"nl": "which state that does n't contain _place_ has the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "which state with the area of _lake_ does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley not is contained by and whose area is area of lake tahoe", "variables": {}}
{"nl": "what river does not traverse _state_ with a length smaller than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses california and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "what major river traverses a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that is major and that traverses state", "variables": {}}
{"nl": "what city traversed by the _river_ has an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is area of lake tahoe", "variables": {}}
{"nl": "what city does not contain _place_ that has a population larger than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley not is contained by and whose population is larger than population of usa", "variables": {}}
{"nl": "what state has a capital other than _city_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that borders state", "variables": {}}
{"nl": "what state is _city_ not in with a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is population of california", "variables": {}}
{"nl": "what state with a higher population than _state_ is not home to _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that mount whitney not is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what state has the largest density and _place_ as a low point ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( string density_state_count ) ) )", "can": "state whose low point is death valley and that has the largest density", "variables": {}}
{"nl": "which state has the largest area in the usa besides where _city_ is located ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "what city is _city_ with an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is named sacramento and whose area is area of california", "variables": {}}
{"nl": "what state outside of the us borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that not is contained by usa and that california borders", "variables": {}}
{"nl": "what state does not contain _lake_ and is not in a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that lake tahoe not is contained by and that not is contained by country", "variables": {}}
{"nl": "what is the total population of a state not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string population_state_count ) ) ) )", "can": "total population of state that california not borders", "variables": {}}
{"nl": "what state with the lowest number of bordering states is home to _mountain_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that borders the least number of state", "variables": {}}
{"nl": "what river does not traverse _city_ and traverses the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses sacramento and that traverses the least number of capital of california", "variables": {}}
{"nl": "what city does the _river_ not traverse and has an area that is not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river not traverses and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state does the _river_ border that borders the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that the most number of river borders", "variables": {}}
{"nl": "what capital city has an area larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is a capital and whose area is larger than area of california", "variables": {}}
{"nl": "what state has a low point of _place_ and borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string next_to_state_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that borders state", "variables": {}}
{"nl": "what state no bordering _state_ does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that state not borders", "variables": {}}
{"nl": "what state does the _river_ border with a high point that is not the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that colorado river borders and whose high point is not high point of california", "variables": {}}
{"nl": "what state within the usa is not within a country ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that not is contained by country", "variables": {}}
{"nl": "what state that borders _state_ contains a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and that city is contained by", "variables": {}}
{"nl": "which states with _state_ borders contain mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that california borders and that mountain is contained by", "variables": {}}
{"nl": "what is the total length of the river with the largest length ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string len_river_length ) ) ( string len_river_length ) ) ) )", "can": "total length of river that has the largest length", "variables": {}}
{"nl": "what is the total area of a state not containing _mountain_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state that mount whitney not is contained by", "variables": {}}
{"nl": "what state is _place_ not in that has a high point of _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) _place_ ) )", "can": "state that death valley not is contained by and whose high point is death valley", "variables": {}}
{"nl": "what is a major _place_ city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string major_city ) ) )", "can": "city that death valley is contained by and that is major", "variables": {}}
{"nl": "what state does _state_ not border and has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( string area_state_length^2 ) ) )", "can": "state that california not borders and that has the smallest area", "variables": {}}
{"nl": "what state not containing _place_ has a population equaling the us population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that death valley not is contained by and whose population is population of usa", "variables": {}}
{"nl": "what state not contained by a country also does not contain _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that not is contained by country", "variables": {}}
{"nl": "what state does _state_ border but does not contain a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california borders and that place not is contained by", "variables": {}}
{"nl": "what state that is within the usa contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that is contained by usa and that high point of california is contained by", "variables": {}}
{"nl": "what city is the cpital of _state_ with the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that is capital of california and that has the smallest area", "variables": {}}
{"nl": "what is the elevation of the highest point of the state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ) ( string elevation_place_length ) ) )", "can": "elevation of high point of state", "variables": {}}
{"nl": "what country not containing _state_ has the same population as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string ! = ) _state_ ) ( string population_country_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country that california not is contained by and whose population is population of california", "variables": {}}
{"nl": "what state does the _river_ not border with a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and whose capital is not city", "variables": {}}
{"nl": "what state the contains _city_ has a high point that is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that sacramento is contained by and whose high point is low point of california", "variables": {}}
{"nl": "what state outside of the united states has that lake within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that lake is contained by", "variables": {}}
{"nl": "what state that does not border the _river_ does not contain a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that lake not is contained by", "variables": {}}
{"nl": "what state 's low point is not _place_ that contains the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose low point is not death valley and that the most number of city is contained by", "variables": {}}
{"nl": "which state has a larger area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose area is larger than area of california", "variables": {}}
{"nl": "what lake is within a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "lake that is contained by state", "variables": {}}
{"nl": "what is the smallest elevation of a mountain ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ( string min ) ( string elevation_mountain_length ) ) ( string elevation_mountain_length ) ) ) )", "can": "total elevation of mountain that has the smallest elevation", "variables": {}}
{"nl": "what state not bordering _state_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that california not borders and that has the largest area", "variables": {}}
{"nl": "what state is _lake_ not in that has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "what state does teh _river_ traverse with the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river traverses and whose capital is capital of california", "variables": {}}
{"nl": "what state has no river borders and also contains _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that river not borders", "variables": {}}
{"nl": "what is the total length of rivers that do not go through _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string ! = ) _state_ ) ( string len_river_length ) ) ) )", "can": "total length of river that not traverses california", "variables": {}}
{"nl": "what is the total elevation of _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "total elevation of death valley", "variables": {}}
{"nl": "what is the density of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string density_state_count ) ) )", "can": "density of state that sacramento not is contained by", "variables": {}}
{"nl": "which state bordering _state_ has the highest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that california borders and that has the largest density", "variables": {}}
{"nl": "what usa state has the same area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is area of usa", "variables": {}}
{"nl": "what city not traversed by the _river_ has a population different than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river not traverses and whose population is not population of sacramento", "variables": {}}
{"nl": "which state is not traversed by the _river_ but is traversed by other rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that river traverses", "variables": {}}
{"nl": "what capital city is the capital of the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( call SW.reverse ( string capital_state_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is a capital and that is capital of the most number of state", "variables": {}}
{"nl": "what state travesed by the _river_ contains a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that place is contained by", "variables": {}}
{"nl": "what city not traversed by the _river_ has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that colorado river not traverses and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what state does not contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that lake tahoe not is contained by", "variables": {}}
{"nl": "what state does _state_ border with a capital other than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that california borders and whose capital is not sacramento", "variables": {}}
{"nl": "what is the density of the country with the largest area ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string density_country_count ) ) )", "can": "density of country that has the largest area", "variables": {}}
{"nl": "what city is not within _state_ with a population small than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that not is contained by california and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state has a low point of _place_ and does not have a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that lake not is contained by", "variables": {}}
{"nl": "what river does not traverse _city_ but traverses the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string traverse_river_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that not traverses sacramento and that traverses capital of california", "variables": {}}
{"nl": "what city does the _river_ traverse with an area that is not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which state not contained by the us whose capital is _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string capital_state_city ) ( string = ) _city_ ) )", "can": "state that not is contained by usa and whose capital is sacramento", "variables": {}}
{"nl": "what is the state bordered by _state_ with the highest number of _state_ low points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that california borders and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state does not contain _city_ and has a high point that is not _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento not is contained by and whose high point is not high point of california", "variables": {}}
{"nl": "which state does not border _state_ and has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that not borders california and that has the smallest density", "variables": {}}
{"nl": "what city is not traversed by the _river_ that is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that colorado river not traverses and that the least number of river traverses", "variables": {}}
{"nl": "what state does not border _state_ and contains the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and that capital of california not is contained by", "variables": {}}
{"nl": "what city containing a _state_ high point is traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that colorado river traverses and that high point of california is contained by", "variables": {}}
{"nl": "what is the area of a state that is not bordered by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ) )", "can": "area of state that colorado river not borders", "variables": {}}
{"nl": "what is the population of a state not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string population_state_count ) ) )", "can": "population of state that colorado river not traverses", "variables": {}}
{"nl": "what state containing _city_ also contains the most high points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that the most number of high point of california is contained by", "variables": {}}
{"nl": "what is the area of the state with the largest density ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string max ) ( string density_state_count ) ) ( string area_state_length^2 ) ) )", "can": "area of state that has the largest density", "variables": {}}
{"nl": "which country has the total population of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "country whose population is population of california", "variables": {}}
{"nl": "what state has a city capital that 's not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and whose capital is city", "variables": {}}
{"nl": "what is the state whose low point is _place_ and whose population is larger than population of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose low point is death valley and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what is the population of the state with _city_ as its capital ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string population_state_count ) ) )", "can": "population of state whose capital is sacramento", "variables": {}}
{"nl": "what capital city has a smaller area than the usa 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that is a capital and whose area is smaller than area of usa", "variables": {}}
{"nl": "which city is not in _state_ and contains the least number of places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is contained by california and that the least number of place is contained by", "variables": {}}
{"nl": "what state does not border _state_ and is not bordered by a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that not borders california and that not borders state", "variables": {}}
{"nl": "what state has a city that is not a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that city is contained by", "variables": {}}
{"nl": "what is the total population of the country ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string population_country_count ) ) ) )", "can": "total population of country", "variables": {}}
{"nl": "what river traverses _state_ and traverses the fewest other states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses california and that traverses the least number of state", "variables": {}}
{"nl": "what state not containing _lake_ has a population equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that lake tahoe not is contained by and whose population is population of california", "variables": {}}
{"nl": "what state not containing _mountain_ has a capital that is not a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that mount whitney not is contained by and whose capital is not city", "variables": {}}
{"nl": "what lake is within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) )", "can": "lake that is contained by california", "variables": {}}
{"nl": "what is the total area of the country that has the largest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string density_country_count ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the largest density", "variables": {}}
{"nl": "what is nothing ?", "lf": "( call SW.listValue ( number 0 length ) )", "can": "0", "variables": {}}
{"nl": "what river borders the fewest states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string min ) ( string next_to_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that borders the least number of state", "variables": {}}
{"nl": "what state with a _place_ high point has the least density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( string density_state_count ) ) )", "can": "state whose high point is not death valley and that has the smallest density", "variables": {}}
{"nl": "what state in the usa has a high point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string high_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that is contained by usa and whose high point is not place", "variables": {}}
{"nl": "what state traversed by the _river_ does not border a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that river not borders", "variables": {}}
{"nl": "what city is within _state_ has an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that is contained by california and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state with a high point that is not _place_ has a population smaller than _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state whose high point is not death valley and whose population is smaller than population of sacramento", "variables": {}}
{"nl": "what state that borders _state_ also borders a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that borders california and that river borders", "variables": {}}
{"nl": "what is the total population of the state containing _city_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ) ) )", "can": "total population of state that sacramento is contained by", "variables": {}}
{"nl": "what state 's capital is not _city_ has a population equal to _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose capital is not sacramento and whose population is population of california", "variables": {}}
{"nl": "what state with a low point of _place_ has an area smaller than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose low point is death valley and whose area is smaller than area of usa", "variables": {}}
{"nl": "how many low points in _state_ are there ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "number of low point of california", "variables": {}}
{"nl": "what low point location in _state_ is also a state high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is high point of state", "variables": {}}
{"nl": "which state does the _river_ not border with an area smaller than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river not borders and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "which state has a high point other than _place_ and contains the fewest cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the least number of city is contained by", "variables": {}}
{"nl": "what state containing _lake_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is not high point of california", "variables": {}}
{"nl": "which state that 's home to _mountain_ borders the greatest number of states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( string next_to_state_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that borders the most number of state", "variables": {}}
{"nl": "what state is within the usa with the smallest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string min ) ( string population_state_count ) ) )", "can": "state that is contained by usa and that has the smallest population", "variables": {}}
{"nl": "which state does not contain _place_ but does contain the highest point in _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that death valley not is contained by and that high point of california is contained by", "variables": {}}
{"nl": "what state that does not border _state_ has a capital of a city ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that not borders california and whose capital is city", "variables": {}}
{"nl": "what is the area of some state that the _river_ borders ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ) )", "can": "area of state that colorado river borders", "variables": {}}
{"nl": "what city located outside of _state_ has a population greater than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that not is contained by california and whose population is larger than population of california", "variables": {}}
{"nl": "what state with a high point of _place_ has a population lower than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state whose high point is death valley and whose population is smaller than population of california", "variables": {}}
{"nl": "what state with a _city_ capital does not have the same area as the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose capital is sacramento and whose area is not area of usa", "variables": {}}
{"nl": "which state is _lake_ and the low point of _state_ not in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that low point of california not is contained by", "variables": {}}
{"nl": "what capital city contains the most places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string max ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that is a capital and that the most number of place is contained by", "variables": {}}
{"nl": "what state does _state_ not border that does not contain any places ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that california not borders and that place is contained by", "variables": {}}
{"nl": "what state bordering the _river_ has an area not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is not area of california", "variables": {}}
{"nl": "what is a state that the _river_ does not traverse and its lowest point is not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string ! = ) _place_ ) )", "can": "state that colorado river not traverses and whose low point is not death valley", "variables": {}}
{"nl": "what major river does not traverse the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string major_river ) ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that is major and that not traverses capital of california", "variables": {}}
{"nl": "what state containing _mountain_ contains the most mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the most number of mountain is contained by", "variables": {}}
{"nl": "what capital city of _state_ does not contain a high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is capital of california and that high point of california not is contained by", "variables": {}}
{"nl": "what state does _state_ border that contains the fewest lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string min ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that california borders and that the least number of lake is contained by", "variables": {}}
{"nl": "what is the total population of the city with the largest density ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string max ) ( string density_city_count ) ) ( string population_city_count ) ) ) )", "can": "total population of city that has the largest density", "variables": {}}
{"nl": "what state does not have _place_ within and is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that death valley not is contained by and that colorado river not traverses", "variables": {}}
{"nl": "which city is not within _state_ with an area equal of _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is area of lake tahoe", "variables": {}}
{"nl": "what state has a low point that is not _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not low point of california", "variables": {}}
{"nl": "what is the population of a state ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string population_state_count ) ) )", "can": "population of state", "variables": {}}
{"nl": "what state is within the usa and is not traversed by the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) )", "can": "state that is contained by usa and that colorado river not traverses", "variables": {}}
{"nl": "what state contains _place_ and has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that death valley is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "which state has a capital that is _city_ with a low point that is not a place ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and whose low point is not place", "variables": {}}
{"nl": "what state not traversed by the _river_ contains the fewest capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that colorado river not traverses and that the least number of capital of california is contained by", "variables": {}}
{"nl": "what state does not contain _lake_ and its capital is _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string capital_state_city ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that lake tahoe not is contained by and whose capital is capital of california", "variables": {}}
{"nl": "what is the high point of a state not bordered by _state_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string high_point_state_place ) ) )", "can": "high point of state that california not borders", "variables": {}}
{"nl": "what state has a high point of _place_ and an area equal to the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state whose high point is death valley and whose area is area of usa", "variables": {}}
{"nl": "what river that borders _state_ traverses the most capitals of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string max ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that borders california and that traverses the most number of capital of california", "variables": {}}
{"nl": "what is the population of the state that contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string population_state_count ) ) )", "can": "population of state that mount whitney is contained by", "variables": {}}
{"nl": "what state borders _state_ containg the most cities ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_city_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ) )", "can": "state that borders california and that the most number of city is contained by", "variables": {}}
{"nl": "which state 's high point is not _place_ and its low point is _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose high point is not death valley and whose high point is low point of california", "variables": {}}
{"nl": "what city does the _river_ not traverse that has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that colorado river not traverses and that has the smallest area", "variables": {}}
{"nl": "what state contains _place_ and has a larger area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what state not containing _place_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that death valley not is contained by and that has the largest density", "variables": {}}
{"nl": "what state within the usa is bordered by the most rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string max ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that the most number of river borders", "variables": {}}
{"nl": "what state within the usa has an area larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that is contained by usa and whose area is larger than area of usa", "variables": {}}
{"nl": "what is the capital of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string capital_state_city ) ) )", "can": "capital of state that sacramento not is contained by", "variables": {}}
{"nl": "what state contains _city_ and the _river_ traverses it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) )", "can": "state that sacramento is contained by and that colorado river traverses", "variables": {}}
{"nl": "what state that borders _state_ has the low point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that borders california and whose low point is low point of california", "variables": {}}
{"nl": "which river borders _state_ and does not traverse the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string traverse_river_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that borders california and that not traverses capital of california", "variables": {}}
{"nl": "what state does _state_ not border that also does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that california not borders and that not borders state", "variables": {}}
{"nl": "what state traversed by the _river_ has a population equal to _city_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "state that colorado river traverses and whose population is population of sacramento", "variables": {}}
{"nl": "what state that does not border _state_ has the most lakes ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string max ) ( call SW.reverse ( string loc_lake_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not borders california and that the most number of lake is contained by", "variables": {}}
{"nl": "what country contains _state_ and has a population larger than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string population_country_count ) ( string > ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "country that california is contained by and whose population is larger than population of sacramento", "variables": {}}
{"nl": "what city does the _river_ traverse with an area larger than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what is the total lake area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string area_lake_length^2 ) ) ) )", "can": "total area of lake", "variables": {}}
{"nl": "which river traverses _state_ but does not go through _state_ 's capital ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that traverses california and that traverses the least number of capital of california", "variables": {}}
{"nl": "what is the low point of the state containing _lake_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ) )", "can": "low point of state that lake tahoe is contained by", "variables": {}}
{"nl": "what is a place not within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string ! = ) _state_ ) )", "can": "place that not is contained by california", "variables": {}}
{"nl": "what state is not within the usa that do not contain lakes ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not is contained by usa and that lake not is contained by", "variables": {}}
{"nl": "what state with a low point that is not _place_ contains the most low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state whose low point is not death valley and that the most number of low point of california is contained by", "variables": {}}
{"nl": "what state is traversed by the _river_ and also has a low point that 's a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that colorado river not traverses and whose low point is low point of california", "variables": {}}
{"nl": "which state not containing _city_ does not have the area of _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is not area of lake tahoe", "variables": {}}
{"nl": "which city is named _city_ but has a different population than _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty _city_ ( string population_city_count ) ) ) )", "can": "city that is named sacramento and whose population is not population of sacramento", "variables": {}}
{"nl": "what state that contains _lake_ has the lowest point of the low point of _state_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that lake tahoe is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what city named _city_ contains the high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that is named sacramento and that high point of california not is contained by", "variables": {}}
{"nl": "what state does the _river_ traverse who has an area equal to that of the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is area of usa", "variables": {}}
{"nl": "which city that is smaller than the usa is near the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is smaller than area of usa", "variables": {}}
{"nl": "what state with a capital that is not _city_ contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of place is contained by", "variables": {}}
{"nl": "what is the number of _state_ capitals ?", "lf": "( call SW.listValue ( call .size ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "number of capital of california", "variables": {}}
{"nl": "what city within _state_ contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) )", "can": "city that is contained by california and that death valley is contained by", "variables": {}}
{"nl": "what state contains _city_ with a population larger than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that sacramento is contained by and whose population is larger than population of california", "variables": {}}
{"nl": "what river that does not border _state_ does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string ! = ) _state_ ) ( string next_to_river_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that not borders california and that not borders state", "variables": {}}
{"nl": "what major city has a population smaller than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is major and whose population is smaller than population of california", "variables": {}}
{"nl": "what state that is not within the usa has a population not equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not is contained by usa and whose population is not population of california", "variables": {}}
{"nl": "what state not bordering _state_ has a capital that is not the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that not borders california and whose capital is not capital of california", "variables": {}}
{"nl": "what is the density of the country in which _state_ is located ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ( string density_country_count ) ) )", "can": "density of country that california is contained by", "variables": {}}
{"nl": "what is the total area of the state with the low point of _place_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string area_state_length^2 ) ) ) )", "can": "total area of state whose low point is death valley", "variables": {}}
{"nl": "which city does the _river_ not traverse with a population larger than the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river not traverses and whose population is larger than population of usa", "variables": {}}
{"nl": "what state is not bordered by _state_ with a fewest river traverses ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) _state_ ) ( string min ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that california not borders and that the least number of river traverses", "variables": {}}
{"nl": "what city besides _city_ has the least number of _state_ 's high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that not is named sacramento and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what state with a capital of _city_ has the largest population ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( string population_state_count ) ) )", "can": "state whose capital is sacramento and that has the largest population", "variables": {}}
{"nl": "what major city is not named name ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string city_name ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is major and that not is named name", "variables": {}}
{"nl": "what state does not border _state_ but contains a lake ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that not borders california and that lake is contained by", "variables": {}}
{"nl": "what major city has the smallest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string min ) ( string area_city_length^2 ) ) )", "can": "city that is major and that has the smallest area", "variables": {}}
{"nl": "how many states do not contain _mountain_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ) )", "can": "number of state that mount whitney not is contained by", "variables": {}}
{"nl": "what is a city named _city_ with the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that is named sacramento and that has the largest density", "variables": {}}
{"nl": "a capital city lists what number as its total population figure ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ) ) )", "can": "total population of city that is a capital", "variables": {}}
{"nl": "what state is _lake_ in that is not traversed by a river ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that lake tahoe is contained by and that river not traverses", "variables": {}}
{"nl": "what city has a smaller population than the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string population_city_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city whose population is smaller than population of usa", "variables": {}}
{"nl": "what is a country that does not have the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string area_country_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "country whose area is not area of usa", "variables": {}}
{"nl": "which city is in _state_ and is not travesred by rivers ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is contained by california and that river not traverses", "variables": {}}
{"nl": "what state with a capital other than _city_ has the fewest states bordering it ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose capital is not sacramento and that the least number of state borders", "variables": {}}
{"nl": "what state not containing _mountain_ has the fewest low points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of low point of california is contained by", "variables": {}}
{"nl": "what state borders _state_ but does not have an area that matches _state_ 's area ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that borders california and whose area is not area of california", "variables": {}}
{"nl": "what state does the _river_ not border that borders a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string ! = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river not borders and that state borders", "variables": {}}
{"nl": "what state containing _lake_ has a population equal to the usa population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that lake tahoe is contained by and whose population is population of usa", "variables": {}}
{"nl": "which city does the _river_ not traverse with the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that colorado river not traverses and that has the largest density", "variables": {}}
{"nl": "this state touches _state_ but does not include _lake_ .", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) )", "can": "state that california borders and that lake tahoe not is contained by", "variables": {}}
{"nl": "what is the us population ?", "lf": "( call SW.listValue ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) )", "can": "population of usa", "variables": {}}
{"nl": "which state that contains a lake also contains the _place_ location ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ) )", "can": "state that death valley is contained by and that lake is contained by", "variables": {}}
{"nl": "which state does not border _state_ and does not have _city_ within it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) )", "can": "state that not borders california and that sacramento not is contained by", "variables": {}}
{"nl": "what states do n't contain _place_ or any mountains ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that mountain not is contained by", "variables": {}}
{"nl": "which river traverses the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string max ) ( string traverse_river_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "river that traverses the most number of state", "variables": {}}
{"nl": "what city not traversed by the _river_ has a population different than that of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) ( string population_city_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that colorado river not traverses and whose population is not population of usa", "variables": {}}
{"nl": "what state is _mountain_ not in that has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that mount whitney not is contained by and whose area is area of california", "variables": {}}
{"nl": "what city that is not in _state_ has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string min ) ( string density_city_count ) ) )", "can": "city that not is contained by california and that has the smallest density", "variables": {}}
{"nl": "what state does the _river_ not traverse and contains the fewest mountains ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string loc_mountain_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of mountain is contained by", "variables": {}}
{"nl": "what major lake has an area equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "lake that is major and whose area is area of usa", "variables": {}}
{"nl": "what state is the capital of _state_ in ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state that capital of california is contained by", "variables": {}}
{"nl": "what state borders _state_ with an area not equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that california borders and whose area is not area of lake tahoe", "variables": {}}
{"nl": "what state that has a capital that is not _city_ does not have the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose capital is not sacramento and whose capital is not capital of california", "variables": {}}
{"nl": "what state does not contain _city_ and borders the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that the least number of river borders", "variables": {}}
{"nl": "which state is _mountain_ in and has an area different from the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string area_state_length^2 ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that mount whitney is contained by and whose area is not area of usa", "variables": {}}
{"nl": "what place outside of _city_ has a different elevation than _place_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( string elevation_place_length ) ( string ! = ) ( call SW.getProperty _place_ ( string elevation_place_length ) ) ) )", "can": "place that not is contained by sacramento and whose elevation is not elevation of death valley", "variables": {}}
{"nl": "what state is bordered by _state_ with a population not equal to the usa 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that california borders and whose population is not population of usa", "variables": {}}
{"nl": "what place is the low point of _state_ and the low point of a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "place that is low point of california and that is low point of state", "variables": {}}
{"nl": "what is the densest state with a _city_ capital ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( string max ) ( string density_state_count ) ) )", "can": "state whose capital is sacramento and that has the largest density", "variables": {}}
{"nl": "what city outside of _state_ has more area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is larger than area of california", "variables": {}}
{"nl": "what is the total area of the country with the largest area ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( string max ) ( string area_country_length^2 ) ) ( string area_country_length^2 ) ) ) )", "can": "total area of country that has the largest area", "variables": {}}
{"nl": "which state is in the usa and does not border another state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string = ) fb:en.country.usa ) ( string next_to_state_state ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that is contained by usa and that not borders state", "variables": {}}
{"nl": "which capital city has a population large than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string capital_city ) ) ( string population_city_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "city that is a capital and whose population is larger than population of california", "variables": {}}
{"nl": "which city that is not named _city_ has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string max ) ( string density_city_count ) ) )", "can": "city that not is named sacramento and that has the largest density", "variables": {}}
{"nl": "what city named _city_ contains _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) )", "can": "city that is named sacramento and that death valley is contained by", "variables": {}}
{"nl": "what major river does not traverse _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string major_river ) ) )", "can": "river that not traverses sacramento and that is major", "variables": {}}
{"nl": "what state does the _river_ traverse with an area equal to _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string = ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "state that colorado river traverses and whose area is area of lake tahoe", "variables": {}}
{"nl": "how many countries contain _state_ ?", "lf": "( call SW.listValue ( call .size ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ( call SW.reverse ( string loc_state_country ) ) ( string = ) _state_ ) ) )", "can": "number of country that california is contained by", "variables": {}}
{"nl": "what state not within the usa has a population larger than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string population_state_count ) ( string > ) ( call SW.getProperty _state_ ( string population_state_count ) ) ) )", "can": "state that not is contained by usa and whose population is larger than population of california", "variables": {}}
{"nl": "what state does not border _state_ and contains a high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that not borders california and that high point of california is contained by", "variables": {}}
{"nl": "what state outside of the united states has a high point that 's a _state_ low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string loc_state_country ) ( string ! = ) fb:en.country.usa ) ( string high_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that not is contained by usa and whose high point is low point of california", "variables": {}}
{"nl": "which state that borders the _river_ and has area is smaller than area of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river borders and whose area is smaller than area of california", "variables": {}}
{"nl": "what state is _mountain_ in that has the fewest river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that mount whitney is contained by and that the least number of river borders", "variables": {}}
{"nl": "which state is not the location of _lake_ and also has the largest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string max ) ( string density_state_count ) ) )", "can": "state that lake tahoe not is contained by and that has the largest density", "variables": {}}
{"nl": "what state with a _city_ capital has no place contained within ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state whose capital is sacramento and that place not is contained by", "variables": {}}
{"nl": "what city not named _city_ is traversed by the fewest rivers ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that the least number of river traverses", "variables": {}}
{"nl": "what state 's high point is not _place_ and has an area smaller than _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state whose high point is not death valley and whose area is smaller than area of california", "variables": {}}
{"nl": "what state bordered by the _river_ does not have a _city_ capital ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that colorado river borders and whose capital is not sacramento", "variables": {}}
{"nl": "what state includes _city_ and has the high point of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that sacramento is contained by and that high point of california is contained by", "variables": {}}
{"nl": "which state without _mountain_ has the fewest _state_ high points ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what major city is within the most states ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string major_city ) ) ( string max ) ( string loc_city_state ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "city that is major and that is contained by the most number of state", "variables": {}}
{"nl": "what state bordered by the _river_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that colorado river borders and that has the largest area", "variables": {}}
{"nl": "which state does n't contain _city_ and also has a population not equal to the us population ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string population_state_count ) ( string ! = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that sacramento not is contained by and whose population is not population of usa", "variables": {}}
{"nl": "what city that does not contain _place_ has a smaller area than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) _place_ ) ( string area_city_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that death valley not is contained by and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what lake that is within _state_ has an area smaller than _lake_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string loc_lake_state ) ( string = ) _state_ ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "lake that is contained by california and whose area is smaller than area of lake tahoe", "variables": {}}
{"nl": "what is the high poin of a state not containing _city_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string high_point_state_place ) ) )", "can": "high point of state that sacramento not is contained by", "variables": {}}
{"nl": "what state is _lake_ not in with the fewest hig points of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string min ) ( call SW.reverse ( string loc_place_state ) ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state that lake tahoe not is contained by and that the least number of high point of california is contained by", "variables": {}}
{"nl": "what is the city outside of _state_ with an area greater than _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string ! = ) _state_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _lake_ ( string area_lake_length^2 ) ) ) )", "can": "city that not is contained by california and whose area is larger than area of lake tahoe", "variables": {}}
{"nl": "what city is not _city_ and contains the fewest places ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string ! = ) _name_ ) ( string min ) ( call SW.reverse ( string loc_place_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "city that not is named sacramento and that the least number of place is contained by", "variables": {}}
{"nl": "what state with a high point that is not _place_ has the most state borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string max ) ( call SW.reverse ( string next_to_state_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state whose high point is not death valley and that the most number of state borders", "variables": {}}
{"nl": "what city is not in _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "city that low point of california not is contained by", "variables": {}}
{"nl": "what state with the greatest amount of area also contains _mountain_ ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string = ) _mountain_ ) ( string max ) ( string area_state_length^2 ) ) )", "can": "state that mount whitney is contained by and that has the largest area", "variables": {}}
{"nl": "what state containing _lake_ has a capital that is not _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( string capital_state_city ) ( string ! = ) _city_ ) )", "can": "state that lake tahoe is contained by and whose capital is not sacramento", "variables": {}}
{"nl": "what state does not border nor is it within _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string next_to_state_state ) ( string ! = ) _state_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ) )", "can": "state that not borders california and that place not is contained by", "variables": {}}
{"nl": "what city contained by _state_ has an area equal to _state_ 's ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( string area_city_length^2 ) ( string = ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that is contained by california and whose area is area of california", "variables": {}}
{"nl": "what state not containing _mountain_ has the same low point as _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string low_point_state_place ) ) ) )", "can": "state that mount whitney not is contained by and whose low point is low point of california", "variables": {}}
{"nl": "what state is _place_ in that borders _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string = ) _state_ ) )", "can": "state that death valley is contained by and that california borders", "variables": {}}
{"nl": "the country contains which state not containing _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that death valley not is contained by and that is contained by country", "variables": {}}
{"nl": "what major lake has a samller area than _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.lake ) ( string ! type ) ) ( string major_lake ) ) ( string area_lake_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "lake that is major and whose area is smaller than area of california", "variables": {}}
{"nl": "what is the area of the state that _place_ is contained by ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ) )", "can": "area of state that death valley is contained by", "variables": {}}
{"nl": "what state has a low point in _place_ and that low point is the high point of _state_", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string low_point_state_place ) ( string = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose low point is death valley and whose low point is high point of california", "variables": {}}
{"nl": "which city not in the high point of   _state_ has _place_ in it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( call SW.reverse ( string loc_place_city ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "city that death valley is contained by and that high point of california not is contained by", "variables": {}}
{"nl": "what is the population of the state that _mountain_ is not contained by ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string population_state_count ) ) )", "can": "population of state that mount whitney not is contained by", "variables": {}}
{"nl": "which city in _state_ does n't have the _river_ going through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string loc_city_state ) ( string = ) _state_ ) ( call SW.reverse ( string traverse_river_city ) ) ( string ! = ) _river_ ) )", "can": "city that is contained by california and that colorado river not traverses", "variables": {}}
{"nl": "what state does the _river_ go through that shares a population with the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( string population_state_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state that colorado river traverses and whose population is population of usa", "variables": {}}
{"nl": "what is a place that is not in _city_ of share a high point of _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_city ) ( string ! = ) _city_ ) ( call SW.reverse ( string high_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that not is contained by sacramento and that is high point of california", "variables": {}}
{"nl": "which state does not have a high point of _place_ or share a capital with _state_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string high_point_state_place ) ( string ! = ) _place_ ) ( string capital_state_city ) ( string ! = ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "state whose high point is not death valley and whose capital is not capital of california", "variables": {}}
{"nl": "what river does not traverse _city_ and has a smaller length than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string len_river_length ) ( string < ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses sacramento and whose length is smaller than length of colorado river", "variables": {}}
{"nl": "which state is _city_ lovated in and is not contained by a mountain ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string = ) _city_ ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.mountain ) ( string ! type ) ) ) )", "can": "state that sacramento is contained by and that mountain not is contained by", "variables": {}}
{"nl": "which state has a smaller area than the usa and does n't contain _lake_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that lake tahoe not is contained by and whose area is smaller than area of usa", "variables": {}}
{"nl": "which state who 's low point is not in _place_ has a population smaller than the population of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string ! = ) _place_ ) ( string population_state_count ) ( string < ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "state whose low point is not death valley and whose population is smaller than population of usa", "variables": {}}
{"nl": "which state with an area smaller than _state_ does not have the _river_ going through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that colorado river not traverses and whose area is smaller than area of california", "variables": {}}
{"nl": "which city with an area larger than _state_ has the _river_ going through it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string area_city_length^2 ) ( string > ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "city that colorado river traverses and whose area is larger than area of california", "variables": {}}
{"nl": "which river that borders _state_ traverses through the least number of capitals ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string next_to_river_state ) ( string = ) _state_ ) ( string min ) ( string traverse_river_city ) ( call SW.getProperty _state_ ( string capital_state_city ) ) ) )", "can": "river that borders california and that traverses the least number of capital of california", "variables": {}}
{"nl": "which state that _mountain_ is not contained by has the smallest density ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_mountain_state ) ) ( string ! = ) _mountain_ ) ( string min ) ( string density_state_count ) ) )", "can": "state that mount whitney not is contained by and that has the smallest density", "variables": {}}
{"nl": "which city that is named _city_ has the largest area ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string city_name ) ( string = ) _name_ ) ( string max ) ( string area_city_length^2 ) ) )", "can": "city that is named sacramento and that has the largest area", "variables": {}}
{"nl": "what city is a state capital and also the _river_ running though it ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_city ) ) ( string = ) _river_ ) ( string capital_city ) ) )", "can": "city that colorado river traverses and that is a capital", "variables": {}}
{"nl": "which state does n't have _lake_ or _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string ! = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe not is contained by and that death valley not is contained by", "variables": {}}
{"nl": "which city is the least populated ?", "lf": "( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( string min ) ( string population_city_count ) ) )", "can": "city that has the smallest population", "variables": {}}
{"nl": "what place has the same elevation as _mountain_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string elevation_place_length ) ( string = ) ( call SW.getProperty _mountain_ ( string elevation_mountain_length ) ) ) )", "can": "place whose elevation is elevation of mount whitney", "variables": {}}
{"nl": "which state is the location of _place_ and is larger than the area of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string = ) _place_ ) ( string area_state_length^2 ) ( string > ) ( call SW.getProperty fb:en.country.usa ( string area_country_length^2 ) ) ) )", "can": "state that death valley is contained by and whose area is larger than area of usa", "variables": {}}
{"nl": "which city is the location of _place_ with the population of the usa ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string loc_place_city ) ) ( string = ) _place_ ) ( string population_city_count ) ( string = ) ( call SW.getProperty fb:en.country.usa ( string population_country_count ) ) ) )", "can": "city that death valley is contained by and whose population is population of usa", "variables": {}}
{"nl": "which city in _state_ has the most rivers and is the state capital ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string max ) ( call SW.reverse ( string traverse_river_city ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "city that is capital of california and that the most number of river traverses", "variables": {}}
{"nl": "what state borders the _river_ and is within a contury ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string next_to_river_state ) ) ( string = ) _river_ ) ( string loc_state_country ) ( string = ) ( call SW.getProperty ( call SW.singleton fb:en.country ) ( string ! type ) ) ) )", "can": "state that colorado river borders and that is contained by country", "variables": {}}
{"nl": "which city is named the least and is the capital of _state_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.city ) ( string ! type ) ) ( call SW.reverse ( string capital_state_city ) ) ( string = ) _state_ ) ( string min ) ( string city_name ) ( call SW.getProperty ( call SW.singleton fb:en.name ) ( string ! type ) ) ) )", "can": "city that is capital of california and that is named the least number of name", "variables": {}}
{"nl": "what is the low point of a state not containing _place_ ?", "lf": "( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) ( string low_point_state_place ) ) )", "can": "low point of state that death valley not is contained by", "variables": {}}
{"nl": "what state contains _lake_ but not _place_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_lake_state ) ) ( string = ) _lake_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) _place_ ) )", "can": "state that lake tahoe is contained by and that death valley not is contained by", "variables": {}}
{"nl": "what state not traversed by the _river_ has the smallest number of river borders ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string ! = ) _river_ ) ( string min ) ( call SW.reverse ( string next_to_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state that colorado river not traverses and that the least number of river borders", "variables": {}}
{"nl": "which river is as long as the _river_ and does not go through _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_city ) ( string ! = ) _city_ ) ( string len_river_length ) ( string = ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river that not traverses sacramento and whose length is length of colorado river", "variables": {}}
{"nl": "which state is smaller than _state_ and is not the location of _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string loc_city_state ) ) ( string ! = ) _city_ ) ( string area_state_length^2 ) ( string < ) ( call SW.getProperty _state_ ( string area_state_length^2 ) ) ) )", "can": "state that sacramento not is contained by and whose area is smaller than area of california", "variables": {}}
{"nl": "which state has the most number of rivers running through it and also has its lowest point in _place_ ?", "lf": "( call SW.listValue ( call SW.countSuperlative ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string low_point_state_place ) ( string = ) _place_ ) ( string max ) ( call SW.reverse ( string traverse_river_state ) ) ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ) )", "can": "state whose low point is death valley and that the most number of river traverses", "variables": {}}
{"nl": "what river is longer than the _river_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string len_river_length ) ( string > ) ( call SW.getProperty _river_ ( string len_river_length ) ) ) )", "can": "river whose length is larger than length of colorado river", "variables": {}}
{"nl": "what place in _state_ contains _state_ 's low point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.place ) ( string ! type ) ) ( string loc_place_state ) ( string = ) _state_ ) ( call SW.reverse ( string low_point_state_place ) ) ( string = ) _state_ ) )", "can": "place that is contained by california and that is low point of california", "variables": {}}
{"nl": "what state traversed by the _river_ does not border a state ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( call SW.reverse ( string traverse_river_state ) ) ( string = ) _river_ ) ( call SW.reverse ( string next_to_state_state ) ) ( string ! = ) ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ) )", "can": "state that colorado river traverses and that state not borders", "variables": {}}
{"nl": "how long is the river that goes through _state_ ?", "lf": "( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.river ) ( string ! type ) ) ( string traverse_river_state ) ( string = ) _state_ ) ( string len_river_length ) ) ) )", "can": "total length of river that traverses california", "variables": {}}
{"nl": "what state with a capital other than _city_ has a low point that is not _state_ 's high point ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string ! = ) _city_ ) ( string low_point_state_place ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is not sacramento and whose low point is not high point of california", "variables": {}}
{"nl": "which state is not contained by the high point of _state_ has a capital named _city_ ?", "lf": "( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton fb:en.state ) ( string ! type ) ) ( string capital_state_city ) ( string = ) _city_ ) ( call SW.reverse ( string loc_place_state ) ) ( string ! = ) ( call SW.getProperty _state_ ( string high_point_state_place ) ) ) )", "can": "state whose capital is sacramento and that high point of california not is contained by", "variables": {}}
