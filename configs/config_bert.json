local embedding_dim = 768;
local num_epoch = 30;
local encoder_output_dim = embedding_dim;
local num_train_examples = 5000;
local num_epoch = 30;
local batch_size = 32;
local total_train_steps = num_train_examples / batch_size * num_epoch;


{
  "dataset_reader": {
    "type": "seq2seq_with_copy",
    "pretrained_encoder_name": "bert-base-uncased",
    "add_canonical_variable_names_to_vocabulary": false
  },
  "vocabulary": {
    "min_count": {
      "source_tokens": 2,
      "target_tokens": 1
    }
  },
  "train_data_path": "data/train_geo_nat.json",
  "validation_data_path": "data/dev_geo_nat.json",
  "test_data_path": "data/test_geo.json",
  "evaluate_on_test": true,
  "model": {
    "type": "seq2seq_with_copy",
    "source_embedder": {
      "token_embedders": {
        "tokens": {
          "type": "pretrained_transformer",
          "model_name": "bert-base-uncased"
        }
      }
    },
    "encoder": {
      "type": "pass_through",
      "input_dim": embedding_dim,
    },
    "attention": {
      "type": "bilinear",
      "vector_dim": 256,
      "matrix_dim": encoder_output_dim
    },
    "target_embedding_dim": 128,
    "decoder_hidden_dim": 256,
    "num_decoder_layers": 1,
    "decoder_dropout": 0.2,
    "beam_size": 5,
    "max_decoding_steps": 100,
    "token_based_metric": "token_sequence_accuracy",
  },
  "data_loader": {
    "batch_sampler": {
      "type": "bucket",
      "batch_size": batch_size,
      "sorting_keys": ["target_tokens", "source_tokens"]
    }
  },
  "trainer": {
    "num_epochs": num_epoch,
    "validation_after_epoch": 10,
    "optimizer": {
      "type": "huggingface_adamw",
      "parameter_groups": [
        [["_source_embedder\\..*\\.bias", "_source_embedder\\..*\\.LayerNorm\\.weight"], {"weight_decay": 0.0}],
        [["^(?!_source_embedder)"], {"lr": 1e-3}],
      ],
      "lr": 3e-5,
      "weight_decay": 0.01
    },
    "learning_rate_scheduler": {
        "type": "polynomial_decay",
        // "num_epochs": num_epoch,
        "end_learning_rate": 0.0,
        "warmup_steps": total_train_steps * 0.1,
        // "num_steps_per_epoch": 100
        //"total_steps": total_train_steps
    },
    "grad_norm": 5.0,
    "validation_metric": "+seq_acc",
    "patience": 10,
    "cuda_device": -1
  }
}
